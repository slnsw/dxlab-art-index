{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/Header/Header.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport HeaderNav from '../HeaderNav/HeaderNav';\nimport Menu from '../Menu';\nimport DXLabLogo from '../DXLabLogo';\nimport SLNSWLogo from '../SLNSWLogo';\nimport MenuIconButton from '../MenuIconButton/MenuIconButton';\nimport { useLockBodyScroll } from '../../lib/hooks/use-lock-body-scroll';\n\nconst Header = ({\n  menuItems = [],\n  pathname\n}) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  useLockBodyScroll(isMenuOpen);\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return __jsx(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(DXLabLogo, {\n    className: \"logo logo--dxlab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(HeaderNav, {\n    isOpen: isMenuOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Menu, {\n    id: \"primary-menu\",\n    className: ['primary-menu', isMenuOpen ? 'is-active' : ''].join(' '),\n    menuItemClassName: \"primary-menu__item\",\n    labelledby: \"primary-menu-button\",\n    menuItems: menuItems.map(item => _objectSpread(_objectSpread({}, item), {}, {\n      isActive: // Enable 'blog' to be highlighted on blog posts\n      pathname && pathname.split('/')[1] === 'blog' && item.url === '/blog'\n    })),\n    pathname: pathname,\n    onMenuItemClick: handleMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), __jsx(SLNSWLogo, {\n    className: \"logo logo--slnsw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(MenuIconButton, {\n    isOpen: isMenuOpen,\n    id: \"primary-menu-button\",\n    className: \"header__menu-button\",\n    \"aria-controls\": \"primary-menu\",\n    \"aria-label\": \"primary menu\",\n    onClick: handleMenuToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/Header/Header.tsx"],"names":["React","HeaderNav","Menu","DXLabLogo","SLNSWLogo","MenuIconButton","useLockBodyScroll","Header","menuItems","pathname","isMenuOpen","setIsMenuOpen","useState","handleMenuToggle","join","map","item","isActive","split","url"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;;AAOA,MAAMC,MAAuB,GAAG,CAAC;AAAEC,EAAAA,SAAS,GAAG,EAAd;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAChE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAApC;AAEAN,EAAAA,iBAAiB,CAACI,UAAD,CAAjB;;AAEA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,SACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,SAAS,EAAE,CAAC,cAAD,EAAiBA,UAAU,GAAG,WAAH,GAAiB,EAA5C,EAAgDI,IAAhD,CAAqD,GAArD,CAFb;AAGE,IAAA,iBAAiB,EAAC,oBAHpB;AAIE,IAAA,UAAU,EAAC,qBAJb;AAKE,IAAA,SAAS,EAAEN,SAAS,CAACO,GAAV,CAAeC,IAAD,oCACpBA,IADoB;AAEvBC,MAAAA,QAAQ,EACN;AACAR,MAAAA,QAAQ,IACRA,QAAQ,CAACS,KAAT,CAAe,GAAf,EAAoB,CAApB,MAA2B,MAD3B,IAEAF,IAAI,CAACG,GAAL,KAAa;AANQ,MAAd,CALb;AAaE,IAAA,QAAQ,EAAEV,QAbZ;AAcE,IAAA,eAAe,EAAEI,gBAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAsBE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EAwBE,MAAC,cAAD;AACE,IAAA,MAAM,EAAEH,UADV;AAEE,IAAA,EAAE,EAAC,qBAFL;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,qBAAc,cAJhB;AAKE,kBAAW,cALb;AAME,IAAA,OAAO,EAAEG,gBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CADF;AAmCD,CA5CD;;AA8CA,eAAeN,MAAf","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport HeaderNav from '../HeaderNav/HeaderNav';\nimport Menu from '../Menu';\nimport DXLabLogo from '../DXLabLogo';\nimport SLNSWLogo from '../SLNSWLogo';\nimport MenuIconButton from '../MenuIconButton/MenuIconButton';\nimport { useLockBodyScroll } from '../../lib/hooks/use-lock-body-scroll';\n\ntype Props = {\n  menuItems?: any[];\n  pathname: string;\n};\n\nconst Header: React.FC<Props> = ({ menuItems = [], pathname }) => {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  useLockBodyScroll(isMenuOpen);\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <header className=\"header\">\n      <DXLabLogo className=\"logo logo--dxlab\" />\n\n      <HeaderNav isOpen={isMenuOpen}>\n        <Menu\n          id=\"primary-menu\"\n          className={['primary-menu', isMenuOpen ? 'is-active' : ''].join(' ')}\n          menuItemClassName=\"primary-menu__item\"\n          labelledby=\"primary-menu-button\"\n          menuItems={menuItems.map((item) => ({\n            ...item,\n            isActive:\n              // Enable 'blog' to be highlighted on blog posts\n              pathname &&\n              pathname.split('/')[1] === 'blog' &&\n              item.url === '/blog',\n          }))}\n          pathname={pathname}\n          onMenuItemClick={handleMenuToggle}\n        />\n      </HeaderNav>\n\n      <SLNSWLogo className=\"logo logo--slnsw\" />\n\n      <MenuIconButton\n        isOpen={isMenuOpen}\n        id=\"primary-menu-button\"\n        className=\"header__menu-button\"\n        aria-controls=\"primary-menu\"\n        aria-label=\"primary menu\"\n        onClick={handleMenuToggle}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}