{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/StackedBarChart/StackedBarChart.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport render from 'd3-render';\nimport useDimensions from '../../lib/hooks/use-dimensions';\nimport css from './StackedBarChart.module.scss';\nvar defaultMargin = {\n  top: 10,\n  left: 40,\n  right: 10,\n  bottom: 20\n};\n\nvar StackedBarChart = function StackedBarChart(_ref) {\n  _s();\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 200 : _ref$height,\n      _ref$margin = _ref.margin,\n      newMargin = _ref$margin === void 0 ? defaultMargin : _ref$margin,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'vertical' : _ref$direction,\n      _ref$rotateXAxis = _ref.rotateXAxis,\n      rotateXAxis = _ref$rotateXAxis === void 0 ? false : _ref$rotateXAxis,\n      _ref$showValues = _ref.showValues,\n      showValues = _ref$showValues === void 0 ? false : _ref$showValues,\n      renderBar = _ref.renderBar,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'bar-chart' : _ref$id,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"data\", \"height\", \"margin\", \"direction\", \"rotateXAxis\", \"showValues\", \"renderBar\", \"id\", \"className\"]);\n\n  // const [hoverIndex, setHoverIndex] = React.useState(null);\n  var _useDimensions = useDimensions(),\n      _useDimensions2 = _slicedToArray(_useDimensions, 3),\n      svgRef = _useDimensions2[0],\n      dimensions = _useDimensions2[1],\n      svgNode = _useDimensions2[2];\n\n  var width = dimensions.width;\n\n  var margin = _objectSpread(_objectSpread({}, defaultMargin), newMargin);\n\n  React.useEffect(function () {\n    if (svgNode && data.length > 0 && width) {\n      var columns = Object.keys(data[0]).map(function (key) {\n        return key;\n      });\n      var series = d3.stack().keys(function () {\n        return columns.slice(1);\n      }).offset(d3.stackOffsetExpand)(data);\n      var x = d3.scaleTime().domain(d3.extent(data, function (d) {\n        return d.year;\n      })).range([margin.left, width - margin.right]);\n      var y = d3.scaleLinear().range([height - margin.bottom, margin.top]);\n      var area = d3.area().curve(d3.curveStep).x(function (d) {\n        return x(d.data.year);\n      }).y0(function (d) {\n        return y(d[0]);\n      }).y1(function (d) {\n        return y(d[1]);\n      });\n      var color = d3.scaleOrdinal().domain(columns.slice(1)).range(d3.schemeCategory10);\n\n      var xAxis = function xAxis(g) {\n        return g.attr('transform', \"translate(0,\".concat(height - margin.bottom, \")\")).call(d3.axisBottom(x).ticks(width / 80).tickSizeOuter(0).tickFormat(d3.format('d')));\n      };\n\n      var yAxis = function yAxis(g) {\n        return g.attr('transform', \"translate(\".concat(margin.left, \",0)\")).call(d3.axisLeft(y).ticks(10, '%')).call(function (s) {\n          return s.select('.domain').remove();\n        });\n      };\n\n      var renderData = [{\n        key: 'g',\n        append: 'g',\n        children: series.map(function (d, i) {\n          return _objectSpread({\n            key: \"\".concat(d.key),\n            append: 'path',\n            fill: color(d.key),\n            opacity: {\n              enter: 1,\n              exit: 0\n            },\n            d: {\n              enter: area(d),\n              exit: area(d)\n            },\n            duration: 1000\n          }, typeof renderBar === 'function' ? renderBar(d, i) : {});\n        })\n      }, {\n        append: 'g',\n        \"class\": 'x-axis',\n        call: xAxis\n      }, {\n        append: 'g',\n        call: yAxis\n      }];\n      render(svgNode, renderData);\n\n      if (rotateXAxis) {\n        d3.selectAll(\"#\".concat(id, \" .x-axis text\")).style('text-anchor', 'end').attr('dx', '-1em').attr('dy', '-.5em').attr('transform', 'rotate(-90)');\n      }\n    }\n  }, [svgNode, data, width, height, margin, renderBar, rotateXAxis, id]);\n  return __jsx(\"svg\", _extends({\n    ref: svgRef,\n    width: width,\n    height: height,\n    id: id,\n    className: [css.stackedBarChart, className || ''].join(' ')\n  }, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(StackedBarChart, \"uxm/rFxBZPSJa9IMhvwijg0RKVg=\", false, function () {\n  return [useDimensions];\n});\n\n_c = StackedBarChart;\nStackedBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default StackedBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/StackedBarChart/StackedBarChart.tsx"],"names":["React","PropTypes","d3","render","useDimensions","css","defaultMargin","top","left","right","bottom","StackedBarChart","data","height","margin","newMargin","direction","rotateXAxis","showValues","renderBar","id","className","restProps","svgRef","dimensions","svgNode","width","useEffect","length","columns","Object","keys","map","key","series","stack","slice","offset","stackOffsetExpand","x","scaleTime","domain","extent","d","year","range","y","scaleLinear","area","curve","curveStep","y0","y1","color","scaleOrdinal","schemeCategory10","xAxis","g","attr","call","axisBottom","ticks","tickSizeOuter","tickFormat","format","yAxis","axisLeft","s","select","remove","renderData","append","children","i","fill","opacity","enter","exit","duration","selectAll","style","stackedBarChart","join","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport render from 'd3-render';\n\nimport useDimensions from '../../lib/hooks/use-dimensions';\n\nimport css from './StackedBarChart.module.scss';\n\ntype Props = {\n  data: {\n    [key: string]: number;\n  }[];\n  height?: number;\n  margin?: {\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n  };\n  direction?: 'vertical' | 'horizontal';\n  rotateXAxis?: boolean;\n  showValues?: boolean;\n  renderBar?: Function;\n  id?: string;\n  className?: string;\n};\n\nconst defaultMargin = {\n  top: 10,\n  left: 40,\n  right: 10,\n  bottom: 20,\n};\n\nconst StackedBarChart: React.FC<Props> = ({\n  data = [],\n  // width: propWidth,\n  height = 200,\n  margin: newMargin = defaultMargin,\n  direction = 'vertical',\n  rotateXAxis = false,\n  showValues = false,\n  renderBar,\n  id = 'bar-chart',\n  className,\n  ...restProps\n}) => {\n  // const [hoverIndex, setHoverIndex] = React.useState(null);\n  const [svgRef, dimensions, svgNode] = useDimensions();\n  const { width } = dimensions;\n  const margin = {\n    ...defaultMargin,\n    ...newMargin,\n  };\n\n  React.useEffect(() => {\n    if (svgNode && data.length > 0 && width) {\n      const columns = Object.keys(data[0]).map((key) => key);\n\n      const series = d3\n        .stack()\n        .keys(() => {\n          return columns.slice(1);\n        })\n        .offset(d3.stackOffsetExpand)(data);\n\n      const x = d3\n        .scaleTime()\n        .domain(\n          d3.extent(data, (d) => {\n            return d.year;\n          }),\n        )\n        .range([margin.left, width - margin.right]);\n\n      const y = d3.scaleLinear().range([height - margin.bottom, margin.top]);\n\n      const area = d3\n        .area()\n        .curve(d3.curveStep)\n        .x((d) => x(d.data.year))\n        .y0((d) => y(d[0]))\n        .y1((d) => y(d[1]));\n\n      const color = d3\n        .scaleOrdinal()\n        .domain(columns.slice(1))\n        .range(d3.schemeCategory10);\n\n      const xAxis = (g) =>\n        g.attr('transform', `translate(0,${height - margin.bottom})`).call(\n          d3\n            .axisBottom(x)\n            .ticks(width / 80)\n            .tickSizeOuter(0)\n            .tickFormat(d3.format('d')),\n        );\n\n      const yAxis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .call(d3.axisLeft(y).ticks(10, '%'))\n          .call((s) => s.select('.domain').remove());\n\n      const renderData = [\n        {\n          key: 'g',\n          append: 'g',\n          children: series.map((d, i) => {\n            return {\n              key: `${d.key}`,\n              append: 'path',\n              fill: color(d.key),\n              opacity: { enter: 1, exit: 0 },\n              d: { enter: area(d), exit: area(d) },\n              duration: 1000,\n              ...(typeof renderBar === 'function' ? renderBar(d, i) : {}),\n            };\n          }),\n        },\n        {\n          append: 'g',\n          class: 'x-axis',\n          call: xAxis,\n        },\n        {\n          append: 'g',\n          call: yAxis,\n        },\n      ];\n\n      render(svgNode, renderData);\n\n      if (rotateXAxis) {\n        d3.selectAll(`#${id} .x-axis text`)\n          .style('text-anchor', 'end')\n          .attr('dx', '-1em')\n          .attr('dy', '-.5em')\n          .attr('transform', 'rotate(-90)');\n      }\n    }\n  }, [svgNode, data, width, height, margin, renderBar, rotateXAxis, id]);\n\n  return (\n    <svg\n      ref={svgRef}\n      width={width}\n      height={height}\n      id={id}\n      className={[css.stackedBarChart, className || ''].join(' ')}\n      {...restProps}\n    />\n  );\n};\n\nStackedBarChart.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default StackedBarChart;\n"]},"metadata":{},"sourceType":"module"}