{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderPriceChart/ArtIndexGenderPriceChart.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport LineChart from '../LineChart';\nimport ArtIndexGenderLegend from '../ArtIndexGenderLegend';\nimport { getGenderColour } from '../../lib/art-index-utils';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport css from './ArtIndexGenderPriceChart.module.scss';\n\nvar ArtIndexGenderPriceChart = function ArtIndexGenderPriceChart(_ref) {\n  _s();\n\n  var className = _ref.className;\n\n  var _useArtIndex = useArtIndex(),\n      state = _useArtIndex.state;\n\n  var priceData = state.priceData;\n  var priceDataUpdated = [].concat(_toConsumableArray(priceData), [{\n    name: '1901',\n    value: 6.83,\n    type: 'female'\n  }, {\n    name: '1901',\n    value: 16.4,\n    type: 'male'\n  }]);\n  return __jsx(\"div\", {\n    className: [css.artIndexGenderPriceChart, className || ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(ArtIndexGenderLegend, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(LineChart, {\n    height: 350,\n    data: priceDataUpdated.length > 0 && [priceDataUpdated.filter(function (d) {\n      return d.type === 'male';\n    }).map(function (d) {\n      return {\n        date: new Date(parseInt(d.name, 10), 0, 0),\n        value: d.value\n      };\n    }), priceDataUpdated.filter(function (d) {\n      return d.type === 'female';\n    }).map(function (d) {\n      return {\n        date: new Date(parseInt(d.name, 10), 0, 0),\n        value: d.value\n      };\n    })],\n    rotateXAxis: true,\n    margin: {\n      top: 20,\n      bottom: 50\n    },\n    renderLine: function renderLine(d, i) {\n      return {\n        stroke: i === 0 ? getGenderColour('male') : getGenderColour('female')\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ArtIndexGenderPriceChart, \"IM4lHED7Ilr2aQoUjVlR3UGuePM=\", false, function () {\n  return [useArtIndex];\n});\n\n_c = ArtIndexGenderPriceChart;\nexport default ArtIndexGenderPriceChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexGenderPriceChart\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderPriceChart/ArtIndexGenderPriceChart.tsx"],"names":["React","LineChart","ArtIndexGenderLegend","getGenderColour","useArtIndex","css","ArtIndexGenderPriceChart","className","state","priceData","priceDataUpdated","name","value","type","artIndexGenderPriceChart","join","length","filter","d","map","date","Date","parseInt","top","bottom","i","stroke"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AAEA,OAAOC,GAAP,MAAgB,wCAAhB;;AAMA,IAAMC,wBAAyC,GAAG,SAA5CA,wBAA4C,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,qBACjDH,WAAW,EADsC;AAAA,MAC3DI,KAD2D,gBAC3DA,KAD2D;;AAAA,MAE3DC,SAF2D,GAE7CD,KAF6C,CAE3DC,SAF2D;AAGnE,MAAMC,gBAAgB,gCAGjBD,SAHiB,IAIpB;AAAEE,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,IAAvB;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAJoB,EAKpB;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,IAAvB;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GALoB,EAAtB;AAQA,SACE;AAAK,IAAA,SAAS,EAAE,CAACR,GAAG,CAACS,wBAAL,EAA+BP,SAAS,IAAI,EAA5C,EAAgDQ,IAAhD,CAAqD,GAArD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,SAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,IAAI,EACFL,gBAAgB,CAACM,MAAjB,GAA0B,CAA1B,IAA+B,CAC7BN,gBAAgB,CACbO,MADH,CACU,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACL,IAAF,KAAW,MAAlB;AAAA,KADV,EAEGM,GAFH,CAEO,UAACD,CAAD,EAAO;AACV,aAAO;AACLE,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASC,QAAQ,CAACJ,CAAC,CAACP,IAAH,EAAS,EAAT,CAAjB,EAA+B,CAA/B,EAAkC,CAAlC,CADD;AAELC,QAAAA,KAAK,EAAEM,CAAC,CAACN;AAFJ,OAAP;AAID,KAPH,CAD6B,EAS7BF,gBAAgB,CACbO,MADH,CACU,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACL,IAAF,KAAW,QAAlB;AAAA,KADV,EAEGM,GAFH,CAEO,UAACD,CAAD,EAAO;AACV,aAAO;AACLE,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASC,QAAQ,CAACJ,CAAC,CAACP,IAAH,EAAS,EAAT,CAAjB,EAA+B,CAA/B,EAAkC,CAAlC,CADD;AAELC,QAAAA,KAAK,EAAEM,CAAC,CAACN;AAFJ,OAAP;AAID,KAPH,CAT6B,CAHnC;AAsBE,IAAA,WAAW,EAAE,IAtBf;AAuBE,IAAA,MAAM,EAAE;AACNW,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,MAAM,EAAE;AAFF,KAvBV;AA2BE,IAAA,UAAU,EAAE,oBAACN,CAAD,EAAIO,CAAJ,EAAU;AACpB,aAAO;AACLC,QAAAA,MAAM,EACJD,CAAC,KAAK,CAAN,GAAUtB,eAAe,CAAC,MAAD,CAAzB,GAAoCA,eAAe,CAAC,QAAD;AAFhD,OAAP;AAID,KAhCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAwCD,CAnDD;;GAAMG,wB;UACcF,W;;;KADdE,wB;AAqDN,eAAeA,wBAAf","sourcesContent":["import React from 'react';\n\nimport LineChart from '../LineChart';\nimport ArtIndexGenderLegend from '../ArtIndexGenderLegend';\n\nimport { getGenderColour } from '../../lib/art-index-utils';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\n\nimport css from './ArtIndexGenderPriceChart.module.scss';\n\ntype Props = {\n  className?: string;\n};\n\nconst ArtIndexGenderPriceChart: React.FC<Props> = ({ className }) => {\n  const { state } = useArtIndex();\n  const { priceData } = state;\n  const priceDataUpdated = [\n    // just repeating the last data points to encourge\n    // the graph to display the 1900 year in the x-axis.\n    ...priceData,\n    { name: '1901', value: 6.83, type: 'female' },\n    { name: '1901', value: 16.4, type: 'male' },\n  ];\n\n  return (\n    <div className={[css.artIndexGenderPriceChart, className || ''].join(' ')}>\n      <ArtIndexGenderLegend />\n\n      <LineChart\n        height={350}\n        data={\n          priceDataUpdated.length > 0 && [\n            priceDataUpdated\n              .filter((d) => d.type === 'male')\n              .map((d) => {\n                return {\n                  date: new Date(parseInt(d.name, 10), 0, 0),\n                  value: d.value,\n                };\n              }),\n            priceDataUpdated\n              .filter((d) => d.type === 'female')\n              .map((d) => {\n                return {\n                  date: new Date(parseInt(d.name, 10), 0, 0),\n                  value: d.value,\n                };\n              }),\n          ]\n        }\n        rotateXAxis={true}\n        margin={{\n          top: 20,\n          bottom: 50,\n        }}\n        renderLine={(d, i) => {\n          return {\n            stroke:\n              i === 0 ? getGenderColour('male') : getGenderColour('female'),\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ArtIndexGenderPriceChart;\n"]},"metadata":{},"sourceType":"module"}