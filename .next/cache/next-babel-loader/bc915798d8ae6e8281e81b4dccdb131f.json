{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexExplore/ArtIndexExplore.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\nimport Link from '../Link';\nimport HierarchyColumnBrowser from '../HierarchyColumnBrowser';\nimport Icon from '../Icon';\n\nconst ArtIndexExplore = () => {\n  const [rawData, setRawData] = React.useState([]);\n  const [data, setData] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n  const [listOfColumns, setListOfColumns] = React.useState([{\n    type: 'chooser',\n    id: 0,\n    index: 0,\n    key: null,\n    data: null\n  }]);\n  const columnTypes = ['chooser', // this one is special\n  'years', 'exhibitions', 'artists', 'works', 'format', 'price', 'gender'];\n  const typeToField = {\n    // this is the field name we use for grouping\n    years: 'exhibitionYear',\n    exhibitions: 'exhibitionName',\n    artists: 'artistId',\n    works: 'id',\n    format: 'mediumFormat',\n    price: 'price',\n    gender: 'artistGender'\n  };\n  React.useEffect(() => {\n    d3.csv( // '/data/australian-art-exhibition-catalogue-index-1845-1900-new.csv',\n    '/art-index/data/works.csv').then(newData => {\n      setRawData(newData);\n      const loc = {\n        type: 'chooser',\n        id: 0,\n        index: 0,\n        key: null,\n        data: newData\n      };\n      setListOfColumns([loc]);\n    });\n  }, []);\n  React.useEffect(() => {\n    const columnTypesLocal = ['chooser', // this one is special\n    'years', 'exhibitions', 'artists', 'works', 'format', 'price', 'gender'];\n    const typeToFieldLocal = {\n      // this is the field name we use for grouping\n      years: 'exhibitionYear',\n      exhibitions: 'exhibitionName',\n      artists: 'artistId',\n      works: 'id',\n      format: 'mediumFormat',\n      price: 'price',\n      gender: 'artistGender'\n    };\n    let initialData = columnTypesLocal.map((type, i) => {\n      const groupingField = typeToFieldLocal[type];\n      const tempGroupedData = d3Array.group(rawData, d => d[groupingField]);\n      const childCount = tempGroupedData.size;\n      const out = {\n        id: i.toString(),\n        title: type,\n        parentId: 'top',\n        childrenTotal: childCount,\n        type: 'chooser',\n        columnIndex: 0\n      };\n      return out;\n    });\n    initialData.shift();\n    initialData = initialData.sort((a, b) => {\n      if (a.childrenTotal < b.childrenTotal) {\n        return 1;\n      }\n\n      if (a.childrenTotal > b.childrenTotal) {\n        return -1;\n      }\n\n      return 0;\n    });\n    setData(initialData);\n  }, [rawData]); // , columnTypes, typeToField\n\n  React.useEffect(() => {\n    setItems(data.map(d => {\n      if (d.parentId === 'top') {\n        return _objectSpread(_objectSpread({}, d), {}, {\n          parentId: null\n        });\n      }\n\n      return _objectSpread({}, d);\n    }));\n  }, [data]);\n\n  const formatPrice = p => {\n    if (!p) {\n      return '';\n    }\n\n    const pounds = Math.floor(p);\n    const allPence = Math.round((p - pounds) * 240);\n    const shillings = Math.floor(allPence / 12);\n    const pence = allPence - shillings * 12;\n    return `Â£${pounds} ${shillings}s ${pence}d`;\n  };\n\n  const doOnChange = (event, {\n    item,\n    rowIndex,\n    listIndex\n  }) => {\n    // remove stuff that will no longer be displayed\n    const prevData = data.filter(e => e.columnIndex === 0 || e.columnIndex <= listIndex);\n    const newListOfColumns = listOfColumns.filter(e => e.index === 0 || e.index <= listIndex); // find new data to add\n\n    const newType = item.type === 'chooser' ? item.title : 'chooser';\n    let groupedData;\n    let narrowedData;\n\n    if (item.type === 'chooser') {\n      // group data\n      const dataToWorkOn = newListOfColumns[listIndex].data;\n      const groupBy = typeToField[item.title];\n      groupedData = d3Array.group(dataToWorkOn, d => d[groupBy]);\n    } else {\n      // narrow data\n      const preNarrowedData = newListOfColumns[newListOfColumns.length - 1].data;\n      narrowedData = preNarrowedData.get(item.key);\n    }\n\n    const newColumnListData = {\n      type: newType,\n      id: item.id,\n      key: item.type === 'chooser' ? null : item.key,\n      index: listIndex + 1,\n      data: item.type === 'chooser' ? groupedData : narrowedData\n    };\n    newListOfColumns.push(newColumnListData);\n    setListOfColumns(newListOfColumns);\n    let newData = [];\n    const currentColumnTypes = newListOfColumns.map(d => {\n      return d.type;\n    }).filter(d => {\n      return d !== 'chooser';\n    });\n    const otherColumnTypes = columnTypes.filter(d => {\n      return currentColumnTypes.indexOf(d) < 0;\n    });\n    otherColumnTypes.shift();\n\n    if (newType === 'chooser') {\n      // new column is a type choosing column\n      newData = otherColumnTypes.map((type, i) => {\n        const groupingField = typeToField[type];\n        const tempGroupedData = d3Array.group(narrowedData, d => d[groupingField]);\n        const childCount = tempGroupedData.size;\n        const l = prevData.length + i + 1;\n        const out = {\n          id: l.toString(),\n          title: type,\n          parentId: item.id.toString(),\n          childrenTotal: childCount,\n          type: 'chooser',\n          columnIndex: listIndex + 1\n        };\n        return out;\n      });\n      newData = newData.sort((a, b) => {\n        if (a.childrenTotal < b.childrenTotal) {\n          return 1;\n        }\n\n        if (a.childrenTotal > b.childrenTotal) {\n          return -1;\n        }\n\n        return 0;\n      });\n    } else {\n      let id = prevData.length;\n      const newDataToId = [];\n      groupedData.forEach((value, key) => {\n        id += 1;\n        newDataToId[key] = id;\n        let thisTitle;\n\n        if (item.title === 'artists') {\n          thisTitle = value[0].artistFirstName || value[0].artistLastName ? `${value[0].artistFirstName} ${value[0].artistLastName}` : 'unknown';\n        } else if (item.title === 'works') {\n          thisTitle = `${value[0].title}${value[0].medium || value[0].format ? ' (' : ''}${value[0].medium}${value[0].medium && value[0].format ? ' ' : ''}${value[0].format}${value[0].medium || value[0].format ? ')' : ''}`;\n        } else if (item.title === 'price') {\n          thisTitle = key ? formatPrice(key) : '';\n        } else {\n          thisTitle = key;\n        }\n\n        let link;\n\n        if (item.title === 'artists') {\n          link = `/art-index/artist/${value[0].artistId}`;\n        } else if (item.title === 'works') {\n          link = `/art-index/work/${value[0].id}`;\n        } else if (item.title === 'exhibitions') {\n          link = `/art-index/exhibition/${value[0].exhibitionId}`;\n        } else if (item.title === 'format') {\n          link = `/art-index/search/?formats=${value[0].mediumFormat.toLowerCase()}`;\n        } else if (item.title === 'years') {\n          link = `/art-index/search/?search=${value[0].exhibitionYear}`;\n        }\n\n        newData.push({\n          id: id.toString(),\n          title: thisTitle,\n          parentId: item.id,\n          childrenTotal: 0,\n          columnIndex: listIndex + 1,\n          type: newType,\n          key,\n          link\n        });\n      });\n      newData = newData.sort((a, b) => {\n        if (a.title < b.title) {\n          return newType === 'price' ? 1 : -1;\n        }\n\n        if (a.title > b.title) {\n          return newType === 'price' ? -1 : 1;\n        }\n\n        return 0;\n      });\n    }\n\n    setData([...prevData, ...newData]);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      maxWidth: '80rem',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, __jsx(HierarchyColumnBrowser, {\n    items: items,\n    originId: \"1\",\n    rowHeight: computeRowHeight,\n    colWidth: computeColWidth,\n    rowComponent: RowComponent,\n    listInfoComponent: ListInfoComponent,\n    onChange: doOnChange // event, { item, rowIndex, listIndex }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst computeRowHeight = ({\n  item,\n  index,\n  isSelected\n}) => {\n  let height;\n  const chars = 41;\n\n  if (item.type === 'chooser') {\n    height = 40;\n  } else {\n    height = Math.floor(item.title.length / chars) * 20 + 40;\n  }\n\n  return height;\n};\n\nconst computeColWidth = ({\n  listItems,\n  index\n}) => {\n  var _listItems$, _listItems$2, _listItems$3;\n\n  return index % 2 === 0 || ((_listItems$ = listItems[0]) === null || _listItems$ === void 0 ? void 0 : _listItems$.type) === 'gender' || ((_listItems$2 = listItems[0]) === null || _listItems$2 === void 0 ? void 0 : _listItems$2.type) === 'years' || ((_listItems$3 = listItems[0]) === null || _listItems$3 === void 0 ? void 0 : _listItems$3.type) === 'price';\n};\n\nconst RowComponent = ({\n  item,\n  index,\n  key,\n  isSelected,\n  style,\n  onClick\n}) => {\n  return __jsx(\"div\", {\n    key: key,\n    style: _objectSpread({\n      display: 'flex',\n      justifyContent: 'space-between',\n      padding: '0.5em',\n      fontWeight: isSelected ? '500' : '400',\n      // pointerEvents: 'cursor',\n      backgroundColor: index % 2 ? 'rgba(255, 255, 255, 0.05)' : 'transparent',\n      color: isSelected ? 'var(--colour-primary)' : 'var(--colour-white)'\n    }, style),\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    style: {\n      textTransform: 'capitalize'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, item.title || 'unknown'), item.link && __jsx(Link, {\n    as: item.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    style: {\n      marginLeft: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, \"view\")), item.childrenTotal ? __jsx(\"span\", {\n    style: {\n      display: 'flex',\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, item.childrenTotal, ' ', __jsx(Icon, {\n    name: \"chevron-forward\",\n    size: \"sm\",\n    colour: \"white\",\n    style: {\n      display: 'flex',\n      marginLeft: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nconst ListInfoComponent = ({\n  level,\n  totalItems\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      borderTop: '1px solid var(--colour-grey-darkest)',\n      padding: '0.5em',\n      height: '2.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: '600'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }, \"Level \", level), ' ', __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }\n  }, totalItems.toLocaleString(), \" items\"));\n}; // const items2 = [\n//   {\n//     title: 'Test 1',\n//     id: '1',\n//     parentId: null,\n//   },\n//   {\n//     title: 'Test 1_1',\n//     id: '1_1',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_2',\n//     id: '1_2',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_3',\n//     id: '1_3',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_1_1',\n//     id: '1_1_1',\n//     parentId: '1_1',\n//   },\n// ];\n\n\nexport default ArtIndexExplore;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexExplore/ArtIndexExplore.tsx"],"names":["React","d3","d3Array","Link","HierarchyColumnBrowser","Icon","ArtIndexExplore","rawData","setRawData","useState","data","setData","items","setItems","listOfColumns","setListOfColumns","type","id","index","key","columnTypes","typeToField","years","exhibitions","artists","works","format","price","gender","useEffect","csv","then","newData","loc","columnTypesLocal","typeToFieldLocal","initialData","map","i","groupingField","tempGroupedData","group","d","childCount","size","out","toString","title","parentId","childrenTotal","columnIndex","shift","sort","a","b","formatPrice","p","pounds","Math","floor","allPence","round","shillings","pence","doOnChange","event","item","rowIndex","listIndex","prevData","filter","e","newListOfColumns","newType","groupedData","narrowedData","dataToWorkOn","groupBy","preNarrowedData","length","get","newColumnListData","push","currentColumnTypes","otherColumnTypes","indexOf","l","newDataToId","forEach","value","thisTitle","artistFirstName","artistLastName","medium","link","artistId","exhibitionId","mediumFormat","toLowerCase","exhibitionYear","maxWidth","margin","computeRowHeight","computeColWidth","RowComponent","ListInfoComponent","isSelected","height","chars","listItems","style","onClick","display","justifyContent","padding","fontWeight","backgroundColor","color","textTransform","marginLeft","opacity","level","totalItems","borderTop","toLocaleString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\n\nimport Link from '../Link';\nimport HierarchyColumnBrowser from '../HierarchyColumnBrowser';\nimport Icon from '../Icon';\n\nconst ArtIndexExplore = () => {\n  const [rawData, setRawData] = React.useState([]);\n  const [data, setData] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n\n  const [listOfColumns, setListOfColumns] = React.useState([\n    { type: 'chooser', id: 0, index: 0, key: null, data: null },\n  ]);\n\n  const columnTypes = [\n    'chooser', // this one is special\n    'years',\n    'exhibitions',\n    'artists',\n    'works',\n    'format',\n    'price',\n    'gender',\n  ];\n\n  const typeToField = {\n    // this is the field name we use for grouping\n    years: 'exhibitionYear',\n    exhibitions: 'exhibitionName',\n    artists: 'artistId',\n    works: 'id',\n    format: 'mediumFormat',\n    price: 'price',\n    gender: 'artistGender',\n  };\n\n  React.useEffect(() => {\n    d3.csv(\n      // '/data/australian-art-exhibition-catalogue-index-1845-1900-new.csv',\n      '/art-index/data/works.csv',\n    ).then((newData) => {\n      setRawData(newData);\n      const loc = {\n        type: 'chooser',\n        id: 0,\n        index: 0,\n        key: null,\n        data: newData,\n      };\n      setListOfColumns([loc]);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const columnTypesLocal = [\n      'chooser', // this one is special\n      'years',\n      'exhibitions',\n      'artists',\n      'works',\n      'format',\n      'price',\n      'gender',\n    ];\n\n    const typeToFieldLocal = {\n      // this is the field name we use for grouping\n      years: 'exhibitionYear',\n      exhibitions: 'exhibitionName',\n      artists: 'artistId',\n      works: 'id',\n      format: 'mediumFormat',\n      price: 'price',\n      gender: 'artistGender',\n    };\n\n    let initialData = columnTypesLocal.map((type, i) => {\n      const groupingField = typeToFieldLocal[type];\n      const tempGroupedData = d3Array.group(rawData, (d) => d[groupingField]);\n      const childCount = tempGroupedData.size;\n      const out = {\n        id: i.toString(),\n        title: type,\n        parentId: 'top',\n        childrenTotal: childCount,\n        type: 'chooser',\n        columnIndex: 0,\n      };\n      return out;\n    });\n    initialData.shift();\n    initialData = initialData.sort((a, b) => {\n      if (a.childrenTotal < b.childrenTotal) {\n        return 1;\n      }\n      if (a.childrenTotal > b.childrenTotal) {\n        return -1;\n      }\n      return 0;\n    });\n    setData(initialData);\n  }, [rawData]); // , columnTypes, typeToField\n\n  React.useEffect(() => {\n    setItems(\n      data.map((d) => {\n        if (d.parentId === 'top') {\n          return {\n            ...d,\n            parentId: null,\n          };\n        }\n        return {\n          ...d,\n        };\n      }),\n    );\n  }, [data]);\n\n  const formatPrice = (p) => {\n    if (!p) {\n      return '';\n    }\n    const pounds = Math.floor(p);\n    const allPence = Math.round((p - pounds) * 240);\n    const shillings = Math.floor(allPence / 12);\n    const pence = allPence - shillings * 12;\n    return `Â£${pounds} ${shillings}s ${pence}d`;\n  };\n\n  const doOnChange = (event, { item, rowIndex, listIndex }) => {\n    // remove stuff that will no longer be displayed\n    const prevData = data.filter(\n      (e) => e.columnIndex === 0 || e.columnIndex <= listIndex,\n    );\n    const newListOfColumns = listOfColumns.filter(\n      (e) => e.index === 0 || e.index <= listIndex,\n    );\n\n    // find new data to add\n    const newType = item.type === 'chooser' ? item.title : 'chooser';\n    let groupedData;\n    let narrowedData;\n    if (item.type === 'chooser') {\n      // group data\n      const dataToWorkOn = newListOfColumns[listIndex].data;\n      const groupBy = typeToField[item.title];\n      groupedData = d3Array.group(dataToWorkOn, (d) => d[groupBy]);\n    } else {\n      // narrow data\n      const preNarrowedData =\n        newListOfColumns[newListOfColumns.length - 1].data;\n      narrowedData = preNarrowedData.get(item.key);\n    }\n\n    const newColumnListData = {\n      type: newType,\n      id: item.id,\n      key: item.type === 'chooser' ? null : item.key,\n      index: listIndex + 1,\n      data: item.type === 'chooser' ? groupedData : narrowedData,\n    };\n    newListOfColumns.push(newColumnListData);\n    setListOfColumns(newListOfColumns);\n\n    let newData = [];\n    const currentColumnTypes = newListOfColumns\n      .map((d) => {\n        return d.type;\n      })\n      .filter((d) => {\n        return d !== 'chooser';\n      });\n\n    const otherColumnTypes = columnTypes.filter((d) => {\n      return currentColumnTypes.indexOf(d) < 0;\n    });\n    otherColumnTypes.shift();\n\n    if (newType === 'chooser') {\n      // new column is a type choosing column\n      newData = otherColumnTypes.map((type, i) => {\n        const groupingField = typeToField[type];\n        const tempGroupedData = d3Array.group(\n          narrowedData,\n          (d) => d[groupingField],\n        );\n        const childCount = tempGroupedData.size;\n        const l = prevData.length + i + 1;\n        const out = {\n          id: l.toString(),\n          title: type,\n          parentId: item.id.toString(),\n          childrenTotal: childCount,\n          type: 'chooser',\n          columnIndex: listIndex + 1,\n        };\n        return out;\n      });\n\n      newData = newData.sort((a, b) => {\n        if (a.childrenTotal < b.childrenTotal) {\n          return 1;\n        }\n        if (a.childrenTotal > b.childrenTotal) {\n          return -1;\n        }\n        return 0;\n      });\n    } else {\n      let id = prevData.length;\n\n      const newDataToId = [];\n\n      groupedData.forEach((value, key) => {\n        id += 1;\n        newDataToId[key] = id;\n        let thisTitle;\n\n        if (item.title === 'artists') {\n          thisTitle =\n            value[0].artistFirstName || value[0].artistLastName\n              ? `${value[0].artistFirstName} ${value[0].artistLastName}`\n              : 'unknown';\n        } else if (item.title === 'works') {\n          thisTitle = `${value[0].title}${\n            value[0].medium || value[0].format ? ' (' : ''\n          }${value[0].medium}${value[0].medium && value[0].format ? ' ' : ''}${\n            value[0].format\n          }${value[0].medium || value[0].format ? ')' : ''}`;\n        } else if (item.title === 'price') {\n          thisTitle = key ? formatPrice(key) : '';\n        } else {\n          thisTitle = key;\n        }\n\n        let link;\n        if (item.title === 'artists') {\n          link = `/art-index/artist/${value[0].artistId}`;\n        } else if (item.title === 'works') {\n          link = `/art-index/work/${value[0].id}`;\n        } else if (item.title === 'exhibitions') {\n          link = `/art-index/exhibition/${value[0].exhibitionId}`;\n        } else if (item.title === 'format') {\n          link = `/art-index/search/?formats=${value[0].mediumFormat.toLowerCase()}`;\n        } else if (item.title === 'years') {\n          link = `/art-index/search/?search=${value[0].exhibitionYear}`;\n        }\n\n        newData.push({\n          id: id.toString(),\n          title: thisTitle,\n          parentId: item.id,\n          childrenTotal: 0,\n          columnIndex: listIndex + 1,\n          type: newType,\n          key,\n          link,\n        });\n      });\n\n      newData = newData.sort((a, b) => {\n        if (a.title < b.title) {\n          return newType === 'price' ? 1 : -1;\n        }\n        if (a.title > b.title) {\n          return newType === 'price' ? -1 : 1;\n        }\n        return 0;\n      });\n    }\n\n    setData([...prevData, ...newData]);\n  };\n  return (\n    <div style={{ maxWidth: '80rem', margin: '0 auto' }}>\n      <HierarchyColumnBrowser\n        items={items}\n        originId=\"1\"\n        rowHeight={computeRowHeight}\n        colWidth={computeColWidth}\n        rowComponent={RowComponent}\n        listInfoComponent={ListInfoComponent}\n        onChange={doOnChange} // event, { item, rowIndex, listIndex }\n      />\n    </div>\n  );\n};\n\nconst computeRowHeight = ({ item, index, isSelected }) => {\n  let height;\n  const chars = 41;\n  if (item.type === 'chooser') {\n    height = 40;\n  } else {\n    height = Math.floor(item.title.length / chars) * 20 + 40;\n  }\n\n  return height;\n};\nconst computeColWidth = ({ listItems, index }) => {\n  return (\n    index % 2 === 0 ||\n    listItems[0]?.type === 'gender' ||\n    listItems[0]?.type === 'years' ||\n    listItems[0]?.type === 'price'\n  );\n};\n\nconst RowComponent = ({ item, index, key, isSelected, style, onClick }) => {\n  return (\n    <div\n      key={key}\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '0.5em',\n        fontWeight: isSelected ? '500' : '400',\n        // pointerEvents: 'cursor',\n        backgroundColor:\n          index % 2 ? 'rgba(255, 255, 255, 0.05)' : 'transparent',\n        color: isSelected ? 'var(--colour-primary)' : 'var(--colour-white)',\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      <span\n        style={{\n          textTransform: 'capitalize',\n        }}\n      >\n        {item.title || 'unknown'}\n      </span>\n      {item.link && (\n        <Link as={item.link}>\n          <a\n            style={{\n              marginLeft: '0.5em',\n            }}\n          >\n            view\n          </a>\n        </Link>\n      )}\n      {item.childrenTotal ? (\n        <span style={{ display: 'flex', opacity: 0.8 }}>\n          {item.childrenTotal}{' '}\n          <Icon\n            name=\"chevron-forward\"\n            size=\"sm\"\n            colour=\"white\"\n            style={{ display: 'flex', marginLeft: '0.5em' }}\n          />\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nconst ListInfoComponent = ({ level, totalItems }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderTop: '1px solid var(--colour-grey-darkest)',\n        padding: '0.5em',\n        height: '2.5em',\n      }}\n    >\n      <span style={{ fontWeight: '600' }}>Level {level}</span>{' '}\n      <span>{totalItems.toLocaleString()} items</span>\n    </div>\n  );\n};\n\n// const items2 = [\n//   {\n//     title: 'Test 1',\n//     id: '1',\n//     parentId: null,\n//   },\n//   {\n//     title: 'Test 1_1',\n//     id: '1_1',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_2',\n//     id: '1_2',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_3',\n//     id: '1_3',\n//     parentId: '1',\n//   },\n//   {\n//     title: 'Test 1_1_1',\n//     id: '1_1_1',\n//     parentId: '1_1',\n//   },\n// ];\n\nexport default ArtIndexExplore;\n"]},"metadata":{},"sourceType":"module"}