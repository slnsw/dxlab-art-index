{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderFormatBubbleChart/ArtIndexGenderFormatBubbleChart.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport css from './ArtIndexGenderFormatBubbleChart.module.scss';\n\nvar ArtIndexGenderFormatBubbleChart = function ArtIndexGenderFormatBubbleChart(_ref) {\n  _s();\n\n  var data = _ref.data,\n      className = _ref.className,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 500 : _ref$height,\n      _ref$smallCircleLimit = _ref.smallCircleLimit,\n      smallCircleLimit = _ref$smallCircleLimit === void 0 ? 11 : _ref$smallCircleLimit,\n      _ref$letterWidth = _ref.letterWidth,\n      letterWidth = _ref$letterWidth === void 0 ? 4 : _ref$letterWidth,\n      onBubbleClick = _ref.onBubbleClick;\n\n  // const [genderFiltering, setGenderFiltering] = React.useState('all');\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      chosenData = _React$useState2[0],\n      setChosenData = _React$useState2[1];\n\n  React.useEffect(function () {\n    var d = data && data['all']; // genderFiltering\n\n    setChosenData(d);\n  }, [data]); // genderFiltering\n\n  return __jsx(\"div\", {\n    className: css.ArtIndexGenderFormatBubbleChart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(ArtIndexFormatBubbleChart, {\n    data: chosenData,\n    className: className,\n    height: height,\n    smallCircleLimit: smallCircleLimit,\n    letterWidth: letterWidth,\n    onBubbleClick: onBubbleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  })) // <ArtIndexFormatBubbleChart\n  //   data={data.slice(0, 30).map((d) => {\n  //     return {\n  //       name: d.item || 'Unknown',\n  //       value: d.count,\n  //     };\n  //   })}\n  //   height={height}\n  //   className={[css.ArtIndexGenderFormatBubbleChart, className || ''].join(\n  //     ' ',\n  //   )}\n  //   renderBubble={(d, i) => {\n  //     // TODO: Consider `provider` API like React Select\n  //     return {\n  //       append: 'g',\n  //       transform: `translate(${d.x},${d.y})`,\n  //       duration: 1000,\n  //       children: [\n  //         {\n  //           append: 'circle',\n  //           data: d.data,\n  //           r: { enter: d.r, exit: 0 },\n  //           fill: 'var(--colour-primary)',\n  //           duration: 1000,\n  //           onClick: typeof onBubbleClick === 'function' && onBubbleClick,\n  //           cursor:\n  //             typeof onBubbleClick === 'function' ? 'pointer' : 'default',\n  //           onMouseOver: () => {\n  //             setHoverIndex(i);\n  //           },\n  //           onMouseOut: () => {\n  //             setHoverIndex(null);\n  //           },\n  //         },\n  //       ],\n  //     };\n  //   }}\n  //   renderLabel={(d, i) => {\n  //     const isHovered = i === hoverIndex;\n  //     const labelText = d.data.name || 'Unknown';\n  //     const displayNumber =\n  //       d.data.value.toString().length * letterWidth < d.r;\n  //     // TODO: Consider `provider` API like React Select\n  //     return {\n  //       append: 'g',\n  //       transform: `translate(${d.x},${d.y})`,\n  //       duration: 1000,\n  //       children: [\n  //         {\n  //           append: 'text',\n  //           key: d.data.name,\n  //           fill: 'var(--colour-white)',\n  //           fontWeight: 600,\n  //           text:\n  //             isHovered || labelText.length * letterWidth < d.r\n  //               ? labelText\n  //               : ' ', // have to put an actual space here, not empty string or else text never goes away\n  //           opacity: { enter: 1, exit: 0 },\n  //           duration: 1000,\n  //           y: '-0.2em',\n  //         },\n  //         {\n  //           append: 'text',\n  //           fill: 'var(--colour-white)',\n  //           text:\n  //             isHovered || (displayNumber && d.r > smallCircleLimit)\n  //               ? d.data.value\n  //               : ' ', // have to put an actual space here, not empty string or else text never goes away\n  //           opacity: 0.8,\n  //           y: '0.9em',\n  //         },\n  //       ],\n  //     };\n  //   }}\n  // />\n  ;\n};\n\n_s(ArtIndexGenderFormatBubbleChart, \"Mcv9hwBFShpAioEVSWcjbaB4MnA=\");\n\n_c = ArtIndexGenderFormatBubbleChart;\nexport default ArtIndexGenderFormatBubbleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexGenderFormatBubbleChart\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderFormatBubbleChart/ArtIndexGenderFormatBubbleChart.tsx"],"names":["React","ArtIndexFormatBubbleChart","css","ArtIndexGenderFormatBubbleChart","data","className","height","smallCircleLimit","letterWidth","onBubbleClick","useState","chosenData","setChosenData","useEffect","d"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,yBAAP,MAAsC,8BAAtC;AAEA,OAAOC,GAAP,MAAgB,+CAAhB;;AA4BA,IAAMC,+BAAgD,GAAG,SAAnDA,+BAAmD,OAOnD;AAAA;;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,yBAJJC,MAII;AAAA,MAJJA,MAII,4BAJK,GAIL;AAAA,mCAHJC,gBAGI;AAAA,MAHJA,gBAGI,sCAHe,EAGf;AAAA,8BAFJC,WAEI;AAAA,MAFJA,WAEI,iCAFU,CAEV;AAAA,MADJC,aACI,QADJA,aACI;;AACJ;AADI,wBAEgCT,KAAK,CAACU,QAAN,CAAe,EAAf,CAFhC;AAAA;AAAA,MAEGC,UAFH;AAAA,MAEeC,aAFf;;AAGJZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpB,QAAMC,CAAC,GAAGV,IAAI,IAAIA,IAAI,CAAC,KAAD,CAAtB,CADoB,CACW;;AAC/BQ,IAAAA,aAAa,CAACE,CAAD,CAAb;AACD,GAHD,EAGG,CAACV,IAAD,CAHH,EAHI,CAMQ;;AAEZ,SACE;AAAK,IAAA,SAAS,EAAEF,GAAG,CAACC,+BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwCE,MAAC,yBAAD;AACE,IAAA,IAAI,EAAEQ,UADR;AAEE,IAAA,SAAS,EAAEN,SAFb;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,gBAAgB,EAAEC,gBAJpB;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,CADF,CAkDE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7HF;AA+HD,CA9ID;;GAAMN,+B;;KAAAA,+B;AAgJN,eAAeA,+BAAf","sourcesContent":["import React from 'react';\n\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\n\nimport css from './ArtIndexGenderFormatBubbleChart.module.scss';\n\ntype Props = {\n  data?: {\n    all: {\n      item: string;\n      count: number;\n    }[];\n    female: {\n      item: string;\n      count: number;\n    }[];\n    male: {\n      item: string;\n      count: number;\n    }[];\n    unknown: {\n      item: string;\n      count: number;\n    }[];\n  };\n  height?: number;\n  smallCircleLimit?: number;\n  letterWidth?: number;\n  onBubbleClick?: Function;\n  className?: string;\n};\n\nconst ArtIndexGenderFormatBubbleChart: React.FC<Props> = ({\n  data,\n  className,\n  height = 500,\n  smallCircleLimit = 11,\n  letterWidth = 4,\n  onBubbleClick,\n}) => {\n  // const [genderFiltering, setGenderFiltering] = React.useState('all');\n  const [chosenData, setChosenData] = React.useState([]);\n  React.useEffect(() => {\n    const d = data && data['all']; // genderFiltering\n    setChosenData(d);\n  }, [data]); // genderFiltering\n\n  return (\n    <div className={css.ArtIndexGenderFormatBubbleChart}>\n      {/* <div className={css.filterButtons}>\n        <p>Filter by gender</p>\n        <a\n          className={[\n            css.filterLink,\n            genderFiltering === 'female' ? css.filterSelected : '',\n          ].join(' ')}\n          onClick={() => setGenderFiltering('female')}\n        >\n          female\n        </a>\n        <a\n          className={[\n            css.filterLink,\n            genderFiltering === 'male' ? css.filterSelected : '',\n          ].join(' ')}\n          onClick={() => setGenderFiltering('male')}\n        >\n          male\n        </a>\n        <a\n          className={[\n            css.filterLink,\n            genderFiltering === 'unknown' ? css.filterSelected : '',\n          ].join(' ')}\n          onClick={() => setGenderFiltering('unknown')}\n        >\n          unknown\n        </a>\n        <a\n          className={[\n            css.filterLink,\n            genderFiltering === 'all' ? css.filterSelected : '',\n          ].join(' ')}\n          onClick={() => setGenderFiltering('all')}\n        >\n          all\n        </a>\n      </div> */}\n      <ArtIndexFormatBubbleChart\n        data={chosenData}\n        className={className}\n        height={height}\n        smallCircleLimit={smallCircleLimit}\n        letterWidth={letterWidth}\n        onBubbleClick={onBubbleClick}\n      />\n    </div>\n    // <ArtIndexFormatBubbleChart\n    //   data={data.slice(0, 30).map((d) => {\n    //     return {\n    //       name: d.item || 'Unknown',\n    //       value: d.count,\n    //     };\n    //   })}\n    //   height={height}\n    //   className={[css.ArtIndexGenderFormatBubbleChart, className || ''].join(\n    //     ' ',\n    //   )}\n    //   renderBubble={(d, i) => {\n    //     // TODO: Consider `provider` API like React Select\n    //     return {\n    //       append: 'g',\n    //       transform: `translate(${d.x},${d.y})`,\n    //       duration: 1000,\n    //       children: [\n    //         {\n    //           append: 'circle',\n    //           data: d.data,\n    //           r: { enter: d.r, exit: 0 },\n    //           fill: 'var(--colour-primary)',\n    //           duration: 1000,\n    //           onClick: typeof onBubbleClick === 'function' && onBubbleClick,\n    //           cursor:\n    //             typeof onBubbleClick === 'function' ? 'pointer' : 'default',\n    //           onMouseOver: () => {\n    //             setHoverIndex(i);\n    //           },\n    //           onMouseOut: () => {\n    //             setHoverIndex(null);\n    //           },\n    //         },\n    //       ],\n    //     };\n    //   }}\n    //   renderLabel={(d, i) => {\n    //     const isHovered = i === hoverIndex;\n    //     const labelText = d.data.name || 'Unknown';\n    //     const displayNumber =\n    //       d.data.value.toString().length * letterWidth < d.r;\n\n    //     // TODO: Consider `provider` API like React Select\n    //     return {\n    //       append: 'g',\n    //       transform: `translate(${d.x},${d.y})`,\n    //       duration: 1000,\n    //       children: [\n    //         {\n    //           append: 'text',\n    //           key: d.data.name,\n    //           fill: 'var(--colour-white)',\n    //           fontWeight: 600,\n    //           text:\n    //             isHovered || labelText.length * letterWidth < d.r\n    //               ? labelText\n    //               : ' ', // have to put an actual space here, not empty string or else text never goes away\n    //           opacity: { enter: 1, exit: 0 },\n    //           duration: 1000,\n    //           y: '-0.2em',\n    //         },\n    //         {\n    //           append: 'text',\n    //           fill: 'var(--colour-white)',\n    //           text:\n    //             isHovered || (displayNumber && d.r > smallCircleLimit)\n    //               ? d.data.value\n    //               : ' ', // have to put an actual space here, not empty string or else text never goes away\n    //           opacity: 0.8,\n    //           y: '0.9em',\n    //         },\n    //       ],\n    //     };\n    //   }}\n    // />\n  );\n};\n\nexport default ArtIndexGenderFormatBubbleChart;\n"]},"metadata":{},"sourceType":"module"}