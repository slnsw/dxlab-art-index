{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexArtist/ArtIndexArtist.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport * as d3Array from 'd3-array';\nimport Link from '../Link';\nimport Button from '../Button';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport LoaderText from '../LoaderText';\nimport axios from '../../lib/axios';\nimport { arrayToCounts, processWorksByYear } from '../../lib/art-index-utils';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport css from './ArtIndexArtist.module.scss';\n\nconst ArtIndexArtist = ({\n  artist,\n  className\n}) => {\n  const {\n    state\n  } = useArtIndex();\n  const {\n    works\n  } = state;\n  const artistWorks = works.filter(work => work.artistId === artist.id);\n  const worksByYear = processWorksByYear(artistWorks);\n  const [wikiData, setWikiData] = React.useState();\n  const [isLoading, setIsLoading] = React.useState(true);\n  React.useEffect(() => {\n    setIsLoading(true);\n    getWikiData(artist === null || artist === void 0 ? void 0 : artist.wikiDataId).then(data => {\n      setWikiData(data);\n      setIsLoading(false);\n    });\n  }, [artist]);\n\n  if (!artist) {\n    return null;\n  }\n\n  const formatData = arrayToCounts(works.filter(d => d.artistId === artist.id).map(d => d.mediumFormat));\n  const years = d3Array.groups(artistWorks, d => d.exhibitionYear, d => d.exhibitionId).sort((a, b) => {\n    return a[0] - b[0];\n  });\n  const exhibitions = d3Array.groups(artistWorks, d => d.exhibitionId).map(exhibition => {\n    return {\n      id: exhibition[0],\n      title: exhibition[1][0].exhibitionName\n    };\n  });\n  console.log(wikiData);\n  return __jsx(\"article\", {\n    className: [css.artIndexArtist, className || ''].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: css.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, artist.thumbnailFile && __jsx(ArtIndexArtistThumbnail, {\n    file: artist.thumbnailFile,\n    className: css.artistImageCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: css.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Artist\"), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, artist.firstName, \" \", artist.lastName))), __jsx(\"div\", {\n    className: [css.content, artist !== null && artist !== void 0 && artist.wikiDataId ? css.contentHasWiki : ''].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: css.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(ArtIndexStatisticBlock, {\n    count: artistWorks.length,\n    label: \"Works\",\n    url: `/art-index/search/?artistIds=${artist.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), __jsx(ArtIndexStatisticBlock, {\n    count: exhibitions.length,\n    label: \"Exhibitions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.gender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Gender\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: css.genderIndicator,\n    style: _objectSpread({}, artist.gender ? {\n      backgroundColor: `var(--colour-art-index-${artist.gender})`\n    } : {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), ' ', __jsx(Link, {\n    as: `/art-index/search/?genders=${artist.gender || 'unknown'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, artist.gender || 'Unknown')))), (artist === null || artist === void 0 ? void 0 : artist.wikiDataId) && __jsx(\"div\", {\n    className: css.bio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, isLoading ? __jsx(LoaderText, {\n    className: css.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Biography\"), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.bioText) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: wikiData.bioText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.bioLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }, \"Wikipedia\"))))), __jsx(\"div\", {\n    className: css.formats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Formats\"), __jsx(ArtIndexFormatBubbleChart, {\n    data: formatData,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.worksByYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Work count by year\"), __jsx(BarChart, {\n    data: worksByYear,\n    rotateXAxis: true,\n    xAxisTickIncrement: 5,\n    id: 'works-by-year',\n    margin: {\n      bottom: 40,\n      top: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.exhibitions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Exhibitions\"), __jsx(\"div\", {\n    className: css.timeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, years.map(yearData => {\n    const year = yearData[0];\n    const yearExhibitions = yearData[1];\n    return __jsx(\"div\", {\n      className: css.timelineYear,\n      key: year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: css.timelineYearLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, year), __jsx(\"div\", {\n      className: css.timelineDecoration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: css.timelineBullet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: css.timelineLine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, yearExhibitions.map(yearExhibition => {\n      const exhibitionId = yearExhibition[0];\n      const exhibition = exhibitions.find(e => e.id === exhibitionId);\n      const exhibitionWorks = yearExhibition[1];\n      return __jsx(\"div\", {\n        className: css.timelineExhibition,\n        key: exhibitionId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 27\n        }\n      }, __jsx(Link, {\n        as: `/art-index/exhibition/${exhibitionId}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 31\n        }\n      }, exhibition.title))), __jsx(TimelineWorks, {\n        works: exhibitionWorks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 27\n        }\n      }));\n    })));\n  })))), (artist === null || artist === void 0 ? void 0 : artist.wikiDataId) && __jsx(\"div\", {\n    className: css.wikidata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, isLoading ? __jsx(LoaderText, {\n    className: css.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: `https://wikidata.org/wiki/${artist === null || artist === void 0 ? void 0 : artist.wikiDataId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"External data\")), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: `https://wikidata.org/wiki/${artist === null || artist === void 0 ? void 0 : artist.wikiDataId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"Wikidata\")), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.description) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"Description\"), wikiData.description, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.occupations) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.genre)) && __jsx(\"p\", {\n    className: css.occupation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, wikiData.occupations.join(', '), wikiData.occupations && wikiData.genre ? ' - ' : '', wikiData.genre, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.bornPlace) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.bornDate)) && __jsx(React.Fragment, null, \"Born: \", wikiData.bornPlace, wikiData.bornPlace && wikiData.bornDate ? ', ' : '', wikiData.bornDate, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.diedPlace) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.diedDate)) && __jsx(React.Fragment, null, \"Died: \", wikiData.diedPlace, wikiData.diedPlace && wikiData.diedDate ? ', ' : '', wikiData.diedDate, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  })), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.worksIn) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, \"Works held at:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, wikiData.worksIn.map(institution => {\n    return __jsx(\"li\", {\n      key: institution.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: institution.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 27\n      }\n    }, institution.name));\n  }))), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.locUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.ausDictBiogUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.dictOfSydUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.daaoUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.troveUrl) || wikiData.agsaUrl || wikiData.auckAGUrl || wikiData.euroUrl || wikiData.tepapaUrl || wikiData.ngvUrl || wikiData.anmmUrl) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, \"External links\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, wikiData.locUrl && __jsx(\"li\", {\n    key: wikiData.locUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 23\n    }\n  }, \"View Library of Congress\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.locUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.ausDictBiogUrl && __jsx(\"li\", {\n    key: wikiData.ausDictBiogUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 23\n    }\n  }, \"View Australian Dictionary of Biography\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.ausDictBiogUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.dictOfSydUrl && __jsx(\"li\", {\n    key: wikiData.dictOfSydUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 23\n    }\n  }, \"View Dictionary of Sydney\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.dictOfSydUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.daaoUrl && __jsx(\"li\", {\n    key: wikiData.daaoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 23\n    }\n  }, \"View\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.daaoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 25\n    }\n  }, \"biography\"), ' ', \"at Design & Art Australia Online\"), wikiData.troveUrl && __jsx(\"li\", {\n    key: wikiData.troveUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 23\n    }\n  }, \"View Trove\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.troveUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.agsaUrl && __jsx(\"li\", {\n    key: wikiData.agsaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 23\n    }\n  }, \"View Art Gallery of South Australia\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.agsaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.auckAGUrl && __jsx(\"li\", {\n    key: wikiData.auckAGUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }, \"View Auckland Art Gallery\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.auckAGUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.euroUrl && __jsx(\"li\", {\n    key: wikiData.euroUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 23\n    }\n  }, \"View Europeana\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.euroUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.tepapaUrl && __jsx(\"li\", {\n    key: wikiData.tepapaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 23\n    }\n  }, \"View Te Papa\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.tepapaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.ngvUrl && __jsx(\"li\", {\n    key: wikiData.ngvUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }\n  }, \"View National Gallery of Victoria\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.ngvUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.anmmUrl && __jsx(\"li\", {\n    key: wikiData.anmmUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 23\n    }\n  }, \"View Australian National Maritime Museum\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.anmmUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, \"entry\")))), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.examplesOfWork) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    style: {\n      marginBottom: 'var(--spacing-xxxs)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 19\n    }\n  }, \"Examples of works\", ' '), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.commonsUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 21\n    }\n  }, \"Wikimedia\")), __jsx(\"div\", {\n    className: css.wikiImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 19\n    }\n  }, wikiData.examplesOfWork.map(work => {\n    return __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: work.link,\n      className: css.wikiImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: work.url,\n      alt: work.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 27\n      }\n    }));\n  }))))), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }\n  }, `\n        .mw-empty-elt {\n          display: none;\n        }\n        `));\n};\n\nconst TimelineWorks = ({\n  works = [],\n  limit = 5\n}) => {\n  const [newLimit, setNewLimit] = React.useState(limit);\n  const worksTotal = works.length;\n  const showButton = worksTotal > newLimit;\n  return __jsx(\"div\", {\n    className: css.timelineWorks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }\n  }, works.slice(0, newLimit).map(work => {\n    return __jsx(\"h4\", {\n      key: work.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: `/art-index/work/${work.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 15\n      }\n    }, work.title)), __jsx(\"span\", {\n      className: css.timelineWorkFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, work.mediumFormat ? `(${work.mediumFormat})` : ''));\n  }), showButton && __jsx(Button, {\n    className: css.timelineShowMoreButton,\n    onClick: () => {\n      setNewLimit(newLimit + 10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }\n  }, \"Show more\"));\n};\n\nconst getBioText = async link => {\n  var _rawOut$query, _pageData$firstKey;\n\n  if (!link) {\n    return null;\n  }\n\n  const result = await axios.get(link);\n  const rawOut = result.data;\n  const pageData = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query = rawOut.query) === null || _rawOut$query === void 0 ? void 0 : _rawOut$query.pages;\n  const firstKey = pageData && Object.keys(pageData)[0];\n  const out = pageData && ((_pageData$firstKey = pageData[firstKey]) === null || _pageData$firstKey === void 0 ? void 0 : _pageData$firstKey.extract);\n  return out;\n};\n\nconst getWikiDataQValue = async qVal => {\n  var _rawOut$entities$qVal, _rawOut$entities$qVal2, _rawOut$entities$qVal3;\n\n  if (!qVal) {\n    return null;\n  }\n\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${qVal}&format=json&languages=en&origin=*`;\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$entities$qVal = rawOut.entities[qVal]) === null || _rawOut$entities$qVal === void 0 ? void 0 : (_rawOut$entities$qVal2 = _rawOut$entities$qVal.labels) === null || _rawOut$entities$qVal2 === void 0 ? void 0 : (_rawOut$entities$qVal3 = _rawOut$entities$qVal2.en) === null || _rawOut$entities$qVal3 === void 0 ? void 0 : _rawOut$entities$qVal3.value;\n  return out;\n};\n\nconst getUrlFromFilename = async filename => {\n  var _rawOut$query2;\n\n  if (!filename) {\n    return null;\n  }\n\n  let url = 'https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=imageinfo';\n  url += `&iilimit=50&titles=${filename}&format=json&iiprop=url&iiurlwidth=320`;\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const urlData = rawOut && (rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query2 = rawOut.query) === null || _rawOut$query2 === void 0 ? void 0 : _rawOut$query2.pages);\n  const firstKey = Object.keys(urlData)[0];\n  const imageUrlData = urlData && urlData[firstKey];\n  const imageUrl = imageUrlData && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo) && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo[0].thumburl);\n  const descriptionUrl = imageUrlData && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo) && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo[0].descriptionurl);\n  const out = {\n    url: imageUrl,\n    link: descriptionUrl\n  };\n  return out;\n};\n\nconst getWorkExamples = async commonsCatalogue => {\n  var _rawOut$query3;\n\n  if (!commonsCatalogue) {\n    return null;\n  }\n\n  let url = 'https://commons.wikimedia.org/w/api.php?action=query&list=categorymembers&origin=*';\n  url += `&cmtype=file&cmtitle=Category:${commonsCatalogue}&format=json&cmlimit=500`;\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const members = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query3 = rawOut.query) === null || _rawOut$query3 === void 0 ? void 0 : _rawOut$query3.categorymembers;\n  const workExamples = members && (await Promise.all(members.map(async m => {\n    const {\n      title\n    } = m;\n    const value = title && (await getUrlFromFilename(title));\n    return value;\n  })));\n  return workExamples;\n};\n\nconst getUrlForInstitution = async id => {\n  var _claims$P856$, _claims$P856$$mainsna, _claims$P856$$mainsna2;\n\n  if (!id) {\n    return null;\n  }\n\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`;\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id];\n  const claims = out === null || out === void 0 ? void 0 : out.claims;\n  const urlString = (claims === null || claims === void 0 ? void 0 : claims.P856) && (claims === null || claims === void 0 ? void 0 : (_claims$P856$ = claims.P856[0]) === null || _claims$P856$ === void 0 ? void 0 : (_claims$P856$$mainsna = _claims$P856$.mainsnak) === null || _claims$P856$$mainsna === void 0 ? void 0 : (_claims$P856$$mainsna2 = _claims$P856$$mainsna.datavalue) === null || _claims$P856$$mainsna2 === void 0 ? void 0 : _claims$P856$$mainsna2.value);\n  return urlString;\n};\n\nconst getWikiData = async id => {\n  var _out$descriptions, _out$descriptions$en, _claims$P569$, _claims$P569$$mainsna, _claims$P569$$mainsna2, _claims$P569$$mainsna3, _claims$P570$, _claims$P570$$mainsna, _claims$P570$$mainsna2, _claims$P570$$mainsna3, _claims$P19$, _claims$P19$$mainsnak, _claims$P19$$mainsnak2, _claims$P19$$mainsnak3, _claims$P20$, _claims$P20$$mainsnak, _claims$P20$$mainsnak2, _claims$P20$$mainsnak3, _claims$P136$, _claims$P136$$mainsna, _claims$P136$$mainsna2, _claims$P136$$mainsna3, _claims$P373$, _claims$P373$$mainsna, _claims$P373$$mainsna2, _claims$P244$, _claims$P244$$mainsna, _claims$P244$$mainsna2, _claims$P1907$, _claims$P1907$$mainsn, _claims$P1907$$mainsn2, _claims$P3794$, _claims$P3794$$mainsn, _claims$P3794$$mainsn2, _claims$P1707$, _claims$P1707$$mainsn, _claims$P1707$$mainsn2, _claims$P1315$, _claims$P1315$$mainsn, _claims$P1315$$mainsn2, _claims$P6804$, _claims$P6804$$mainsn, _claims$P6804$$mainsn2, _claims$P3372$, _claims$P3372$$mainsn, _claims$P3372$$mainsn2, _claims$P7704$, _claims$P7704$$mainsn, _claims$P7704$$mainsn2, _claims$P3544$, _claims$P3544$$mainsn, _claims$P3544$$mainsn2, _claims$P2041$, _claims$P2041$$mainsn, _claims$P2041$$mainsn2, _claims$P7769$, _claims$P7769$$mainsn, _claims$P7769$$mainsn2, _sitelinks$enwiki;\n\n  if (!id) {\n    return null;\n  }\n\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`; // do initial wikidata lookup for the Q value (identifier) for the artist\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id]; // extract desciption\n\n  const description = out === null || out === void 0 ? void 0 : (_out$descriptions = out.descriptions) === null || _out$descriptions === void 0 ? void 0 : (_out$descriptions$en = _out$descriptions.en) === null || _out$descriptions$en === void 0 ? void 0 : _out$descriptions$en.value; // 'claims' are where a bunch of links to other stuff live\n\n  const claims = out === null || out === void 0 ? void 0 : out.claims; // such as date of birth/death\n\n  const dobData = (claims === null || claims === void 0 ? void 0 : claims.P569) && (claims === null || claims === void 0 ? void 0 : (_claims$P569$ = claims.P569[0]) === null || _claims$P569$ === void 0 ? void 0 : (_claims$P569$$mainsna = _claims$P569$.mainsnak) === null || _claims$P569$$mainsna === void 0 ? void 0 : (_claims$P569$$mainsna2 = _claims$P569$$mainsna.datavalue) === null || _claims$P569$$mainsna2 === void 0 ? void 0 : (_claims$P569$$mainsna3 = _claims$P569$$mainsna2.value) === null || _claims$P569$$mainsna3 === void 0 ? void 0 : _claims$P569$$mainsna3.time);\n  const bornDate = dobData && dobData.slice(1, 5); // just get the year for now\n\n  const dodData = (claims === null || claims === void 0 ? void 0 : claims.P570) && (claims === null || claims === void 0 ? void 0 : (_claims$P570$ = claims.P570[0]) === null || _claims$P570$ === void 0 ? void 0 : (_claims$P570$$mainsna = _claims$P570$.mainsnak) === null || _claims$P570$$mainsna === void 0 ? void 0 : (_claims$P570$$mainsna2 = _claims$P570$$mainsna.datavalue) === null || _claims$P570$$mainsna2 === void 0 ? void 0 : (_claims$P570$$mainsna3 = _claims$P570$$mainsna2.value) === null || _claims$P570$$mainsna3 === void 0 ? void 0 : _claims$P570$$mainsna3.time);\n  const diedDate = dodData && dodData.slice(1, 5); // location of birth/death (note there are yet another Q vlaue which in turn need to be looked up)\n\n  const pobId = (claims === null || claims === void 0 ? void 0 : claims.P19) && (claims === null || claims === void 0 ? void 0 : (_claims$P19$ = claims.P19[0]) === null || _claims$P19$ === void 0 ? void 0 : (_claims$P19$$mainsnak = _claims$P19$.mainsnak) === null || _claims$P19$$mainsnak === void 0 ? void 0 : (_claims$P19$$mainsnak2 = _claims$P19$$mainsnak.datavalue) === null || _claims$P19$$mainsnak2 === void 0 ? void 0 : (_claims$P19$$mainsnak3 = _claims$P19$$mainsnak2.value) === null || _claims$P19$$mainsnak3 === void 0 ? void 0 : _claims$P19$$mainsnak3.id);\n  const bornPlace = pobId && (await getWikiDataQValue(pobId));\n  const podId = (claims === null || claims === void 0 ? void 0 : claims.P20) && (claims === null || claims === void 0 ? void 0 : (_claims$P20$ = claims.P20[0]) === null || _claims$P20$ === void 0 ? void 0 : (_claims$P20$$mainsnak = _claims$P20$.mainsnak) === null || _claims$P20$$mainsnak === void 0 ? void 0 : (_claims$P20$$mainsnak2 = _claims$P20$$mainsnak.datavalue) === null || _claims$P20$$mainsnak2 === void 0 ? void 0 : (_claims$P20$$mainsnak3 = _claims$P20$$mainsnak2.value) === null || _claims$P20$$mainsnak3 === void 0 ? void 0 : _claims$P20$$mainsnak3.id);\n  const diedPlace = podId && (await getWikiDataQValue(podId)); // get the list of occupations (eg: painter, sculptor, writer)\n\n  const occupations = (claims === null || claims === void 0 ? void 0 : claims.P106) && (await Promise.all(claims === null || claims === void 0 ? void 0 : claims.P106.map(async i => {\n    var _i$mainsnak, _i$mainsnak$datavalue, _i$mainsnak$datavalue2;\n\n    const oid = i === null || i === void 0 ? void 0 : (_i$mainsnak = i.mainsnak) === null || _i$mainsnak === void 0 ? void 0 : (_i$mainsnak$datavalue = _i$mainsnak.datavalue) === null || _i$mainsnak$datavalue === void 0 ? void 0 : (_i$mainsnak$datavalue2 = _i$mainsnak$datavalue.value) === null || _i$mainsnak$datavalue2 === void 0 ? void 0 : _i$mainsnak$datavalue2.id;\n    const occ = oid && (await getWikiDataQValue(oid));\n    return occ;\n  }))); // genre of art they worked in\n\n  const genreId = (claims === null || claims === void 0 ? void 0 : claims.P136) && (claims === null || claims === void 0 ? void 0 : (_claims$P136$ = claims.P136[0]) === null || _claims$P136$ === void 0 ? void 0 : (_claims$P136$$mainsna = _claims$P136$.mainsnak) === null || _claims$P136$$mainsna === void 0 ? void 0 : (_claims$P136$$mainsna2 = _claims$P136$$mainsna.datavalue) === null || _claims$P136$$mainsna2 === void 0 ? void 0 : (_claims$P136$$mainsna3 = _claims$P136$$mainsna2.value) === null || _claims$P136$$mainsna3 === void 0 ? void 0 : _claims$P136$$mainsna3.id);\n  const genre = genreId && (await getWikiDataQValue(genreId)); // commons category can be used to pull in images of the artist's work\n\n  const commonsCategory = (claims === null || claims === void 0 ? void 0 : claims.P373) && (claims === null || claims === void 0 ? void 0 : (_claims$P373$ = claims.P373[0]) === null || _claims$P373$ === void 0 ? void 0 : (_claims$P373$$mainsna = _claims$P373$.mainsnak) === null || _claims$P373$$mainsna === void 0 ? void 0 : (_claims$P373$$mainsna2 = _claims$P373$$mainsna.datavalue) === null || _claims$P373$$mainsna2 === void 0 ? void 0 : _claims$P373$$mainsna2.value); // create the URL now, pull in works later\n\n  const commonsUrl = commonsCategory && `https://commons.wikimedia.org/wiki/Category:${commonsCategory}`; // get the list of institutions (and their websites) that the artist has\n  // works held in (again these are identifiers and need looking up)\n\n  const worksIn = (claims === null || claims === void 0 ? void 0 : claims.P6379) && (await Promise.all(claims === null || claims === void 0 ? void 0 : claims.P6379.map(async i => {\n    var _i$mainsnak2, _i$mainsnak2$datavalu, _i$mainsnak2$datavalu2;\n\n    const wid = i === null || i === void 0 ? void 0 : (_i$mainsnak2 = i.mainsnak) === null || _i$mainsnak2 === void 0 ? void 0 : (_i$mainsnak2$datavalu = _i$mainsnak2.datavalue) === null || _i$mainsnak2$datavalu === void 0 ? void 0 : (_i$mainsnak2$datavalu2 = _i$mainsnak2$datavalu.value) === null || _i$mainsnak2$datavalu2 === void 0 ? void 0 : _i$mainsnak2$datavalu2.id;\n    const value = wid && (await getWikiDataQValue(wid));\n    const instUrl = wid && (await getUrlForInstitution(wid));\n    return {\n      name: value,\n      url: instUrl\n    };\n  }))); // now pull in IDs from other authoritative sources about the artist\n  // and construct the links, starting with Lib of Congress\n\n  const locId = (claims === null || claims === void 0 ? void 0 : claims.P244) && (claims === null || claims === void 0 ? void 0 : (_claims$P244$ = claims.P244[0]) === null || _claims$P244$ === void 0 ? void 0 : (_claims$P244$$mainsna = _claims$P244$.mainsnak) === null || _claims$P244$$mainsna === void 0 ? void 0 : (_claims$P244$$mainsna2 = _claims$P244$$mainsna.datavalue) === null || _claims$P244$$mainsna2 === void 0 ? void 0 : _claims$P244$$mainsna2.value);\n  const locUrl = locId && `https://id.loc.gov/authorities/${locId}`; // Australian Disctionary of Biography\n\n  const ausDictBiogId = (claims === null || claims === void 0 ? void 0 : claims.P1907) && (claims === null || claims === void 0 ? void 0 : (_claims$P1907$ = claims.P1907[0]) === null || _claims$P1907$ === void 0 ? void 0 : (_claims$P1907$$mainsn = _claims$P1907$.mainsnak) === null || _claims$P1907$$mainsn === void 0 ? void 0 : (_claims$P1907$$mainsn2 = _claims$P1907$$mainsn.datavalue) === null || _claims$P1907$$mainsn2 === void 0 ? void 0 : _claims$P1907$$mainsn2.value);\n  const ausDictBiogUrl = ausDictBiogId && `http://adb.anu.edu.au/biography/${ausDictBiogId}`; // Dictionary of Sydney\n\n  const dictOfSydId = (claims === null || claims === void 0 ? void 0 : claims.P3794) && (claims === null || claims === void 0 ? void 0 : (_claims$P3794$ = claims.P3794[0]) === null || _claims$P3794$ === void 0 ? void 0 : (_claims$P3794$$mainsn = _claims$P3794$.mainsnak) === null || _claims$P3794$$mainsn === void 0 ? void 0 : (_claims$P3794$$mainsn2 = _claims$P3794$$mainsn.datavalue) === null || _claims$P3794$$mainsn2 === void 0 ? void 0 : _claims$P3794$$mainsn2.value);\n  const dictOfSydUrl = dictOfSydId && `https://dictionaryofsydney.org/${dictOfSydId}`; // The DAAO\n\n  const daaoId = (claims === null || claims === void 0 ? void 0 : claims.P1707) && (claims === null || claims === void 0 ? void 0 : (_claims$P1707$ = claims.P1707[0]) === null || _claims$P1707$ === void 0 ? void 0 : (_claims$P1707$$mainsn = _claims$P1707$.mainsnak) === null || _claims$P1707$$mainsn === void 0 ? void 0 : (_claims$P1707$$mainsn2 = _claims$P1707$$mainsn.datavalue) === null || _claims$P1707$$mainsn2 === void 0 ? void 0 : _claims$P1707$$mainsn2.value);\n  const daaoUrl = daaoId && `https://www.daao.org.au/bio/${daaoId}`; // Trove\n\n  const troveId = (claims === null || claims === void 0 ? void 0 : claims.P1315) && (claims === null || claims === void 0 ? void 0 : (_claims$P1315$ = claims.P1315[0]) === null || _claims$P1315$ === void 0 ? void 0 : (_claims$P1315$$mainsn = _claims$P1315$.mainsnak) === null || _claims$P1315$$mainsn === void 0 ? void 0 : (_claims$P1315$$mainsn2 = _claims$P1315$$mainsn.datavalue) === null || _claims$P1315$$mainsn2 === void 0 ? void 0 : _claims$P1315$$mainsn2.value);\n  const troveUrl = troveId && `https://trove.nla.gov.au/people/${troveId}`; // Art Gallery of South Australia\n\n  const agsaId = (claims === null || claims === void 0 ? void 0 : claims.P6804) && (claims === null || claims === void 0 ? void 0 : (_claims$P6804$ = claims.P6804[0]) === null || _claims$P6804$ === void 0 ? void 0 : (_claims$P6804$$mainsn = _claims$P6804$.mainsnak) === null || _claims$P6804$$mainsn === void 0 ? void 0 : (_claims$P6804$$mainsn2 = _claims$P6804$$mainsn.datavalue) === null || _claims$P6804$$mainsn2 === void 0 ? void 0 : _claims$P6804$$mainsn2.value);\n  const agsaUrl = agsaId && `https://www.agsa.sa.gov.au/collection-publications/collection/creators/_/${agsaId}`; // Auckland Art Gallery\n\n  const auckAGId = (claims === null || claims === void 0 ? void 0 : claims.P3372) && (claims === null || claims === void 0 ? void 0 : (_claims$P3372$ = claims.P3372[0]) === null || _claims$P3372$ === void 0 ? void 0 : (_claims$P3372$$mainsn = _claims$P3372$.mainsnak) === null || _claims$P3372$$mainsn === void 0 ? void 0 : (_claims$P3372$$mainsn2 = _claims$P3372$$mainsn.datavalue) === null || _claims$P3372$$mainsn2 === void 0 ? void 0 : _claims$P3372$$mainsn2.value);\n  const auckAGUrl = auckAGId && `http://www.aucklandartgallery.com/explore-art-and-ideas/artist/${auckAGId}`; // Europeana\n\n  const euroId = (claims === null || claims === void 0 ? void 0 : claims.P7704) && (claims === null || claims === void 0 ? void 0 : (_claims$P7704$ = claims.P7704[0]) === null || _claims$P7704$ === void 0 ? void 0 : (_claims$P7704$$mainsn = _claims$P7704$.mainsnak) === null || _claims$P7704$$mainsn === void 0 ? void 0 : (_claims$P7704$$mainsn2 = _claims$P7704$$mainsn.datavalue) === null || _claims$P7704$$mainsn2 === void 0 ? void 0 : _claims$P7704$$mainsn2.value);\n  const euroUrl = euroId && `https://data.europeana.eu/${euroId}`; // Te Papa museum\n\n  const tepapaId = (claims === null || claims === void 0 ? void 0 : claims.P3544) && (claims === null || claims === void 0 ? void 0 : (_claims$P3544$ = claims.P3544[0]) === null || _claims$P3544$ === void 0 ? void 0 : (_claims$P3544$$mainsn = _claims$P3544$.mainsnak) === null || _claims$P3544$$mainsn === void 0 ? void 0 : (_claims$P3544$$mainsn2 = _claims$P3544$$mainsn.datavalue) === null || _claims$P3544$$mainsn2 === void 0 ? void 0 : _claims$P3544$$mainsn2.value);\n  const tepapaUrl = tepapaId && `https://collections.tepapa.govt.nz/agent/${tepapaId}`; // Nat Gallery Victoria\n\n  const ngvId = (claims === null || claims === void 0 ? void 0 : claims.P2041) && (claims === null || claims === void 0 ? void 0 : (_claims$P2041$ = claims.P2041[0]) === null || _claims$P2041$ === void 0 ? void 0 : (_claims$P2041$$mainsn = _claims$P2041$.mainsnak) === null || _claims$P2041$$mainsn === void 0 ? void 0 : (_claims$P2041$$mainsn2 = _claims$P2041$$mainsn.datavalue) === null || _claims$P2041$$mainsn2 === void 0 ? void 0 : _claims$P2041$$mainsn2.value);\n  const ngvUrl = ngvId && `https://www.ngv.vic.gov.au/explore/collection/artist/${ngvId}`; // Aus Nat Maritime Museum\n\n  const anmmId = (claims === null || claims === void 0 ? void 0 : claims.P7769) && (claims === null || claims === void 0 ? void 0 : (_claims$P7769$ = claims.P7769[0]) === null || _claims$P7769$ === void 0 ? void 0 : (_claims$P7769$$mainsn = _claims$P7769$.mainsnak) === null || _claims$P7769$$mainsn === void 0 ? void 0 : (_claims$P7769$$mainsn2 = _claims$P7769$$mainsn.datavalue) === null || _claims$P7769$$mainsn2 === void 0 ? void 0 : _claims$P7769$$mainsn2.value);\n  const anmmUrl = anmmId && `http://collections.anmm.gov.au/people/${anmmId}`; // Now construct the examples of work data from the commons category\n\n  const examplesOfWork = commonsCategory && (await getWorkExamples(commonsCategory)); // look for wikipedia link in sitelinks section, from which a bio can be extracted\n\n  const sitelinks = out === null || out === void 0 ? void 0 : out.sitelinks;\n  const wikiTitle = sitelinks && (sitelinks === null || sitelinks === void 0 ? void 0 : (_sitelinks$enwiki = sitelinks.enwiki) === null || _sitelinks$enwiki === void 0 ? void 0 : _sitelinks$enwiki.title);\n  const wikiBioLink = wikiTitle && `https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exsentences=2&titles=${wikiTitle}&format=json&origin=*`; // &explaintext=true\n\n  const bioText = wikiBioLink && (await getBioText(wikiBioLink));\n  const bioLink = wikiTitle && `https://en.wikipedia.org/wiki/${wikiTitle}`; // build data object to return\n\n  const data = {\n    description,\n    bornDate,\n    diedDate,\n    bornPlace,\n    diedPlace,\n    occupations,\n    genre,\n    commonsCategory,\n    worksIn,\n    locUrl,\n    ausDictBiogUrl,\n    dictOfSydUrl,\n    daaoUrl,\n    troveUrl,\n    examplesOfWork,\n    commonsUrl,\n    agsaUrl,\n    auckAGUrl,\n    euroUrl,\n    tepapaUrl,\n    ngvUrl,\n    anmmUrl,\n    bioText,\n    bioLink\n  };\n  return data;\n};\n\nexport default ArtIndexArtist;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexArtist/ArtIndexArtist.tsx"],"names":["React","d3Array","Link","Button","ArtIndexFormatBubbleChart","BarChart","ArtIndexStatisticBlock","ArtIndexArtistThumbnail","LoaderText","axios","arrayToCounts","processWorksByYear","useArtIndex","css","ArtIndexArtist","artist","className","state","works","artistWorks","filter","work","artistId","id","worksByYear","wikiData","setWikiData","useState","isLoading","setIsLoading","useEffect","getWikiData","wikiDataId","then","data","formatData","d","map","mediumFormat","years","groups","exhibitionYear","exhibitionId","sort","a","b","exhibitions","exhibition","title","exhibitionName","console","log","artIndexArtist","join","header","thumbnailFile","artistImageCircle","type","firstName","lastName","content","contentHasWiki","stats","length","gender","genderIndicator","backgroundColor","bio","loader","bioText","__html","sourceText","bioLink","formats","bottom","top","timeline","yearData","year","yearExhibitions","timelineYear","timelineYearLabel","timelineDecoration","timelineBullet","timelineLine","yearExhibition","find","e","exhibitionWorks","timelineExhibition","wikidata","description","occupations","genre","occupation","bornPlace","bornDate","diedPlace","diedDate","worksIn","institution","name","url","locUrl","ausDictBiogUrl","dictOfSydUrl","daaoUrl","troveUrl","agsaUrl","auckAGUrl","euroUrl","tepapaUrl","ngvUrl","anmmUrl","examplesOfWork","marginBottom","commonsUrl","wikiImages","link","wikiImage","TimelineWorks","limit","newLimit","setNewLimit","worksTotal","showButton","timelineWorks","slice","timelineWorkFormat","timelineShowMoreButton","getBioText","result","get","rawOut","pageData","query","pages","firstKey","Object","keys","out","extract","getWikiDataQValue","qVal","entities","labels","en","value","getUrlFromFilename","filename","urlData","imageUrlData","imageUrl","imageinfo","thumburl","descriptionUrl","descriptionurl","getWorkExamples","commonsCatalogue","members","categorymembers","workExamples","Promise","all","m","getUrlForInstitution","claims","urlString","P856","mainsnak","datavalue","descriptions","dobData","P569","time","dodData","P570","pobId","P19","podId","P20","P106","i","oid","occ","genreId","P136","commonsCategory","P373","P6379","wid","instUrl","locId","P244","ausDictBiogId","P1907","dictOfSydId","P3794","daaoId","P1707","troveId","P1315","agsaId","P6804","auckAGId","P3372","euroId","P7704","tepapaId","P3544","ngvId","P2041","anmmId","P7769","sitelinks","wikiTitle","enwiki","wikiBioLink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3Array from 'd3-array';\n\nimport Link from '../Link';\nimport Button from '../Button';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport LoaderText from '../LoaderText';\n\nimport axios from '../../lib/axios';\nimport { arrayToCounts, processWorksByYear } from '../../lib/art-index-utils';\nimport { ArtIndexArtistType } from '../../types/art-index-types';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\n\nimport css from './ArtIndexArtist.module.scss';\n\ntype Props = {\n  artist?: ArtIndexArtistType;\n  className?: string;\n};\n\ntype WorkExample = {\n  url?: string;\n  link?: string;\n};\n\ntype WorkAt = {\n  name?: string;\n  url?: string;\n};\n\ntype WikiData = {\n  description?: string;\n  bornDate?: string;\n  diedDate?: string;\n  bornPlace?: string;\n  diedPlace?: string;\n  occupations?: string[];\n  genre?: string;\n  commonsCategory?: string;\n  worksIn?: WorkAt[];\n  locUrl?: string;\n  ausDictBiogUrl?: string;\n  dictOfSydUrl?: string;\n  daaoUrl?: string;\n  troveUrl?: string;\n  examplesOfWork?: WorkExample[];\n  commonsUrl?: string;\n  agsaUrl?: string;\n  auckAGUrl?: string;\n  euroUrl?: string;\n  tepapaUrl?: string;\n  ngvUrl?: string;\n  anmmUrl?: string;\n  bioText?: string;\n  bioLink?: string;\n};\n\nconst ArtIndexArtist: React.FC<Props> = ({ artist, className }) => {\n  const { state } = useArtIndex();\n  const { works } = state;\n  const artistWorks = works.filter((work) => work.artistId === artist.id);\n  const worksByYear = processWorksByYear(artistWorks);\n  const [wikiData, setWikiData] = React.useState<WikiData>();\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    getWikiData(artist?.wikiDataId).then((data) => {\n      setWikiData(data);\n      setIsLoading(false);\n    });\n  }, [artist]);\n\n  if (!artist) {\n    return null;\n  }\n\n  const formatData = arrayToCounts(\n    works.filter((d) => d.artistId === artist.id).map((d) => d.mediumFormat),\n  );\n\n  const years = d3Array\n    .groups(\n      artistWorks,\n      (d) => d.exhibitionYear,\n      (d) => d.exhibitionId,\n    )\n    .sort((a, b) => {\n      return a[0] - b[0];\n    });\n\n  const exhibitions = d3Array\n    .groups(artistWorks, (d) => d.exhibitionId)\n    .map((exhibition) => {\n      return {\n        id: exhibition[0],\n        title: exhibition[1][0].exhibitionName,\n      };\n    });\n\n  console.log(wikiData);\n\n  return (\n    <article className={[css.artIndexArtist, className || ''].join(' ')}>\n      <header className={css.header}>\n        {artist.thumbnailFile && (\n          <ArtIndexArtistThumbnail\n            file={artist.thumbnailFile}\n            className={css.artistImageCircle}\n          />\n        )}\n\n        <div>\n          <p className={css.type}>Artist</p>\n          <h1>\n            {artist.firstName} {artist.lastName}\n          </h1>\n        </div>\n      </header>\n\n      <div\n        className={[\n          css.content,\n          artist?.wikiDataId ? css.contentHasWiki : '',\n        ].join(' ')}\n      >\n        <div className={css.stats}>\n          <ArtIndexStatisticBlock\n            count={artistWorks.length}\n            label=\"Works\"\n            url={`/art-index/search/?artistIds=${artist.id}`}\n          />\n          <ArtIndexStatisticBlock\n            count={exhibitions.length}\n            label=\"Exhibitions\"\n          />\n        </div>\n\n        <div className={css.gender}>\n          <h2>Gender</h2>\n          <p>\n            <div\n              className={css.genderIndicator}\n              style={{\n                ...(artist.gender\n                  ? {\n                      backgroundColor: `var(--colour-art-index-${artist.gender})`,\n                    }\n                  : {}),\n              }}\n            ></div>{' '}\n            <Link\n              as={`/art-index/search/?genders=${artist.gender || 'unknown'}`}\n            >\n              <a>{artist.gender || 'Unknown'}</a>\n            </Link>\n          </p>\n        </div>\n\n        {artist?.wikiDataId && (\n          <div className={css.bio}>\n            {isLoading ? (\n              <LoaderText className={css.loader} />\n            ) : (\n              <>\n                <h2>Biography</h2>\n                {wikiData?.bioText && (\n                  <>\n                    <div\n                      dangerouslySetInnerHTML={{ __html: wikiData.bioText }}\n                    />\n                    <p className={css.sourceText}>\n                      Source:{' '}\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={wikiData.bioLink}\n                      >\n                        Wikipedia\n                      </a>\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        )}\n\n        <div className={css.formats}>\n          <h2>Formats</h2>\n          <ArtIndexFormatBubbleChart data={formatData} height={300} />\n        </div>\n\n        <div className={css.worksByYear}>\n          <h2>Work count by year</h2>\n          <BarChart\n            data={worksByYear}\n            rotateXAxis={true}\n            xAxisTickIncrement={5}\n            id={'works-by-year'}\n            margin={{\n              bottom: 40,\n              top: 40,\n            }}\n          />\n        </div>\n\n        <div className={css.exhibitions}>\n          <h2>Exhibitions</h2>\n\n          <div className={css.timeline}>\n            {years.map((yearData) => {\n              const year = yearData[0];\n              const yearExhibitions = yearData[1];\n\n              return (\n                <div className={css.timelineYear} key={year}>\n                  <p className={css.timelineYearLabel}>{year}</p>\n                  <div className={css.timelineDecoration}>\n                    <div className={css.timelineBullet}></div>\n                    <div className={css.timelineLine}></div>\n                  </div>\n\n                  <div>\n                    {yearExhibitions.map((yearExhibition) => {\n                      const exhibitionId = yearExhibition[0];\n                      const exhibition = exhibitions.find(\n                        (e) => e.id === exhibitionId,\n                      );\n                      const exhibitionWorks = yearExhibition[1];\n\n                      return (\n                        <div\n                          className={css.timelineExhibition}\n                          key={exhibitionId}\n                        >\n                          <h3>\n                            <Link as={`/art-index/exhibition/${exhibitionId}`}>\n                              <a>{exhibition.title}</a>\n                            </Link>\n                          </h3>\n\n                          <TimelineWorks works={exhibitionWorks} />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {artist?.wikiDataId && (\n        <div className={css.wikidata}>\n          {isLoading ? (\n            <LoaderText className={css.loader} />\n          ) : (\n            <>\n              <h2>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://wikidata.org/wiki/${artist?.wikiDataId}`}\n                >\n                  External data\n                </a>\n              </h2>\n\n              <p className={css.sourceText}>\n                Source:{' '}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://wikidata.org/wiki/${artist?.wikiDataId}`}\n                >\n                  Wikidata\n                </a>\n              </p>\n\n              {wikiData?.description && (\n                <>\n                  <h3>Description</h3>\n                  {wikiData.description}\n                  <br />\n                </>\n              )}\n              {(wikiData?.occupations || wikiData?.genre) && (\n                <p className={css.occupation}>\n                  {wikiData.occupations.join(', ')}\n                  {wikiData.occupations && wikiData.genre ? ' - ' : ''}\n                  {wikiData.genre}\n                  <br />\n                </p>\n              )}\n              {(wikiData?.bornPlace || wikiData?.bornDate) && (\n                <>\n                  Born: {wikiData.bornPlace}\n                  {wikiData.bornPlace && wikiData.bornDate ? ', ' : ''}\n                  {wikiData.bornDate}\n                  <br />\n                </>\n              )}\n              {(wikiData?.diedPlace || wikiData?.diedDate) && (\n                <>\n                  Died: {wikiData.diedPlace}\n                  {wikiData.diedPlace && wikiData.diedDate ? ', ' : ''}\n                  {wikiData.diedDate}\n                  <br />\n                </>\n              )}\n\n              {wikiData?.worksIn && (\n                <>\n                  <h3>Works held at:</h3>\n                  <ul>\n                    {wikiData.worksIn.map((institution) => {\n                      return (\n                        <li key={institution.name}>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={institution.url}\n                          >\n                            {institution.name}\n                          </a>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </>\n              )}\n              {(wikiData?.locUrl ||\n                wikiData?.ausDictBiogUrl ||\n                wikiData?.dictOfSydUrl ||\n                wikiData?.daaoUrl ||\n                wikiData?.troveUrl ||\n                wikiData.agsaUrl ||\n                wikiData.auckAGUrl ||\n                wikiData.euroUrl ||\n                wikiData.tepapaUrl ||\n                wikiData.ngvUrl ||\n                wikiData.anmmUrl) && (\n                <>\n                  <h3>External links</h3>\n                  <ul>\n                    {wikiData.locUrl && (\n                      <li key={wikiData.locUrl}>\n                        View Library of Congress{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.locUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.ausDictBiogUrl && (\n                      <li key={wikiData.ausDictBiogUrl}>\n                        View Australian Dictionary of Biography{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.ausDictBiogUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.dictOfSydUrl && (\n                      <li key={wikiData.dictOfSydUrl}>\n                        View Dictionary of Sydney{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.dictOfSydUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.daaoUrl && (\n                      <li key={wikiData.daaoUrl}>\n                        View{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.daaoUrl}\n                        >\n                          biography\n                        </a>{' '}\n                        at Design &amp; Art Australia Online\n                      </li>\n                    )}\n                    {wikiData.troveUrl && (\n                      <li key={wikiData.troveUrl}>\n                        View Trove{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.troveUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.agsaUrl && (\n                      <li key={wikiData.agsaUrl}>\n                        View Art Gallery of South Australia{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.agsaUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.auckAGUrl && (\n                      <li key={wikiData.auckAGUrl}>\n                        View Auckland Art Gallery{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.auckAGUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.euroUrl && (\n                      <li key={wikiData.euroUrl}>\n                        View Europeana{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.euroUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.tepapaUrl && (\n                      <li key={wikiData.tepapaUrl}>\n                        View Te Papa{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.tepapaUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.ngvUrl && (\n                      <li key={wikiData.ngvUrl}>\n                        View National Gallery of Victoria{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.ngvUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.anmmUrl && (\n                      <li key={wikiData.anmmUrl}>\n                        View Australian National Maritime Museum{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.anmmUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                  </ul>\n                </>\n              )}\n              {wikiData?.examplesOfWork && (\n                <>\n                  <h3\n                    style={{\n                      marginBottom: 'var(--spacing-xxxs)',\n                    }}\n                  >\n                    Examples of works{' '}\n                  </h3>\n\n                  <p className={css.sourceText}>\n                    Source:{' '}\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={wikiData.commonsUrl}\n                    >\n                      Wikimedia\n                    </a>\n                  </p>\n\n                  <div className={css.wikiImages}>\n                    {wikiData.examplesOfWork.map((work) => {\n                      return (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={work.link}\n                          className={css.wikiImage}\n                        >\n                          <img src={work.url} alt={work.link} />\n                        </a>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      <style>\n        {/* Hide empty wikidata paragraph tags */}\n        {`\n        .mw-empty-elt {\n          display: none;\n        }\n        `}\n      </style>\n    </article>\n  );\n};\n\nconst TimelineWorks = ({ works = [], limit = 5 }) => {\n  const [newLimit, setNewLimit] = React.useState(limit);\n  const worksTotal = works.length;\n  const showButton = worksTotal > newLimit;\n\n  return (\n    <div className={css.timelineWorks}>\n      {works.slice(0, newLimit).map((work) => {\n        return (\n          <h4 key={work.id}>\n            <Link as={`/art-index/work/${work.id}`}>\n              <a>{work.title}</a>\n            </Link>\n            <span className={css.timelineWorkFormat}>\n              {work.mediumFormat ? `(${work.mediumFormat})` : ''}\n            </span>\n          </h4>\n        );\n      })}\n\n      {showButton && (\n        <Button\n          className={css.timelineShowMoreButton}\n          onClick={() => {\n            setNewLimit(newLimit + 10);\n          }}\n        >\n          Show more\n        </Button>\n      )}\n    </div>\n  );\n};\n\nconst getBioText = async (link) => {\n  if (!link) {\n    return null;\n  }\n\n  const result = await axios.get(link);\n  const rawOut = result.data;\n  const pageData = rawOut?.query?.pages;\n  const firstKey = pageData && Object.keys(pageData)[0];\n  const out = pageData && pageData[firstKey]?.extract;\n  return out;\n};\n\nconst getWikiDataQValue = async (qVal) => {\n  if (!qVal) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${qVal}&format=json&languages=en&origin=*`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut?.entities[qVal]?.labels?.en?.value;\n  return out;\n};\n\nconst getUrlFromFilename = async (filename) => {\n  if (!filename) {\n    return null;\n  }\n\n  let url =\n    'https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=imageinfo';\n  url += `&iilimit=50&titles=${filename}&format=json&iiprop=url&iiurlwidth=320`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const urlData = rawOut && rawOut?.query?.pages;\n  const firstKey = Object.keys(urlData)[0];\n  const imageUrlData = urlData && urlData[firstKey];\n  const imageUrl =\n    imageUrlData &&\n    imageUrlData?.imageinfo &&\n    imageUrlData?.imageinfo[0].thumburl;\n  const descriptionUrl =\n    imageUrlData &&\n    imageUrlData?.imageinfo &&\n    imageUrlData?.imageinfo[0].descriptionurl;\n  const out = { url: imageUrl, link: descriptionUrl };\n  return out;\n};\n\nconst getWorkExamples = async (commonsCatalogue) => {\n  if (!commonsCatalogue) {\n    return null;\n  }\n  let url =\n    'https://commons.wikimedia.org/w/api.php?action=query&list=categorymembers&origin=*';\n  url += `&cmtype=file&cmtitle=Category:${commonsCatalogue}&format=json&cmlimit=500`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const members = rawOut?.query?.categorymembers;\n\n  const workExamples =\n    members &&\n    (await Promise.all(\n      members.map(async (m) => {\n        const { title } = m;\n        const value = title && (await getUrlFromFilename(title));\n        return value;\n      }),\n    ));\n  return workExamples;\n};\n\nconst getUrlForInstitution = async (id) => {\n  if (!id) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id];\n  const claims = out?.claims;\n  const urlString = claims?.P856 && claims?.P856[0]?.mainsnak?.datavalue?.value;\n\n  return urlString;\n};\n\nconst getWikiData = async (id): Promise<WikiData> => {\n  if (!id) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`;\n  // do initial wikidata lookup for the Q value (identifier) for the artist\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id];\n  // extract desciption\n  const description = out?.descriptions?.en?.value;\n  // 'claims' are where a bunch of links to other stuff live\n  const claims = out?.claims;\n  // such as date of birth/death\n  const dobData =\n    claims?.P569 && claims?.P569[0]?.mainsnak?.datavalue?.value?.time;\n  const bornDate = dobData && dobData.slice(1, 5); // just get the year for now\n  const dodData =\n    claims?.P570 && claims?.P570[0]?.mainsnak?.datavalue?.value?.time;\n  const diedDate = dodData && dodData.slice(1, 5);\n  // location of birth/death (note there are yet another Q vlaue which in turn need to be looked up)\n  const pobId = claims?.P19 && claims?.P19[0]?.mainsnak?.datavalue?.value?.id;\n  const bornPlace = pobId && (await getWikiDataQValue(pobId));\n  const podId = claims?.P20 && claims?.P20[0]?.mainsnak?.datavalue?.value?.id;\n  const diedPlace = podId && (await getWikiDataQValue(podId));\n\n  // get the list of occupations (eg: painter, sculptor, writer)\n  const occupations =\n    claims?.P106 &&\n    (await Promise.all(\n      claims?.P106.map(async (i) => {\n        const oid = i?.mainsnak?.datavalue?.value?.id;\n        const occ = oid && (await getWikiDataQValue(oid));\n        return occ;\n      }),\n    ));\n  // genre of art they worked in\n  const genreId =\n    claims?.P136 && claims?.P136[0]?.mainsnak?.datavalue?.value?.id;\n  const genre = genreId && (await getWikiDataQValue(genreId));\n  // commons category can be used to pull in images of the artist's work\n  const commonsCategory =\n    claims?.P373 && claims?.P373[0]?.mainsnak?.datavalue?.value;\n  // create the URL now, pull in works later\n  const commonsUrl =\n    commonsCategory &&\n    `https://commons.wikimedia.org/wiki/Category:${commonsCategory}`;\n  // get the list of institutions (and their websites) that the artist has\n  // works held in (again these are identifiers and need looking up)\n  const worksIn =\n    claims?.P6379 &&\n    (await Promise.all(\n      claims?.P6379.map(async (i) => {\n        const wid = i?.mainsnak?.datavalue?.value?.id;\n        const value = wid && (await getWikiDataQValue(wid));\n        const instUrl = wid && (await getUrlForInstitution(wid));\n        return { name: value, url: instUrl };\n      }),\n    ));\n  // now pull in IDs from other authoritative sources about the artist\n  // and construct the links, starting with Lib of Congress\n  const locId = claims?.P244 && claims?.P244[0]?.mainsnak?.datavalue?.value;\n  const locUrl = locId && `https://id.loc.gov/authorities/${locId}`;\n  // Australian Disctionary of Biography\n  const ausDictBiogId =\n    claims?.P1907 && claims?.P1907[0]?.mainsnak?.datavalue?.value;\n  const ausDictBiogUrl =\n    ausDictBiogId && `http://adb.anu.edu.au/biography/${ausDictBiogId}`;\n  // Dictionary of Sydney\n  const dictOfSydId =\n    claims?.P3794 && claims?.P3794[0]?.mainsnak?.datavalue?.value;\n  const dictOfSydUrl =\n    dictOfSydId && `https://dictionaryofsydney.org/${dictOfSydId}`;\n  // The DAAO\n  const daaoId = claims?.P1707 && claims?.P1707[0]?.mainsnak?.datavalue?.value;\n  const daaoUrl = daaoId && `https://www.daao.org.au/bio/${daaoId}`;\n  // Trove\n  const troveId = claims?.P1315 && claims?.P1315[0]?.mainsnak?.datavalue?.value;\n  const troveUrl = troveId && `https://trove.nla.gov.au/people/${troveId}`;\n  // Art Gallery of South Australia\n  const agsaId = claims?.P6804 && claims?.P6804[0]?.mainsnak?.datavalue?.value;\n  const agsaUrl =\n    agsaId &&\n    `https://www.agsa.sa.gov.au/collection-publications/collection/creators/_/${agsaId}`;\n  // Auckland Art Gallery\n  const auckAGId =\n    claims?.P3372 && claims?.P3372[0]?.mainsnak?.datavalue?.value;\n  const auckAGUrl =\n    auckAGId &&\n    `http://www.aucklandartgallery.com/explore-art-and-ideas/artist/${auckAGId}`;\n  // Europeana\n  const euroId = claims?.P7704 && claims?.P7704[0]?.mainsnak?.datavalue?.value;\n  const euroUrl = euroId && `https://data.europeana.eu/${euroId}`;\n  // Te Papa museum\n  const tepapaId =\n    claims?.P3544 && claims?.P3544[0]?.mainsnak?.datavalue?.value;\n  const tepapaUrl =\n    tepapaId && `https://collections.tepapa.govt.nz/agent/${tepapaId}`;\n  // Nat Gallery Victoria\n  const ngvId = claims?.P2041 && claims?.P2041[0]?.mainsnak?.datavalue?.value;\n  const ngvUrl =\n    ngvId && `https://www.ngv.vic.gov.au/explore/collection/artist/${ngvId}`;\n  // Aus Nat Maritime Museum\n  const anmmId = claims?.P7769 && claims?.P7769[0]?.mainsnak?.datavalue?.value;\n  const anmmUrl = anmmId && `http://collections.anmm.gov.au/people/${anmmId}`;\n  // Now construct the examples of work data from the commons category\n  const examplesOfWork =\n    commonsCategory && (await getWorkExamples(commonsCategory));\n  // look for wikipedia link in sitelinks section, from which a bio can be extracted\n  const sitelinks = out?.sitelinks;\n  const wikiTitle = sitelinks && sitelinks?.enwiki?.title;\n  const wikiBioLink =\n    wikiTitle &&\n    `https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exsentences=2&titles=${wikiTitle}&format=json&origin=*`; // &explaintext=true\n  const bioText = wikiBioLink && (await getBioText(wikiBioLink));\n  const bioLink = wikiTitle && `https://en.wikipedia.org/wiki/${wikiTitle}`;\n  // build data object to return\n  const data = {\n    description,\n    bornDate,\n    diedDate,\n    bornPlace,\n    diedPlace,\n    occupations,\n    genre,\n    commonsCategory,\n    worksIn,\n    locUrl,\n    ausDictBiogUrl,\n    dictOfSydUrl,\n    daaoUrl,\n    troveUrl,\n    examplesOfWork,\n    commonsUrl,\n    agsaUrl,\n    auckAGUrl,\n    euroUrl,\n    tepapaUrl,\n    ngvUrl,\n    anmmUrl,\n    bioText,\n    bioLink,\n  };\n\n  return data;\n};\n\nexport default ArtIndexArtist;\n"]},"metadata":{},"sourceType":"module"}