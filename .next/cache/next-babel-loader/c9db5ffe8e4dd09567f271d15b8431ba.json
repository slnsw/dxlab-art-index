{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/LoaderText/LoaderText.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoaderText extends Component {\n  render() {\n    const {\n      text,\n      className,\n      style\n    } = this.props;\n    return __jsx(\"div\", {\n      className: ['loader-text', className || ''].join(' '),\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, text, \" \", __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    }, \".\"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \".\"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \".\"));\n  }\n\n}\n\n_defineProperty(LoaderText, \"propTypes\", {\n  text: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object\n});\n\n_defineProperty(LoaderText, \"defaultProps\", {\n  text: 'Loading'\n});\n\nexport default LoaderText;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/LoaderText/LoaderText.tsx"],"names":["Component","PropTypes","LoaderText","render","text","className","style","props","join","string","object"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAQA,MAAMC,UAAN,SAAyBF,SAAzB,CAA0C;AAWxCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKC,KAAxC;AAEA,WACE;AAAK,MAAA,SAAS,EAAE,CAAC,aAAD,EAAgBF,SAAS,IAAI,EAA7B,EAAiCG,IAAjC,CAAsC,GAAtC,CAAhB;AAA4D,MAAA,KAAK,EAAEF,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IADH,OACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADT,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF;AAOD;;AArBuC;;gBAApCF,U,eACe;AACjBE,EAAAA,IAAI,EAAEH,SAAS,CAACQ,MADC;AAEjBJ,EAAAA,SAAS,EAAEJ,SAAS,CAACQ,MAFJ;AAGjBH,EAAAA,KAAK,EAAEL,SAAS,CAACS;AAHA,C;;gBADfR,U,kBAOkB;AACpBE,EAAAA,IAAI,EAAE;AADc,C;;AAiBxB,eAAeF,UAAf","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\ntype Props = {\n  text: string;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nclass LoaderText extends Component<Props> {\n  static propTypes = {\n    text: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    text: 'Loading',\n  };\n\n  render() {\n    const { text, className, style } = this.props;\n\n    return (\n      <div className={['loader-text', className || ''].join(' ')} style={style}>\n        {text} <span>.</span>\n        <span>.</span>\n        <span>.</span>\n      </div>\n    );\n  }\n}\n\nexport default LoaderText;\n"]},"metadata":{},"sourceType":"module"}