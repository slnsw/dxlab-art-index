{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/lib/contexts/art-index-context.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\nimport { arrayToCounts, processFormatsByGenderData, processFormatsByGenderToComparisonData, processPriceData, processWorksByYear } from '../art-index-utils';\nconst ArtIndexContext = /*#__PURE__*/React.createContext([]);\nconst defaultState = {\n  isWorksLoading: true,\n  isArtistsLoading: true,\n  works: [],\n  artists: [],\n  // Data for charts\n  priceData: [],\n  artistsGenderData: [],\n  formatByGenderData: [],\n  formatByGenderComparisonData: [],\n  genderYearData: [],\n  worksByYearData: [],\n  formatsData: {\n    all: [],\n    female: [],\n    male: [],\n    unknown: []\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'FETCH_WORKS':\n      {\n        const works = action.payload;\n        const formatByGenderData = processFormatsByGenderData(works);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isWorksLoading: false,\n          works,\n          priceData: processPriceData(works),\n          formatByGenderData,\n          formatByGenderComparisonData: processFormatsByGenderToComparisonData(formatByGenderData),\n          genderYearData: Array.from(d3Array.group(works, d => d.exhibitionYear)).sort((a, b) => a[0] - b[0]).map(d => {\n            const year = d[0];\n            const allWorks = d[1];\n            return {\n              year,\n              malesTotal: allWorks.filter(work => work.artistGender === 'male').length,\n              femalesTotal: allWorks.filter(work => work.artistGender === 'female').length\n            };\n          }),\n          worksByYearData: processWorksByYear(works),\n          formatsData: {\n            all: arrayToCounts(works.map(work => work.mediumFormat)),\n            male: arrayToCounts(works.filter(work => work.artistGender === 'male').map(work => work.mediumFormat)),\n            female: arrayToCounts(works.filter(work => work.artistGender === 'female').map(work => work.mediumFormat)),\n            unknown: arrayToCounts(works.filter(work => work.artistGender === '').map(work => work.mediumFormat))\n          }\n        });\n      }\n\n    case 'FETCH_ARTISTS':\n      {\n        const artists = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isArtistsLoading: false,\n          artists,\n          artistsGenderData: artists.map(d => {\n            return {\n              name: `${d.firstName} ${d.lastName}`,\n              value: parseInt(d.worksTotal, 10),\n              gender: d.gender\n            };\n          }).filter(d => d.gender === 'male' || d.gender === 'female')\n        });\n      }\n\n    default:\n      {\n        throw new Error(`Unsupported action type: ${action.type}`);\n      }\n  }\n}\n\nfunction useArtIndex() {\n  const context = React.useContext(ArtIndexContext);\n\n  if (context.length === 0) {\n    throw new Error('useArtIndex must be used within ArtIndexProvider');\n  }\n\n  const [state, dispatch] = context; // --------------------------------------------------------------------------\n  // Data Fetching\n  // --------------------------------------------------------------------------\n\n  React.useEffect(() => {\n    d3.csv('/art-index/data/artists.csv').then(artists => {\n      dispatch({\n        type: 'FETCH_ARTISTS',\n        payload: artists\n      });\n    });\n    d3.csv('/art-index/data/works.csv').then(works => {\n      dispatch({\n        type: 'FETCH_WORKS',\n        payload: works\n      });\n    });\n  }, [dispatch]);\n  return {\n    state,\n    dispatch\n  };\n}\n\nfunction ArtIndexProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, defaultState);\n  const value = React.useMemo(() => [state, dispatch], [state]);\n  return __jsx(ArtIndexContext.Provider, _extends({\n    value: value\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport { useArtIndex, ArtIndexProvider };","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/lib/contexts/art-index-context.tsx"],"names":["React","d3","d3Array","arrayToCounts","processFormatsByGenderData","processFormatsByGenderToComparisonData","processPriceData","processWorksByYear","ArtIndexContext","createContext","defaultState","isWorksLoading","isArtistsLoading","works","artists","priceData","artistsGenderData","formatByGenderData","formatByGenderComparisonData","genderYearData","worksByYearData","formatsData","all","female","male","unknown","reducer","state","action","type","payload","Array","from","group","d","exhibitionYear","sort","a","b","map","year","allWorks","malesTotal","filter","work","artistGender","length","femalesTotal","mediumFormat","name","firstName","lastName","value","parseInt","worksTotal","gender","Error","useArtIndex","context","useContext","dispatch","useEffect","csv","then","ArtIndexProvider","props","useReducer","useMemo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\n\nimport {\n  arrayToCounts,\n  processFormatsByGenderData,\n  processFormatsByGenderToComparisonData,\n  processPriceData,\n  processWorksByYear,\n} from '../art-index-utils';\nimport {\n  ArtIndexArtistType,\n  ArtIndexWorkType,\n} from '../../types/art-index-types';\n\ntype ArtIndexActions =\n  | {\n      type: 'FETCH_WORKS';\n      payload: ArtIndexWorkType[];\n    }\n  | {\n      type: 'FETCH_ARTISTS';\n      payload: ArtIndexArtistType[];\n    };\n\ntype ArtIndexState = {\n  isWorksLoading: boolean;\n  isArtistsLoading: boolean;\n  works: ArtIndexWorkType[];\n  artists: ArtIndexArtistType[];\n  priceData: any[];\n  artistsGenderData: any[];\n  formatByGenderData: any[];\n  formatByGenderComparisonData: any[];\n  genderYearData: any[];\n  worksByYearData: any[];\n  formatsData: any[];\n};\n\nconst ArtIndexContext = React.createContext<\n  [ArtIndexState, React.Dispatch<ArtIndexActions>] | []\n>([]);\n\nconst defaultState = {\n  isWorksLoading: true,\n  isArtistsLoading: true,\n  works: [],\n  artists: [],\n  // Data for charts\n  priceData: [],\n  artistsGenderData: [],\n  formatByGenderData: [],\n  formatByGenderComparisonData: [],\n  genderYearData: [],\n  worksByYearData: [],\n  formatsData: { all: [], female: [], male: [], unknown: [] },\n};\n\nfunction reducer(state, action: ArtIndexActions) {\n  switch (action.type) {\n    case 'FETCH_WORKS': {\n      const works = action.payload;\n      const formatByGenderData = processFormatsByGenderData(works);\n\n      return {\n        ...state,\n        isWorksLoading: false,\n        works,\n        priceData: processPriceData(works),\n        formatByGenderData,\n        formatByGenderComparisonData: processFormatsByGenderToComparisonData(\n          formatByGenderData,\n        ),\n        genderYearData: Array.from(\n          d3Array.group(works, (d) => d.exhibitionYear),\n        )\n          .sort((a, b) => a[0] - b[0])\n          .map((d) => {\n            const year = d[0];\n            const allWorks = d[1];\n\n            return {\n              year,\n              malesTotal: allWorks.filter(\n                (work) => work.artistGender === 'male',\n              ).length,\n              femalesTotal: allWorks.filter(\n                (work) => work.artistGender === 'female',\n              ).length,\n            };\n          }),\n        worksByYearData: processWorksByYear(works),\n        formatsData: {\n          all: arrayToCounts(works.map((work) => work.mediumFormat)),\n          male: arrayToCounts(\n            works\n              .filter((work) => work.artistGender === 'male')\n              .map((work) => work.mediumFormat),\n          ),\n          female: arrayToCounts(\n            works\n              .filter((work) => work.artistGender === 'female')\n              .map((work) => work.mediumFormat),\n          ),\n          unknown: arrayToCounts(\n            works\n              .filter((work) => work.artistGender === '')\n              .map((work) => work.mediumFormat),\n          ),\n        },\n      };\n    }\n\n    case 'FETCH_ARTISTS': {\n      const artists = action.payload;\n\n      return {\n        ...state,\n        isArtistsLoading: false,\n        artists,\n        artistsGenderData: artists\n          .map((d) => {\n            return {\n              name: `${d.firstName} ${d.lastName}`,\n              value: parseInt(d.worksTotal, 10),\n              gender: d.gender,\n            };\n          })\n          .filter((d) => d.gender === 'male' || d.gender === 'female'),\n      };\n    }\n\n    default: {\n      throw new Error(`Unsupported action type: ${action.type}`);\n    }\n  }\n}\n\nfunction useArtIndex() {\n  const context = React.useContext(ArtIndexContext);\n\n  if (context.length === 0) {\n    throw new Error('useArtIndex must be used within ArtIndexProvider');\n  }\n\n  const [state, dispatch] = context;\n\n  // --------------------------------------------------------------------------\n  // Data Fetching\n  // --------------------------------------------------------------------------\n  React.useEffect(() => {\n    d3.csv('/art-index/data/artists.csv').then((artists) => {\n      dispatch({\n        type: 'FETCH_ARTISTS',\n        payload: artists,\n      });\n    });\n\n    d3.csv('/art-index/data/works.csv').then((works) => {\n      dispatch({\n        type: 'FETCH_WORKS',\n        payload: works,\n      });\n    });\n  }, [dispatch]);\n\n  return {\n    state,\n    dispatch,\n  };\n}\n\nfunction ArtIndexProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, defaultState);\n  const value = React.useMemo(() => [state, dispatch], [state]);\n\n  return <ArtIndexContext.Provider value={value} {...props} />;\n}\n\nexport { useArtIndex, ArtIndexProvider };\n"]},"metadata":{},"sourceType":"module"}