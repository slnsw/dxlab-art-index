{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderDonutChart/ArtIndexGenderDonutChart.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport DonutChart from '../DonutChart';\nimport { getGenderColour } from '../../lib/art-index-utils';\nimport css from './ArtIndexGenderDonutChart.module.scss';\n\nconst GenderDonutChart = ({\n  malesTotal,\n  femalesTotal,\n  className\n}) => {\n  const bothTotal = malesTotal + femalesTotal;\n  const malesPercent = `${Math.round(malesTotal / bothTotal * 100)}%`;\n  const femalesPercent = `${Math.round(femalesTotal / bothTotal * 100)}%`;\n  return __jsx(\"div\", {\n    className: [css.genderDonutChart, className || ''].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: css.legend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: css.legendColour,\n    style: {\n      width: '1rem',\n      height: '1rem',\n      marginRight: '0.5rem',\n      backgroundColor: getGenderColour('female')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: css.legendName,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Female\", ' '), __jsx(\"p\", {\n    className: css.legendCount,\n    style: {\n      opacity: 0.5,\n      marginLeft: '0.5rem',\n      fontSize: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, femalesPercent)), malesTotal && femalesTotal && __jsx(DonutChart, {\n    data: [{\n      name: 'Men',\n      value: malesTotal\n    }, {\n      name: 'Women',\n      value: femalesTotal\n    }],\n    height: 100,\n    padding: 0,\n    renderLabelText: () => null,\n    colours: ['var(--colour-art-index-male)', 'var(--colour-art-index-female)'],\n    className: css.donutChart // renderLabelText={(d) =>\n    //   `${d.data.name} (${\n    //     d.data.name === 'Men' ? malesPercent : femalesPercent\n    //   })`\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: css.legend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: css.legendColour,\n    style: {\n      display: 'flex',\n      width: '1rem',\n      height: '1rem',\n      marginRight: '0.5rem',\n      backgroundColor: getGenderColour('male')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: css.legendName,\n    style: {\n      alignItems: 'center',\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Male\", ' '), __jsx(\"p\", {\n    className: css.legendCount,\n    style: {\n      marginLeft: '0.5rem',\n      fontSize: '2rem',\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, malesPercent)));\n};\n\nexport default GenderDonutChart;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderDonutChart/ArtIndexGenderDonutChart.tsx"],"names":["React","DonutChart","getGenderColour","css","GenderDonutChart","malesTotal","femalesTotal","className","bothTotal","malesPercent","Math","round","femalesPercent","genderDonutChart","join","legend","legendColour","width","height","marginRight","backgroundColor","legendName","display","alignItems","marginBottom","legendCount","opacity","marginLeft","fontSize","name","value","donutChart"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,OAAOC,GAAP,MAAgB,wCAAhB;;AAQA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,KAAoD;AAC3E,QAAMC,SAAS,GAAGH,UAAU,GAAGC,YAA/B;AACA,QAAMG,YAAY,GAAI,GAAEC,IAAI,CAACC,KAAL,CAAYN,UAAU,GAAGG,SAAd,GAA2B,GAAtC,CAA2C,GAAnE;AACA,QAAMI,cAAc,GAAI,GAAEF,IAAI,CAACC,KAAL,CAAYL,YAAY,GAAGE,SAAhB,GAA6B,GAAxC,CAA6C,GAAvE;AAEA,SACE;AAAK,IAAA,SAAS,EAAE,CAACL,GAAG,CAACU,gBAAL,EAAuBN,SAAS,IAAI,EAApC,EAAwCO,IAAxC,CAA6C,GAA7C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEZ,GAAG,CAACa,YADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,WAAW,EAAE,QAHR;AAILC,MAAAA,eAAe,EAAElB,eAAe,CAAC,QAAD;AAJ3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AACE,IAAA,SAAS,EAAEC,GAAG,CAACkB,UADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,YAAY,EAAE;AAHT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAQS,GART,CAVF,EAoBE;AACE,IAAA,SAAS,EAAErB,GAAG,CAACsB,WADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,GADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGhB,cARH,CApBF,CADF,EAiCGP,UAAU,IAAIC,YAAd,IACC,MAAC,UAAD;AACE,IAAA,IAAI,EAAE,CACJ;AACEuB,MAAAA,IAAI,EAAE,KADR;AAEEC,MAAAA,KAAK,EAAEzB;AAFT,KADI,EAKJ;AACEwB,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,KAAK,EAAExB;AAFT,KALI,CADR;AAWE,IAAA,MAAM,EAAE,GAXV;AAYE,IAAA,OAAO,EAAE,CAZX;AAaE,IAAA,eAAe,EAAE,MAAM,IAbzB;AAcE,IAAA,OAAO,EAAE,CACP,8BADO,EAEP,gCAFO,CAdX;AAkBE,IAAA,SAAS,EAAEH,GAAG,CAAC4B,UAlBjB,CAmBE;AACA;AACA;AACA;AACA;AAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,EA4DE;AAAK,IAAA,SAAS,EAAE5B,GAAG,CAACY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEZ,GAAG,CAACa,YADjB;AAEE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAE,MADJ;AAELL,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,WAAW,EAAE,QAJR;AAKLC,MAAAA,eAAe,EAAElB,eAAe,CAAC,MAAD;AAL3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE;AACE,IAAA,SAAS,EAAEC,GAAG,CAACkB,UADjB;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE,QADP;AAELC,MAAAA,YAAY,EAAE;AAFT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOO,GAPP,CAXF,EAoBE;AACE,IAAA,SAAS,EAAErB,GAAG,CAACsB,WADjB;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE,QADP;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLF,MAAAA,OAAO,EAAE;AAHJ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGjB,YARH,CApBF,CA5DF,CADF;AA8FD,CAnGD;;AAqGA,eAAeL,gBAAf","sourcesContent":["import React from 'react';\n\nimport DonutChart from '../DonutChart';\n\nimport { getGenderColour } from '../../lib/art-index-utils';\n\nimport css from './ArtIndexGenderDonutChart.module.scss';\n\ntype Props = {\n  malesTotal: number;\n  femalesTotal: number;\n  className?: string;\n};\n\nconst GenderDonutChart = ({ malesTotal, femalesTotal, className }: Props) => {\n  const bothTotal = malesTotal + femalesTotal;\n  const malesPercent = `${Math.round((malesTotal / bothTotal) * 100)}%`;\n  const femalesPercent = `${Math.round((femalesTotal / bothTotal) * 100)}%`;\n\n  return (\n    <div className={[css.genderDonutChart, className || ''].join(' ')}>\n      <div className={css.legend}>\n        <div\n          className={css.legendColour}\n          style={{\n            width: '1rem',\n            height: '1rem',\n            marginRight: '0.5rem',\n            backgroundColor: getGenderColour('female'),\n          }}\n        ></div>\n        <p\n          className={css.legendName}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: 0,\n          }}\n        >\n          Female{' '}\n        </p>\n        <p\n          className={css.legendCount}\n          style={{\n            opacity: 0.5,\n            marginLeft: '0.5rem',\n            fontSize: '2rem',\n          }}\n        >\n          {femalesPercent}\n        </p>\n      </div>\n\n      {malesTotal && femalesTotal && (\n        <DonutChart\n          data={[\n            {\n              name: 'Men',\n              value: malesTotal,\n            },\n            {\n              name: 'Women',\n              value: femalesTotal,\n            },\n          ]}\n          height={100}\n          padding={0}\n          renderLabelText={() => null}\n          colours={[\n            'var(--colour-art-index-male)',\n            'var(--colour-art-index-female)',\n          ]}\n          className={css.donutChart}\n          // renderLabelText={(d) =>\n          //   `${d.data.name} (${\n          //     d.data.name === 'Men' ? malesPercent : femalesPercent\n          //   })`\n          // }\n        />\n      )}\n      <div className={css.legend}>\n        <div\n          className={css.legendColour}\n          style={{\n            display: 'flex',\n            width: '1rem',\n            height: '1rem',\n            marginRight: '0.5rem',\n            backgroundColor: getGenderColour('male'),\n          }}\n        ></div>\n        <p\n          className={css.legendName}\n          style={{\n            alignItems: 'center',\n            marginBottom: 0,\n          }}\n        >\n          Male{' '}\n        </p>\n        <p\n          className={css.legendCount}\n          style={{\n            marginLeft: '0.5rem',\n            fontSize: '2rem',\n            opacity: 0.5,\n          }}\n        >\n          {malesPercent}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GenderDonutChart;\n"]},"metadata":{},"sourceType":"module"}