{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/SocialMetaHead/SocialMetaHead.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import * as React from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\n/**\n * Social meta tags for Next JS's Head component.\n * To use, place adjacent to (not inside) other Head components.\n * https://css-tricks.com/essential-meta-tags-social-media/#article-header-id-2\n */\nvar SocialMetaHead = function SocialMetaHead(_ref) {\n  _s();\n\n  var title = _ref.title,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? '' : _ref$description,\n      imageUrl = _ref.imageUrl,\n      imageAlt = _ref.imageAlt,\n      imageWidth = _ref.imageWidth,\n      imageHeight = _ref.imageHeight,\n      _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      siteName = _ref.siteName,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'website' : _ref$type,\n      fbAppId = _ref.fbAppId,\n      twitterUsername = _ref.twitterUsername;\n  var router = useRouter();\n  var url = \"\".concat(baseUrl || '').concat(router && router.asPath);\n  var truncatedTitle = truncate(title);\n  var truncatedDescription = truncate(description);\n  var truncatedImageAlt = truncate(imageAlt);\n  return __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, truncatedTitle && __jsx(\"meta\", {\n    property: \"og:title\",\n    content: truncatedTitle,\n    key: \"meta-og:title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), truncatedDescription && __jsx(\"meta\", {\n    property: \"og:description\",\n    content: truncatedDescription,\n    key: \"meta-og:description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), url && __jsx(\"meta\", {\n    property: \"og:url\",\n    content: url,\n    key: \"meta-og:url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), imageUrl && __jsx(\"meta\", {\n    property: \"og:image\",\n    content: imageUrl,\n    key: \"meta-og:image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), siteName && __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: siteName,\n    key: \"meta-og:site_name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), imageWidth && __jsx(\"meta\", {\n    property: \"og:image:width\",\n    content: \"\".concat(imageWidth),\n    key: \"meta-og:image:width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), imageHeight && __jsx(\"meta\", {\n    property: \"og:image:height\",\n    content: \"\".concat(imageHeight),\n    key: \"meta-og:image:height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), truncatedImageAlt && __jsx(\"meta\", {\n    name: \"twitter:image:alt\",\n    content: truncatedImageAlt,\n    key: \"meta-twitter:image:alt\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), type && __jsx(\"meta\", {\n    property: \"og:type\",\n    content: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }\n  }), fbAppId && __jsx(\"meta\", {\n    property: \"fb:app_id\",\n    content: fbAppId,\n    key: \"meta-fb:app_id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), twitterUsername && __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: twitterUsername,\n    key: 'meta-twitter:site',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(SocialMetaHead, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SocialMetaHead;\n\nvar truncate = function truncate(text) {\n  var maxChars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n\n  if (text && text.length > maxChars) {\n    return \"\".concat(text.substring(0, maxChars), \"...\");\n  }\n\n  return text;\n};\n\nexport default SocialMetaHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocialMetaHead\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/SocialMetaHead/SocialMetaHead.tsx"],"names":["Head","useRouter","SocialMetaHead","title","description","imageUrl","imageAlt","imageWidth","imageHeight","baseUrl","siteName","type","fbAppId","twitterUsername","router","url","asPath","truncatedTitle","truncate","truncatedDescription","truncatedImageAlt","text","maxChars","length","substring"],"mappings":"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","sourcesContent":["// import * as React from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\ntype Props = {\n  title: string;\n  description: string;\n  imageUrl?: string;\n  imageAlt?: string;\n  /** Providing width speeds up shares of new URLs on Facebook */\n  imageWidth?: number;\n  /** Providing height speeds up shares of new URLs on Facebook */\n  imageHeight?: number;\n  baseUrl?: string;\n  siteName?: string;\n  type?: string;\n  fbAppId?: string;\n  twitterUsername?: string;\n};\n\n/**\n * Social meta tags for Next JS's Head component.\n * To use, place adjacent to (not inside) other Head components.\n * https://css-tricks.com/essential-meta-tags-social-media/#article-header-id-2\n */\nconst SocialMetaHead: React.FC<Props> = ({\n  title,\n  description = '',\n  imageUrl,\n  imageAlt,\n  imageWidth,\n  imageHeight,\n  baseUrl = '',\n  siteName,\n  type = 'website',\n  fbAppId,\n  twitterUsername,\n}) => {\n  const router = useRouter();\n  const url = `${baseUrl || ''}${router && router.asPath}`;\n  const truncatedTitle = truncate(title);\n  const truncatedDescription = truncate(description);\n  const truncatedImageAlt = truncate(imageAlt);\n\n  return (\n    <Head>\n      {/* ----------------------------------------------------------------- */}\n      {/* Essential Meta Tags */}\n      {/* ----------------------------------------------------------------- */}\n\n      {truncatedTitle && (\n        <meta\n          property=\"og:title\"\n          content={truncatedTitle}\n          key=\"meta-og:title\"\n        />\n      )}\n\n      {truncatedDescription && (\n        <meta\n          property=\"og:description\"\n          content={truncatedDescription}\n          key=\"meta-og:description\"\n        />\n      )}\n\n      {url && <meta property=\"og:url\" content={url} key=\"meta-og:url\" />}\n\n      {imageUrl && (\n        <meta property=\"og:image\" content={imageUrl} key=\"meta-og:image\" />\n      )}\n\n      {/* ----------------------------------------------------------------- */}\n      {/* Non-Essential, But Recommended */}\n      {/* ----------------------------------------------------------------- */}\n\n      {siteName && (\n        <meta\n          property=\"og:site_name\"\n          content={siteName}\n          key=\"meta-og:site_name\"\n        />\n      )}\n\n      {imageWidth && (\n        <meta\n          property=\"og:image:width\"\n          content={`${imageWidth}`}\n          key=\"meta-og:image:width\"\n        />\n      )}\n\n      {imageHeight && (\n        <meta\n          property=\"og:image:height\"\n          content={`${imageHeight}`}\n          key=\"meta-og:image:height\"\n        />\n      )}\n\n      {truncatedImageAlt && (\n        <meta\n          name=\"twitter:image:alt\"\n          content={truncatedImageAlt}\n          key=\"meta-twitter:image:alt\"\n        />\n      )}\n\n      {type && <meta property=\"og:type\" content={type} />}\n\n      {/* ----------------------------------------------------------------- */}\n      {/* Non-Essential, But Required for analytics */}\n      {/* ----------------------------------------------------------------- */}\n\n      {fbAppId && (\n        <meta property=\"fb:app_id\" content={fbAppId} key=\"meta-fb:app_id\" />\n      )}\n\n      {twitterUsername && (\n        <meta\n          name=\"twitter:site\"\n          content={twitterUsername}\n          key={'meta-twitter:site'}\n        />\n      )}\n    </Head>\n  );\n};\n\nconst truncate = (text, maxChars = 300) => {\n  if (text && text.length > maxChars) {\n    return `${text.substring(0, maxChars)}...`;\n  }\n\n  return text;\n};\n\nexport default SocialMetaHead;\n"]},"metadata":{},"sourceType":"module"}