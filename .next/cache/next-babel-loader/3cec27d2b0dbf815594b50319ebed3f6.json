{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderFormatDonutCharts/ArtIndexGenderFormatDonutCharts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport DonutChart from '../DonutChart';\nimport ArtIndexGenderLegend from '../ArtIndexGenderLegend'; // import { getGenderColour } from '../../lib/art-index-utils';\n\nimport css from './ArtIndexGenderFormatDonutCharts.module.scss';\n\nvar ArtIndexGenderFormatDonutCharts = function ArtIndexGenderFormatDonutCharts(_ref) {\n  _s();\n\n  var className = _ref.className;\n\n  var _useArtIndex = useArtIndex(),\n      state = _useArtIndex.state;\n\n  var formatByGenderData = state.formatByGenderData;\n  var males = formatByGenderData.males,\n      females = formatByGenderData.females;\n  var formats = ['China painting', 'Wax Medallion', 'Miniature', 'Wood Carving', 'Crayon Drawing', 'Pencil Drawing', 'Medallion', 'Oil Painting', 'Watercolour Painting', 'Drawing', // \"Unknown\",\n  // 'Ink Drawing',\n  'Book', 'Jewellery', 'Printing', 'Sculpture', 'Architectural Drawing', 'Photograph'];\n  var donutData = formats.map(function (f) {\n    var fdata = females && females.filter(function (d) {\n      return d.format === f;\n    });\n    var mdata = males && males.filter(function (d) {\n      return d.format === f;\n    });\n    var total = mdata && fdata && mdata[0].count + fdata[0].count;\n    var malePercentage = total && Math.floor(mdata[0].count / total * 100);\n    var femalePercentage = total && 100 - malePercentage;\n    return {\n      format: f,\n      data: [{\n        name: 'Men',\n        value: total && malePercentage\n      }, {\n        name: 'Women',\n        value: total && femalePercentage\n      }]\n    };\n  });\n  return __jsx(\"div\", {\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(ArtIndexGenderLegend, {\n    markerType: \"square\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: [css.ArtIndexGenderFormatDonutCharts, className || ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, donutData.map(function (donut) {\n    return __jsx(\"div\", {\n      className: css.formatDonut,\n      key: donut.format,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(DonutChart, {\n      data: donut.data,\n      height: 120,\n      padding: 26,\n      padAngle: 0.05,\n      innerRadiusRatio: 0.7,\n      colours: ['var(--colour-art-index-male)', 'var(--colour-art-index-female)'],\n      renderLabelText: function renderLabelText(d) {\n        return d.data.value && \"\".concat(d.data.value, \"%\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      className: css.donutLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, donut.format));\n  })));\n};\n\n_s(ArtIndexGenderFormatDonutCharts, \"IM4lHED7Ilr2aQoUjVlR3UGuePM=\", false, function () {\n  return [useArtIndex];\n});\n\n_c = ArtIndexGenderFormatDonutCharts;\nexport default ArtIndexGenderFormatDonutCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexGenderFormatDonutCharts\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexGenderFormatDonutCharts/ArtIndexGenderFormatDonutCharts.tsx"],"names":["React","useArtIndex","DonutChart","ArtIndexGenderLegend","css","ArtIndexGenderFormatDonutCharts","className","state","formatByGenderData","males","females","formats","donutData","map","f","fdata","filter","d","format","mdata","total","count","malePercentage","Math","floor","femalePercentage","data","name","value","join","donut","formatDonut","donutLabel"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport DonutChart from '../DonutChart';\nimport ArtIndexGenderLegend from '../ArtIndexGenderLegend';\n\n// import { getGenderColour } from '../../lib/art-index-utils';\n\nimport css from './ArtIndexGenderFormatDonutCharts.module.scss';\n\ntype Props = {\n  className?: string;\n};\n\nconst ArtIndexGenderFormatDonutCharts = ({ className }: Props) => {\n  const { state } = useArtIndex();\n  const { formatByGenderData } = state;\n  const { males, females } = formatByGenderData;\n  const formats = [\n    'China painting',\n    'Wax Medallion',\n    'Miniature',\n    'Wood Carving',\n    'Crayon Drawing',\n    'Pencil Drawing',\n    'Medallion',\n    'Oil Painting',\n    'Watercolour Painting',\n    'Drawing',\n    // \"Unknown\",\n    // 'Ink Drawing',\n    'Book',\n    'Jewellery',\n    'Printing',\n    'Sculpture',\n    'Architectural Drawing',\n    'Photograph',\n  ];\n  const donutData = formats.map((f) => {\n    const fdata =\n      females &&\n      females.filter((d) => {\n        return d.format === f;\n      });\n    const mdata =\n      males &&\n      males.filter((d) => {\n        return d.format === f;\n      });\n    const total = mdata && fdata && mdata[0].count + fdata[0].count;\n    const malePercentage = total && Math.floor((mdata[0].count / total) * 100);\n    const femalePercentage = total && 100 - malePercentage;\n    return {\n      format: f,\n      data: [\n        {\n          name: 'Men',\n          value: total && malePercentage,\n        },\n        {\n          name: 'Women',\n          value: total && femalePercentage,\n        },\n      ],\n    };\n  });\n\n  return (\n    <div className={className}>\n      <ArtIndexGenderLegend markerType=\"square\" />\n      <div\n        className={[css.ArtIndexGenderFormatDonutCharts, className || ''].join(\n          ' ',\n        )}\n      >\n        {donutData.map((donut) => {\n          return (\n            <div className={css.formatDonut} key={donut.format}>\n              {\n                <DonutChart\n                  data={donut.data}\n                  height={120}\n                  padding={26}\n                  padAngle={0.05}\n                  innerRadiusRatio={0.7}\n                  colours={[\n                    'var(--colour-art-index-male)',\n                    'var(--colour-art-index-female)',\n                  ]}\n                  renderLabelText={(d) => d.data.value && `${d.data.value}%`}\n                />\n              }\n              <p className={css.donutLabel}>{donut.format}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ArtIndexGenderFormatDonutCharts;\n"]},"metadata":{},"sourceType":"module"}