{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/App/App.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport SocialMetaHead from '../SocialMetaHead';\nimport { buildHeadTitle } from '../../lib';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children,\n          metaDescription = _this$props.metaDescription,\n          metaImageUrl = _this$props.metaImageUrl,\n          metaImageAlt = _this$props.metaImageAlt,\n          metaImageWidth = _this$props.metaImageWidth,\n          metaImageHeight = _this$props.metaImageHeight,\n          className = _this$props.className; // const baseUrl =\n      //   process.env.DXLAB_WEBSITE_BASE_URL || 'https://dxlab.sl.nsw.gov.au';\n      // const metaUrl = `${baseUrl}${pathname}`;\n\n      return __jsx(\"div\", {\n        className: ['app', className || ''].join(' ') // onScroll={this.handleOnScroll}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, buildHeadTitle(title)), __jsx(\"meta\", {\n        httpEquiv: \"Content-Type\",\n        content: \"text/html; charset=UTF-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1, maximum-scale=5, user-scalable=1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), __jsx(\"link\", {\n        rel: \"shortcut icon\",\n        href: \"https://www.sl.nsw.gov.au/sites/all/themes/slnsw_frontend/favicon.ico\",\n        type: \"image/vnd.microsoft.icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), __jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Lekton:400,400i,700\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), __jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Barlow:300,300i,400,400i,500,500i,600\",\n        rel: \"stylesheet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })), __jsx(SocialMetaHead, {\n        title: title,\n        description: metaDescription,\n        imageUrl: metaImageUrl,\n        imageAlt: metaImageAlt,\n        imageWidth: metaImageWidth,\n        imageHeight: metaImageHeight,\n        baseUrl: \"https://dxlab.sl.nsw.gov.au\",\n        siteName: \"DX Lab | State Library of NSW\",\n        fbAppId: process.env.DXLAB_WEBSITE_FB_APP_ID,\n        twitterUsername: \"@statelibrarynsw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }), children);\n    }\n  }]);\n\n  return App;\n}(Component);\n\n_defineProperty(App, \"propTypes\", {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  // pathname: PropTypes.string,\n  // isLoading: PropTypes.bool,\n  metaDescription: PropTypes.string,\n  metaImageUrl: PropTypes.string,\n  metaImageAlt: PropTypes.string,\n  metaImageWidth: PropTypes.number,\n  metaImageHeight: PropTypes.number,\n  // headerMenuItems: PropTypes.array,\n  className: PropTypes.string\n});\n\nexport default App;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/App/App.tsx"],"names":["Component","PropTypes","Head","SocialMetaHead","buildHeadTitle","App","props","title","children","metaDescription","metaImageUrl","metaImageAlt","metaImageWidth","metaImageHeight","className","join","process","env","DXLAB_WEBSITE_FB_APP_ID","string","oneOfType","array","object","number"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\n\nimport SocialMetaHead from '../SocialMetaHead';\n\nimport { buildHeadTitle } from '../../lib';\n\ntype Props = {\n  title: string;\n  children?: React.ReactNode;\n  metaDescription?: string;\n  metaImageUrl?: string;\n  metaImageAlt?: string;\n  metaImageWidth?: number;\n  metaImageHeight?: number;\n  className?: string;\n};\n\nclass App extends Component<Props> {\n  static propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    // pathname: PropTypes.string,\n    // isLoading: PropTypes.bool,\n    metaDescription: PropTypes.string,\n    metaImageUrl: PropTypes.string,\n    metaImageAlt: PropTypes.string,\n    metaImageWidth: PropTypes.number,\n    metaImageHeight: PropTypes.number,\n    // headerMenuItems: PropTypes.array,\n    className: PropTypes.string,\n  };\n\n  render() {\n    const {\n      title,\n      children,\n      // pathname,\n      // isLoading,\n      metaDescription,\n      metaImageUrl,\n      metaImageAlt,\n      metaImageWidth,\n      metaImageHeight,\n      // headerMenuItems,\n      className,\n      // metaUrl,\n    } = this.props;\n\n    // const baseUrl =\n    //   process.env.DXLAB_WEBSITE_BASE_URL || 'https://dxlab.sl.nsw.gov.au';\n    // const metaUrl = `${baseUrl}${pathname}`;\n\n    return (\n      <div\n        className={['app', className || ''].join(' ')}\n        // onScroll={this.handleOnScroll}\n      >\n        <Head>\n          {/* <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" /> */}\n          <title>{buildHeadTitle(title)}</title>\n          <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1, maximum-scale=5, user-scalable=1\"\n          />\n\n          <link\n            rel=\"shortcut icon\"\n            href=\"https://www.sl.nsw.gov.au/sites/all/themes/slnsw_frontend/favicon.ico\"\n            type=\"image/vnd.microsoft.icon\"\n          />\n\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Lekton:400,400i,700\"\n            rel=\"stylesheet\"\n          />\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Barlow:300,300i,400,400i,500,500i,600\"\n            rel=\"stylesheet\"\n          />\n        </Head>\n\n        <SocialMetaHead\n          title={title}\n          description={metaDescription}\n          imageUrl={metaImageUrl}\n          imageAlt={metaImageAlt}\n          imageWidth={metaImageWidth}\n          imageHeight={metaImageHeight}\n          baseUrl=\"https://dxlab.sl.nsw.gov.au\"\n          siteName=\"DX Lab | State Library of NSW\"\n          fbAppId={process.env.DXLAB_WEBSITE_FB_APP_ID}\n          twitterUsername=\"@statelibrarynsw\"\n        />\n\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}