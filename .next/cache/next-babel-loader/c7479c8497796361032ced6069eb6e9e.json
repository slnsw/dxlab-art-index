{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexFormatBubbleChart/ArtIndexFormatBubbleChart.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport BubbleChart from '../BubbleChart';\nimport css from './ArtIndexFormatBubbleChart.module.scss';\n\nvar ArtIndexFormatBubbleChart = function ArtIndexFormatBubbleChart(_ref) {\n  _s();\n\n  var data = _ref.data,\n      className = _ref.className,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 600 : _ref$height,\n      _ref$smallCircleLimit = _ref.smallCircleLimit,\n      smallCircleLimit = _ref$smallCircleLimit === void 0 ? 11 : _ref$smallCircleLimit,\n      _ref$letterWidth = _ref.letterWidth,\n      letterWidth = _ref$letterWidth === void 0 ? 4 : _ref$letterWidth,\n      onBubbleClick = _ref.onBubbleClick;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hoverIndex = _React$useState2[0],\n      setHoverIndex = _React$useState2[1];\n\n  return __jsx(BubbleChart, {\n    data: data.slice(0, 30).map(function (d) {\n      return {\n        name: d.item || 'Unknown',\n        value: d.count\n      };\n    }),\n    height: height,\n    className: [css.artIndexFormatBubbleChart, className || ''].join(' '),\n    renderBubble: function renderBubble(d, i) {\n      // TODO: Consider `provider` API like React Select\n      return {\n        append: 'g',\n        transform: \"translate(\".concat(d.x, \",\").concat(d.y, \")\"),\n        duration: 1000,\n        children: [{\n          append: 'circle',\n          data: d.data,\n          r: {\n            enter: d.r,\n            exit: 0\n          },\n          fill: 'var(--colour-primary)',\n          duration: 1000,\n          onClick: typeof onBubbleClick === 'function' && onBubbleClick,\n          cursor: typeof onBubbleClick === 'function' ? 'pointer' : 'default',\n          onMouseOver: function onMouseOver() {\n            setHoverIndex(i);\n          },\n          onMouseOut: function onMouseOut() {\n            setHoverIndex(null);\n          }\n        }]\n      };\n    },\n    renderLabel: function renderLabel(d, i) {\n      var isHovered = i === hoverIndex;\n      var labelText = d.data.name || 'Unknown';\n      var displayNumber = d.data.value.toString().length * letterWidth < d.r;\n      var shortenedLabelText = d.r > smallCircleLimit ? // ? `${labelText.slice(0, d.data.value.toString(10).length - 1)}…`\n      \"\".concat(labelText.slice(0, Math.floor(d.r / letterWidth) - 1), \"\\u2026\") : ' '; // have to put an actual space here, not empty string or else text never goes away\n      // TODO: Consider `provider` API like React Select\n\n      return {\n        append: 'g',\n        transform: \"translate(\".concat(d.x, \",\").concat(d.y, \")\"),\n        duration: 1000,\n        children: [{\n          append: 'text',\n          key: d.data.name,\n          fill: 'var(--colour-white)',\n          fontWeight: 600,\n          text: isHovered || labelText.length * letterWidth < d.r ? labelText : shortenedLabelText,\n          opacity: {\n            enter: 1,\n            exit: 0\n          },\n          duration: 1000,\n          y: '-0.2em'\n        }, {\n          append: 'text',\n          fill: 'var(--colour-white)',\n          text: isHovered || displayNumber && d.r > smallCircleLimit ? d.data.value : ' ',\n          // have to put an actual space here, not empty string or else text never goes away\n          opacity: 0.8,\n          y: '0.9em'\n        }]\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\n_s(ArtIndexFormatBubbleChart, \"7XGtNr9BsKihW2yVz9tMMtR5Dek=\");\n\n_c = ArtIndexFormatBubbleChart;\nexport default ArtIndexFormatBubbleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexFormatBubbleChart\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexFormatBubbleChart/ArtIndexFormatBubbleChart.tsx"],"names":["React","BubbleChart","css","ArtIndexFormatBubbleChart","data","className","height","smallCircleLimit","letterWidth","onBubbleClick","useState","hoverIndex","setHoverIndex","slice","map","d","name","item","value","count","artIndexFormatBubbleChart","join","i","append","transform","x","y","duration","children","r","enter","exit","fill","onClick","cursor","onMouseOver","onMouseOut","isHovered","labelText","displayNumber","toString","length","shortenedLabelText","Math","floor","key","fontWeight","text","opacity"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,GAAP,MAAgB,yCAAhB;;AAcA,IAAMC,yBAA0C,GAAG,SAA7CA,yBAA6C,OAO7C;AAAA;;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,yBAJJC,MAII;AAAA,MAJJA,MAII,4BAJK,GAIL;AAAA,mCAHJC,gBAGI;AAAA,MAHJA,gBAGI,sCAHe,EAGf;AAAA,8BAFJC,WAEI;AAAA,MAFJA,WAEI,iCAFU,CAEV;AAAA,MADJC,aACI,QADJA,aACI;;AAAA,wBACgCT,KAAK,CAACU,QAAN,CAAe,IAAf,CADhC;AAAA;AAAA,MACGC,UADH;AAAA,MACeC,aADf;;AAEJ,SACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAER,IAAI,CAACS,KAAL,CAAW,CAAX,EAAc,EAAd,EAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAO;AACjC,aAAO;AACLC,QAAAA,IAAI,EAAED,CAAC,CAACE,IAAF,IAAU,SADX;AAELC,QAAAA,KAAK,EAAEH,CAAC,CAACI;AAFJ,OAAP;AAID,KALK,CADR;AAOE,IAAA,MAAM,EAAEb,MAPV;AAQE,IAAA,SAAS,EAAE,CAACJ,GAAG,CAACkB,yBAAL,EAAgCf,SAAS,IAAI,EAA7C,EAAiDgB,IAAjD,CAAsD,GAAtD,CARb;AASE,IAAA,YAAY,EAAE,sBAACN,CAAD,EAAIO,CAAJ,EAAU;AACtB;AACA,aAAO;AACLC,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,SAAS,sBAAeT,CAAC,CAACU,CAAjB,cAAsBV,CAAC,CAACW,CAAxB,MAFJ;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,QAAQ,EAAE,CACR;AACEL,UAAAA,MAAM,EAAE,QADV;AAEEnB,UAAAA,IAAI,EAAEW,CAAC,CAACX,IAFV;AAGEyB,UAAAA,CAAC,EAAE;AAAEC,YAAAA,KAAK,EAAEf,CAAC,CAACc,CAAX;AAAcE,YAAAA,IAAI,EAAE;AAApB,WAHL;AAIEC,UAAAA,IAAI,EAAE,uBAJR;AAKEL,UAAAA,QAAQ,EAAE,IALZ;AAMEM,UAAAA,OAAO,EAAE,OAAOxB,aAAP,KAAyB,UAAzB,IAAuCA,aANlD;AAOEyB,UAAAA,MAAM,EACJ,OAAOzB,aAAP,KAAyB,UAAzB,GAAsC,SAAtC,GAAkD,SARtD;AASE0B,UAAAA,WAAW,EAAE,uBAAM;AACjBvB,YAAAA,aAAa,CAACU,CAAD,CAAb;AACD,WAXH;AAYEc,UAAAA,UAAU,EAAE,sBAAM;AAChBxB,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AAdH,SADQ;AAJL,OAAP;AAuBD,KAlCH;AAmCE,IAAA,WAAW,EAAE,qBAACG,CAAD,EAAIO,CAAJ,EAAU;AACrB,UAAMe,SAAS,GAAGf,CAAC,KAAKX,UAAxB;AAEA,UAAM2B,SAAS,GAAGvB,CAAC,CAACX,IAAF,CAAOY,IAAP,IAAe,SAAjC;AAEA,UAAMuB,aAAa,GACjBxB,CAAC,CAACX,IAAF,CAAOc,KAAP,CAAasB,QAAb,GAAwBC,MAAxB,GAAiCjC,WAAjC,GAA+CO,CAAC,CAACc,CADnD;AAGA,UAAMa,kBAAkB,GACtB3B,CAAC,CAACc,CAAF,GAAMtB,gBAAN,GACI;AADJ,gBAEO+B,SAAS,CAACzB,KAAV,CAAgB,CAAhB,EAAmB8B,IAAI,CAACC,KAAL,CAAW7B,CAAC,CAACc,CAAF,GAAMrB,WAAjB,IAAgC,CAAnD,CAFP,cAGI,GAJN,CARqB,CAYV;AACX;;AACA,aAAO;AACLe,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,SAAS,sBAAeT,CAAC,CAACU,CAAjB,cAAsBV,CAAC,CAACW,CAAxB,MAFJ;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,QAAQ,EAAE,CACR;AACEL,UAAAA,MAAM,EAAE,MADV;AAEEsB,UAAAA,GAAG,EAAE9B,CAAC,CAACX,IAAF,CAAOY,IAFd;AAGEgB,UAAAA,IAAI,EAAE,qBAHR;AAIEc,UAAAA,UAAU,EAAE,GAJd;AAKEC,UAAAA,IAAI,EACFV,SAAS,IAAIC,SAAS,CAACG,MAAV,GAAmBjC,WAAnB,GAAiCO,CAAC,CAACc,CAAhD,GACIS,SADJ,GAEII,kBARR;AASEM,UAAAA,OAAO,EAAE;AAAElB,YAAAA,KAAK,EAAE,CAAT;AAAYC,YAAAA,IAAI,EAAE;AAAlB,WATX;AAUEJ,UAAAA,QAAQ,EAAE,IAVZ;AAWED,UAAAA,CAAC,EAAE;AAXL,SADQ,EAcR;AACEH,UAAAA,MAAM,EAAE,MADV;AAEES,UAAAA,IAAI,EAAE,qBAFR;AAGEe,UAAAA,IAAI,EACFV,SAAS,IAAKE,aAAa,IAAIxB,CAAC,CAACc,CAAF,GAAMtB,gBAArC,GACIQ,CAAC,CAACX,IAAF,CAAOc,KADX,GAEI,GANR;AAMa;AACX8B,UAAAA,OAAO,EAAE,GAPX;AAQEtB,UAAAA,CAAC,EAAE;AARL,SAdQ;AAJL,OAAP;AA8BD,KA/EH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmFD,CA5FD;;GAAMvB,yB;;KAAAA,yB;AA8FN,eAAeA,yBAAf","sourcesContent":["import React from 'react';\n\nimport BubbleChart from '../BubbleChart';\n\nimport css from './ArtIndexFormatBubbleChart.module.scss';\n\ntype Props = {\n  data?: {\n    item: string;\n    count: number;\n  }[];\n  height?: number;\n  smallCircleLimit?: number;\n  letterWidth?: number;\n  onBubbleClick?: Function;\n  className?: string;\n};\n\nconst ArtIndexFormatBubbleChart: React.FC<Props> = ({\n  data,\n  className,\n  height = 600,\n  smallCircleLimit = 11,\n  letterWidth = 4,\n  onBubbleClick,\n}) => {\n  const [hoverIndex, setHoverIndex] = React.useState(null);\n  return (\n    <BubbleChart\n      data={data.slice(0, 30).map((d) => {\n        return {\n          name: d.item || 'Unknown',\n          value: d.count,\n        };\n      })}\n      height={height}\n      className={[css.artIndexFormatBubbleChart, className || ''].join(' ')}\n      renderBubble={(d, i) => {\n        // TODO: Consider `provider` API like React Select\n        return {\n          append: 'g',\n          transform: `translate(${d.x},${d.y})`,\n          duration: 1000,\n          children: [\n            {\n              append: 'circle',\n              data: d.data,\n              r: { enter: d.r, exit: 0 },\n              fill: 'var(--colour-primary)',\n              duration: 1000,\n              onClick: typeof onBubbleClick === 'function' && onBubbleClick,\n              cursor:\n                typeof onBubbleClick === 'function' ? 'pointer' : 'default',\n              onMouseOver: () => {\n                setHoverIndex(i);\n              },\n              onMouseOut: () => {\n                setHoverIndex(null);\n              },\n            },\n          ],\n        };\n      }}\n      renderLabel={(d, i) => {\n        const isHovered = i === hoverIndex;\n\n        const labelText = d.data.name || 'Unknown';\n\n        const displayNumber =\n          d.data.value.toString().length * letterWidth < d.r;\n\n        const shortenedLabelText =\n          d.r > smallCircleLimit\n            ? // ? `${labelText.slice(0, d.data.value.toString(10).length - 1)}…`\n              `${labelText.slice(0, Math.floor(d.r / letterWidth) - 1)}…`\n            : ' '; // have to put an actual space here, not empty string or else text never goes away\n        // TODO: Consider `provider` API like React Select\n        return {\n          append: 'g',\n          transform: `translate(${d.x},${d.y})`,\n          duration: 1000,\n          children: [\n            {\n              append: 'text',\n              key: d.data.name,\n              fill: 'var(--colour-white)',\n              fontWeight: 600,\n              text:\n                isHovered || labelText.length * letterWidth < d.r\n                  ? labelText\n                  : shortenedLabelText,\n              opacity: { enter: 1, exit: 0 },\n              duration: 1000,\n              y: '-0.2em',\n            },\n            {\n              append: 'text',\n              fill: 'var(--colour-white)',\n              text:\n                isHovered || (displayNumber && d.r > smallCircleLimit)\n                  ? d.data.value\n                  : ' ', // have to put an actual space here, not empty string or else text never goes away\n              opacity: 0.8,\n              y: '0.9em',\n            },\n          ],\n        };\n      }}\n    />\n  );\n};\n\nexport default ArtIndexFormatBubbleChart;\n"]},"metadata":{},"sourceType":"module"}