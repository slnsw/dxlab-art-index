{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as d3Array from 'd3-array';\nexport var arrayToCounts = function arrayToCounts(a) {\n  if (!a) return null;\n  var counts = Object.create(null);\n  a.forEach(function (e) {\n    counts[e] = counts[e] ? counts[e] + 1 : 1;\n  });\n  var out = [];\n  Object.keys(counts).forEach(function (count) {\n    out.push({\n      item: count,\n      count: counts[count]\n    });\n  });\n  return out;\n};\nexport function getGenderColour(gender) {\n  if (gender === 'male') {\n    return 'var(--colour-art-index-male)';\n  }\n\n  if (gender === 'female') {\n    return 'var(--colour-art-index-female)';\n  }\n\n  return 'gray';\n}\nexport var processPriceData = function processPriceData(input) {\n  var m = Array.from(d3Array.group(input, function (d) {\n    return d['exhibitionYear'];\n  })).map(function (e) {\n    var year = e[0];\n    var withPrice = e[1].filter(function (p) {\n      return p.price > 0;\n    });\n    var withPriceMale = withPrice.filter(function (p) {\n      return p.artistGender === 'male';\n    }); // const withPriceFemale = withPrice.filter(\n    //   (p) => p.artistGender === 'female',\n    // );\n    // const avPrice = getAveragePrice(withPrice) || 0;\n\n    var avPriceMale = getAveragePrice(withPriceMale) || 0; // const avPriceFemale = getAveragePrice(withPriceFemale) || 0;\n\n    return {\n      name: year,\n      value: avPriceMale,\n      type: 'male'\n    };\n  }).sort(function (a, b) {\n    var s = b.name < a.name ? 1 : 0;\n    return b.name > a.name ? -1 : s;\n  });\n  var f = Array.from(d3Array.group(input, function (d) {\n    return d['exhibitionYear'];\n  })).map(function (e) {\n    var year = e[0];\n    var withPrice = e[1].filter(function (p) {\n      return p.price > 0;\n    }); // const withPriceMale = withPrice.filter(\n    //   (p) => p.artistGender === 'male',\n    // );\n\n    var withPriceFemale = withPrice.filter(function (p) {\n      return p.artistGender === 'female';\n    }); // const avPrice = getAveragePrice(withPrice) || 0;\n    // const avPriceMale = getAveragePrice(withPriceMale) || 0;\n\n    var avPriceFemale = getAveragePrice(withPriceFemale) || 0;\n    return {\n      name: year,\n      value: avPriceFemale,\n      type: 'female'\n    };\n  }).sort(function (a, b) {\n    var s = b.name < a.name ? 1 : 0;\n    return b.name > a.name ? -1 : s;\n  });\n  var t = [].concat(_toConsumableArray(f), _toConsumableArray(m)); // console.log(t);\n\n  return t;\n};\n\nvar getAveragePrice = function getAveragePrice(arr) {\n  if (!arr || arr.length === 0) {\n    return null;\n  }\n\n  var av = arr.reduce(function (total, next) {\n    return total + parseFloat(next.price);\n  }, 0) / arr.length;\n  return Math.floor(av * 100) / 100;\n};\n\nexport var processFormatsByGenderData = function processFormatsByGenderData(input) {\n  var mout = Array.from(d3Array.group(input, function (d) {\n    return d['mediumFormat'];\n  })).map(function (e) {\n    var format = e[0] || 'unknown';\n    var works = e[1].filter(function (f) {\n      return f.artistGender === 'male';\n    });\n    return {\n      format: format,\n      works: works,\n      count: works.length\n    };\n  });\n  var fout = Array.from(d3Array.group(input, function (d) {\n    return d['mediumFormat'];\n  })).map(function (e) {\n    var format = e[0] || 'unknown';\n    var works = e[1].filter(function (f) {\n      return f.artistGender === 'female';\n    });\n    return {\n      format: format,\n      works: works,\n      count: works.length\n    };\n  });\n  var out = {\n    males: mout,\n    females: fout\n  };\n  return out;\n};\nexport var processFormatsByGenderToComparisonData = function processFormatsByGenderToComparisonData(input) {\n  if (!input) {\n    return [];\n  }\n\n  var males = input.males || [];\n  var females = input.females || []; // // sort males\n  // males.sort((a, b) => {\n  //   const s = b.count > a.count ? 1 : 0;\n  //   return b.count < a.count ? -1 : s;\n  // });\n  // // arrange subset of data how we need\n  // const outm = males\n  //   ? males.slice(0, 40).map((d) => {\n  //       return { name: d.format, value: d.count, type: 'male' };\n  //     })\n  //   : [];\n  // // map female data to the subset of formats\n  // const outf =\n  //   females && outm\n  //     ? outm.map((d) => {\n  //         const foundf = females.filter((g) => {\n  //           return g.format === d.name;\n  //         });\n  //         return {\n  //           name: foundf[0].format,\n  //           value: foundf[0].count,\n  //           type: 'female',\n  //         };\n  //       })\n  //     : [];\n  // sort females\n\n  females.sort(function (a, b) {\n    var s = b.count > a.count ? 1 : 0;\n    return b.count < a.count ? -1 : s;\n  }); // arrange subset of data how we need\n\n  var outf = females ? females.slice(0, 40).map(function (d) {\n    return {\n      name: d.format,\n      value: d.count,\n      type: 'female'\n    };\n  }) : []; // map male data to the subset of formats\n\n  var outm = males && outf ? outf.map(function (d) {\n    var foundm = males.filter(function (g) {\n      return g.format === d.name;\n    });\n    return {\n      name: foundm[0].format,\n      value: foundm[0].count,\n      type: 'male'\n    };\n  }) : [];\n  return [].concat(_toConsumableArray(outm), _toConsumableArray(outf));\n};\nexport var processWorksByYear = function processWorksByYear(input) {\n  var _data$, _data;\n\n  var data = Array.from(d3Array.group(input, function (d) {\n    return d.exhibitionYear;\n  })).sort(function (a, b) {\n    return a[0] - b[0];\n  }).map(function (d) {\n    var year = d[0];\n    var allWorks = d[1];\n    return {\n      name: year,\n      value: allWorks.length,\n      malesTotal: allWorks.filter(function (work) {\n        return work.artistGender === 'male';\n      }).length,\n      femalesTotal: allWorks.filter(function (work) {\n        return work.artistGender === 'female';\n      }).length\n    };\n  });\n  var minYear = (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.name;\n  var maxYear = (_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.name;\n  var out = [];\n\n  var _loop = function _loop(y) {\n    var _temp$, _temp$2, _temp$3;\n\n    var temp = data.filter(function (i) {\n      return i.name === y.toString();\n    });\n    var val = ((_temp$ = temp[0]) === null || _temp$ === void 0 ? void 0 : _temp$.value) || 0;\n    var mval = ((_temp$2 = temp[0]) === null || _temp$2 === void 0 ? void 0 : _temp$2.malesTotal) || 0;\n    var fval = ((_temp$3 = temp[0]) === null || _temp$3 === void 0 ? void 0 : _temp$3.femalesTotal) || 0;\n    out.push({\n      name: y.toString(),\n      value: val,\n      malesTotal: mval,\n      femalesTotal: fval\n    });\n  };\n\n  for (var y = minYear; y <= maxYear; y++) {\n    _loop(y);\n  }\n\n  return out;\n}; // export const processMapData = (input) => {\n//   const m = Array.from(d3Array.group(input, (d) => d['exhibitionPlace']))\n//     .map((val) => {\n//       let out = null;\n//       let lat;\n//       let long;\n//       if (val[0]) {\n//         const item = val[0];\n//         const itemData = geoData.filter((a) => a.address === item);\n//         if (itemData && itemData[0]) {\n//           [lat, long] = itemData[0].loc;\n//           out = {\n//             lat,\n//             long,\n//             count: val[1].length,\n//             item,\n//           };\n//         }\n//       }\n//       return out;\n//     })\n//     .filter((i) => i)\n//     .sort((a, b) => {\n//       const s = b.count < a.count ? 1 : 0;\n//       return b.count > a.count ? -1 : s;\n//     });\n//   return m;\n// };","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/lib/art-index-utils.ts"],"names":["d3Array","arrayToCounts","a","counts","Object","create","forEach","e","out","keys","count","push","item","getGenderColour","gender","processPriceData","input","m","Array","from","group","d","map","year","withPrice","filter","p","price","withPriceMale","artistGender","avPriceMale","getAveragePrice","name","value","type","sort","b","s","f","withPriceFemale","avPriceFemale","t","arr","length","av","reduce","total","next","parseFloat","Math","floor","processFormatsByGenderData","mout","format","works","fout","males","females","processFormatsByGenderToComparisonData","outf","slice","outm","foundm","g","processWorksByYear","data","exhibitionYear","allWorks","malesTotal","work","femalesTotal","minYear","maxYear","y","temp","i","toString","val","mval","fval"],"mappings":"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","sourcesContent":["import * as d3Array from 'd3-array';\n\nexport const arrayToCounts = (a) => {\n  if (!a) return null;\n  const counts = Object.create(null);\n  a.forEach((e) => {\n    counts[e] = counts[e] ? counts[e] + 1 : 1;\n  });\n  const out = [];\n  Object.keys(counts).forEach((count) => {\n    out.push({ item: count, count: counts[count] });\n  });\n  return out;\n};\n\nexport function getGenderColour(gender) {\n  if (gender === 'male') {\n    return 'var(--colour-art-index-male)';\n  }\n\n  if (gender === 'female') {\n    return 'var(--colour-art-index-female)';\n  }\n\n  return 'gray';\n}\n\nexport const processPriceData = (input) => {\n  const m = Array.from(d3Array.group(input, (d) => d['exhibitionYear']))\n    .map((e) => {\n      const year = e[0];\n      const withPrice = e[1].filter((p) => p.price > 0);\n      const withPriceMale = withPrice.filter((p) => p.artistGender === 'male');\n      // const withPriceFemale = withPrice.filter(\n      //   (p) => p.artistGender === 'female',\n      // );\n      // const avPrice = getAveragePrice(withPrice) || 0;\n      const avPriceMale = getAveragePrice(withPriceMale) || 0;\n      // const avPriceFemale = getAveragePrice(withPriceFemale) || 0;\n\n      return { name: year, value: avPriceMale, type: 'male' };\n    })\n    .sort((a, b) => {\n      const s = b.name < a.name ? 1 : 0;\n      return b.name > a.name ? -1 : s;\n    });\n  const f = Array.from(d3Array.group(input, (d) => d['exhibitionYear']))\n    .map((e) => {\n      const year = e[0];\n      const withPrice = e[1].filter((p) => p.price > 0);\n      // const withPriceMale = withPrice.filter(\n      //   (p) => p.artistGender === 'male',\n      // );\n      const withPriceFemale = withPrice.filter(\n        (p) => p.artistGender === 'female',\n      );\n      // const avPrice = getAveragePrice(withPrice) || 0;\n      // const avPriceMale = getAveragePrice(withPriceMale) || 0;\n      const avPriceFemale = getAveragePrice(withPriceFemale) || 0;\n\n      return { name: year, value: avPriceFemale, type: 'female' };\n    })\n    .sort((a, b) => {\n      const s = b.name < a.name ? 1 : 0;\n      return b.name > a.name ? -1 : s;\n    });\n  const t = [...f, ...m];\n  // console.log(t);\n  return t;\n};\n\nconst getAveragePrice = (arr) => {\n  if (!arr || arr.length === 0) {\n    return null;\n  }\n  const av =\n    arr.reduce((total, next) => total + parseFloat(next.price), 0) / arr.length;\n  return Math.floor(av * 100) / 100;\n};\n\nexport const processFormatsByGenderData = (input) => {\n  const mout = Array.from(d3Array.group(input, (d) => d['mediumFormat'])).map(\n    (e) => {\n      const format = e[0] || 'unknown';\n      const works = e[1].filter((f) => f.artistGender === 'male');\n      return { format, works, count: works.length };\n    },\n  );\n  const fout = Array.from(d3Array.group(input, (d) => d['mediumFormat'])).map(\n    (e) => {\n      const format = e[0] || 'unknown';\n      const works = e[1].filter((f) => f.artistGender === 'female');\n      return { format, works, count: works.length };\n    },\n  );\n  const out = { males: mout, females: fout };\n  return out;\n};\n\nexport const processFormatsByGenderToComparisonData = (input) => {\n  if (!input) {\n    return [];\n  }\n  const males = input.males || [];\n  const females = input.females || [];\n\n  // // sort males\n  // males.sort((a, b) => {\n  //   const s = b.count > a.count ? 1 : 0;\n  //   return b.count < a.count ? -1 : s;\n  // });\n  // // arrange subset of data how we need\n  // const outm = males\n  //   ? males.slice(0, 40).map((d) => {\n  //       return { name: d.format, value: d.count, type: 'male' };\n  //     })\n  //   : [];\n  // // map female data to the subset of formats\n  // const outf =\n  //   females && outm\n  //     ? outm.map((d) => {\n  //         const foundf = females.filter((g) => {\n  //           return g.format === d.name;\n  //         });\n\n  //         return {\n  //           name: foundf[0].format,\n  //           value: foundf[0].count,\n  //           type: 'female',\n  //         };\n  //       })\n  //     : [];\n\n  // sort females\n  females.sort((a, b) => {\n    const s = b.count > a.count ? 1 : 0;\n    return b.count < a.count ? -1 : s;\n  });\n  // arrange subset of data how we need\n  const outf = females\n    ? females.slice(0, 40).map((d) => {\n        return { name: d.format, value: d.count, type: 'female' };\n      })\n    : [];\n  // map male data to the subset of formats\n  const outm =\n    males && outf\n      ? outf.map((d) => {\n          const foundm = males.filter((g) => {\n            return g.format === d.name;\n          });\n\n          return {\n            name: foundm[0].format,\n            value: foundm[0].count,\n            type: 'male',\n          };\n        })\n      : [];\n\n  return [...outm, ...outf];\n};\n\nexport const processWorksByYear = (input) => {\n  const data = Array.from(d3Array.group(input, (d) => d.exhibitionYear))\n    .sort((a, b) => a[0] - b[0])\n    .map((d) => {\n      const year = d[0];\n      const allWorks = d[1];\n\n      return {\n        name: year,\n        value: allWorks.length,\n        malesTotal: allWorks.filter((work) => work.artistGender === 'male')\n          .length,\n        femalesTotal: allWorks.filter((work) => work.artistGender === 'female')\n          .length,\n      };\n    });\n  const minYear = data[0]?.name;\n  const maxYear = data[data.length - 1]?.name;\n  const out = [];\n  for (let y = minYear; y <= maxYear; y++) {\n    const temp = data.filter((i) => i.name === y.toString());\n    const val = temp[0]?.value || 0;\n    const mval = temp[0]?.malesTotal || 0;\n    const fval = temp[0]?.femalesTotal || 0;\n    out.push({\n      name: y.toString(),\n      value: val,\n      malesTotal: mval,\n      femalesTotal: fval,\n    });\n  }\n  return out;\n};\n\n// export const processMapData = (input) => {\n//   const m = Array.from(d3Array.group(input, (d) => d['exhibitionPlace']))\n//     .map((val) => {\n//       let out = null;\n//       let lat;\n//       let long;\n//       if (val[0]) {\n//         const item = val[0];\n//         const itemData = geoData.filter((a) => a.address === item);\n//         if (itemData && itemData[0]) {\n//           [lat, long] = itemData[0].loc;\n//           out = {\n//             lat,\n//             long,\n//             count: val[1].length,\n//             item,\n//           };\n//         }\n//       }\n//       return out;\n//     })\n//     .filter((i) => i)\n//     .sort((a, b) => {\n//       const s = b.count < a.count ? 1 : 0;\n//       return b.count > a.count ? -1 : s;\n//     });\n//   return m;\n// };\n"]},"metadata":{},"sourceType":"module"}