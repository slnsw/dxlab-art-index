{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\nimport createFuse from '../../../lib/create-fuse';\nexport async function getWorksResult(host, query = {}) {\n  const {\n    search,\n    formats,\n    artistIds,\n    exhibitionIds,\n    genders\n  } = query;\n  const offset = parseInt(query.offset, 10) || 0;\n  const limit = parseInt(query.limit, 10) || 20;\n  const exhibitionStartYear = query.exhibitionStartYear && parseInt(query.exhibitionStartYear, 10);\n  const exhibitionEndYear = query.exhibitionEndYear && parseInt(query.exhibitionEndYear, 10); // TODO: Work out https or http\n\n  const allWorks = await d3.csv(`http://${host}/art-index/data/works.csv`); // Filter works\n\n  let works = allWorks.filter(work => {\n    const selectedFormats = formats === null || formats === void 0 ? void 0 : formats.split(',');\n    const selectedArtistIds = artistIds === null || artistIds === void 0 ? void 0 : artistIds.split(',');\n    const selectedExhibitionIds = exhibitionIds === null || exhibitionIds === void 0 ? void 0 : exhibitionIds.split(',');\n    const selectedGenders = genders === null || genders === void 0 ? void 0 : genders.split(',');\n    const hasFormats = selectedFormats ? selectedFormats.includes(work.mediumFormat.toLowerCase()) : true;\n    const hasArtistIds = selectedArtistIds ? selectedArtistIds.includes(work.artistId) : true;\n    const hasExhibitionIds = selectedExhibitionIds ? selectedExhibitionIds.includes(work.exhibitionId) : true;\n    const isAfterStartYear = exhibitionStartYear ? parseInt(work.exhibitionYear, 10) >= exhibitionStartYear : true;\n    const isBeforeEndYear = exhibitionEndYear ? parseInt(work.exhibitionYear, 10) < exhibitionEndYear : true;\n    const artistGender = work.artistGender || 'unknown';\n    const hasGenders = selectedGenders ? selectedGenders.includes(artistGender) : true;\n    return hasFormats && hasArtistIds && hasExhibitionIds && isAfterStartYear && isBeforeEndYear && hasGenders;\n  }); // Run search over faceted works\n\n  if (search) {\n    const joinedWorks = works.map(w => {\n      return _objectSpread(_objectSpread({}, w), {}, {\n        searchKey: `${w.title} ${w.artistFirstName} ${w.artistLastName} ${w.exhibitionName} ${w.exhibitionPlace} ${w.mediumFormat} ${w.catalogueName}`\n      });\n    });\n    const fuse = createFuse(joinedWorks, {\n      includeScore: false,\n      threshold: 0.2,\n      useExtendedSearch: true,\n      distance: 1000,\n      keys: ['searchKey'] // keys: [\n      //   'title',\n      //   'artistFirstName',\n      //   'artistLastName',\n      //   'exhibitionName',\n      //   'exhibitionPlace',\n      //   'mediumFormat',\n      //   'catalogueName',\n      // ],\n\n    });\n    const searchWorks = await fuse.search(search);\n    works = searchWorks.map(result => result.item);\n  }\n\n  return {\n    worksTotal: works.length,\n    works: works.slice(offset, offset + limit),\n    facets: {\n      artists: rollup(works, 'artistId').map(([id, total]) => {\n        const work = works.find(w => w.artistId === id);\n        return {\n          id,\n          // value: `${work.artistFirstName} ${work.artistLastName}`,\n          value: {\n            firstName: work.artistFirstName,\n            lastName: work.artistLastName,\n            thumbnailFile: work.artistThumbnailFile,\n            gender: work.artistGender\n          },\n          total\n        };\n      }).sort((a, b) => b.total - a.total) // Ensure we don't get all artists!\n      .slice(0, 100),\n      exhibitions: rollup(works, 'exhibitionId').map(([id, total]) => {\n        const work = works.find(w => w.exhibitionId === id);\n        return {\n          id,\n          value: work.exhibitionName,\n          total\n        };\n      }).sort((a, b) => b.total - a.total),\n      formats: rollup(works, 'mediumFormat').map(([value, total]) => {\n        // TODO: Consider converting to underscore\n        return {\n          type: value.toLowerCase(),\n          value,\n          total\n        };\n      }).slice(0, 100),\n      genders: rollup(works, 'artistGender').map(([type, total]) => {\n        const newType = type || 'unknown';\n        return {\n          type: newType,\n          value: capitalise(newType),\n          total\n        };\n      }).sort((a, b) => b.total - a.total),\n      years: rollup(works, 'exhibitionYear').map(([id, total]) => {\n        return {\n          id,\n          value: id.toString(),\n          total\n        };\n      }).sort((a, b) => b.total - a.total)\n    }\n  };\n}\n\nfunction rollup(data, key) {\n  return Array.from(d3Array.rollup(data, v => v.length, d => d[key]));\n}\n\nconst capitalise = s => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nasync function handler(req, res) {\n  const {\n    headers,\n    query\n  } = req;\n  const {\n    host\n  } = headers;\n  const result = await getWorksResult(host, query);\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify(result));\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/pages/api/art-index/works.ts"],"names":["d3","d3Array","createFuse","getWorksResult","host","query","search","formats","artistIds","exhibitionIds","genders","offset","parseInt","limit","exhibitionStartYear","exhibitionEndYear","allWorks","csv","works","filter","work","selectedFormats","split","selectedArtistIds","selectedExhibitionIds","selectedGenders","hasFormats","includes","mediumFormat","toLowerCase","hasArtistIds","artistId","hasExhibitionIds","exhibitionId","isAfterStartYear","exhibitionYear","isBeforeEndYear","artistGender","hasGenders","joinedWorks","map","w","searchKey","title","artistFirstName","artistLastName","exhibitionName","exhibitionPlace","catalogueName","fuse","includeScore","threshold","useExtendedSearch","distance","keys","searchWorks","result","item","worksTotal","length","slice","facets","artists","rollup","id","total","find","value","firstName","lastName","thumbnailFile","artistThumbnailFile","gender","sort","a","b","exhibitions","type","newType","capitalise","years","toString","data","key","Array","from","v","d","s","charAt","toUpperCase","handler","req","res","headers","statusCode","setHeader","end","JSON","stringify"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\nimport { NextApiRequest, NextApiResponse } from 'next';\n\nimport {\n  ArtIndexApiQuery,\n  ArtIndexApiWorksResult,\n  ArtIndexWorkType,\n} from '../../../types/art-index-types';\nimport createFuse from '../../../lib/create-fuse';\n\nexport async function getWorksResult(\n  host: string,\n  query: ArtIndexApiQuery = {},\n): Promise<ArtIndexApiWorksResult> {\n  const { search, formats, artistIds, exhibitionIds, genders } = query;\n  const offset = parseInt(query.offset, 10) || 0;\n  const limit = parseInt(query.limit, 10) || 20;\n  const exhibitionStartYear =\n    query.exhibitionStartYear && parseInt(query.exhibitionStartYear, 10);\n  const exhibitionEndYear =\n    query.exhibitionEndYear && parseInt(query.exhibitionEndYear, 10);\n\n  // TODO: Work out https or http\n  const allWorks: ArtIndexWorkType[] = await d3.csv(\n    `http://${host}/art-index/data/works.csv`,\n  );\n\n  // Filter works\n  let works = allWorks.filter((work) => {\n    const selectedFormats = formats?.split(',');\n    const selectedArtistIds = artistIds?.split(',');\n    const selectedExhibitionIds = exhibitionIds?.split(',');\n    const selectedGenders = genders?.split(',');\n\n    const hasFormats = selectedFormats\n      ? selectedFormats.includes(work.mediumFormat.toLowerCase())\n      : true;\n\n    const hasArtistIds = selectedArtistIds\n      ? selectedArtistIds.includes(work.artistId)\n      : true;\n\n    const hasExhibitionIds = selectedExhibitionIds\n      ? selectedExhibitionIds.includes(work.exhibitionId)\n      : true;\n\n    const isAfterStartYear = exhibitionStartYear\n      ? parseInt(work.exhibitionYear, 10) >= exhibitionStartYear\n      : true;\n    const isBeforeEndYear = exhibitionEndYear\n      ? parseInt(work.exhibitionYear, 10) < exhibitionEndYear\n      : true;\n\n    const artistGender = work.artistGender || 'unknown';\n    const hasGenders = selectedGenders\n      ? selectedGenders.includes(artistGender)\n      : true;\n\n    return (\n      hasFormats &&\n      hasArtistIds &&\n      hasExhibitionIds &&\n      isAfterStartYear &&\n      isBeforeEndYear &&\n      hasGenders\n    );\n  });\n\n  // Run search over faceted works\n  if (search) {\n    const joinedWorks = works.map((w) => {\n      return {\n        ...w,\n        searchKey: `${w.title} ${w.artistFirstName} ${w.artistLastName} ${w.exhibitionName} ${w.exhibitionPlace} ${w.mediumFormat} ${w.catalogueName}`,\n      };\n    });\n\n    const fuse = createFuse<ArtIndexWorkType>(joinedWorks, {\n      includeScore: false,\n      threshold: 0.2,\n      useExtendedSearch: true,\n      distance: 1000,\n      keys: ['searchKey'],\n      // keys: [\n      //   'title',\n      //   'artistFirstName',\n      //   'artistLastName',\n      //   'exhibitionName',\n      //   'exhibitionPlace',\n      //   'mediumFormat',\n      //   'catalogueName',\n      // ],\n    });\n\n    const searchWorks = await fuse.search(search);\n    works = searchWorks.map((result) => result.item);\n  }\n\n  return {\n    worksTotal: works.length,\n    works: works.slice(offset, offset + limit),\n    facets: {\n      artists: rollup(works, 'artistId')\n        .map(([id, total]) => {\n          const work = works.find((w) => w.artistId === id);\n\n          return {\n            id,\n            // value: `${work.artistFirstName} ${work.artistLastName}`,\n            value: {\n              firstName: work.artistFirstName,\n              lastName: work.artistLastName,\n              thumbnailFile: work.artistThumbnailFile,\n              gender: work.artistGender,\n            },\n            total,\n          };\n        })\n        .sort((a, b) => b.total - a.total)\n        // Ensure we don't get all artists!\n        .slice(0, 100),\n      exhibitions: rollup(works, 'exhibitionId')\n        .map(([id, total]) => {\n          const work = works.find((w) => w.exhibitionId === id);\n\n          return { id, value: work.exhibitionName, total };\n        })\n        .sort((a, b) => b.total - a.total),\n      formats: rollup(works, 'mediumFormat')\n        .map(([value, total]) => {\n          // TODO: Consider converting to underscore\n          return { type: value.toLowerCase(), value, total };\n        })\n        .slice(0, 100),\n      genders: rollup(works, 'artistGender')\n        .map(([type, total]) => {\n          const newType = type || 'unknown';\n          return { type: newType, value: capitalise(newType), total };\n        })\n        .sort((a, b) => b.total - a.total),\n      years: rollup(works, 'exhibitionYear')\n        .map(([id, total]) => {\n          return {\n            id,\n            value: id.toString(),\n            total,\n          };\n        })\n        .sort((a, b) => b.total - a.total),\n    },\n  };\n}\n\nfunction rollup(data: ArtIndexWorkType[], key: keyof ArtIndexWorkType) {\n  return Array.from(\n    d3Array.rollup(\n      data,\n      (v) => v.length,\n      (d) => d[key],\n    ),\n  );\n}\n\nconst capitalise = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nasync function handler(req: NextApiRequest, res: NextApiResponse) {\n  const { headers, query } = req;\n  const { host } = headers;\n\n  const result = await getWorksResult(host, query);\n\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify(result));\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}