{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexArtist/ArtIndexArtist.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport * as d3Array from 'd3-array';\nimport Link from '../Link';\nimport Button from '../Button';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport LoaderText from '../LoaderText';\nimport axios from '../../lib/axios';\nimport { arrayToCounts, processWorksByYear } from '../../lib/art-index-utils';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport css from './ArtIndexArtist.module.scss';\n\nvar ArtIndexArtist = function ArtIndexArtist(_ref) {\n  _s();\n\n  var artist = _ref.artist,\n      className = _ref.className;\n\n  var _useArtIndex = useArtIndex(),\n      state = _useArtIndex.state;\n\n  var works = state.works;\n  var artistWorks = works.filter(function (work) {\n    return work.artistId === artist.id;\n  });\n  var worksByYear = processWorksByYear(artistWorks);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      wikiData = _React$useState2[0],\n      setWikiData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setIsLoading = _React$useState4[1];\n\n  React.useEffect(function () {\n    setIsLoading(true);\n    getWikiData(artist === null || artist === void 0 ? void 0 : artist.wikiDataId).then(function (data) {\n      setWikiData(data);\n      setIsLoading(false);\n    });\n  }, [artist]);\n\n  if (!artist) {\n    return null;\n  }\n\n  var formatData = arrayToCounts(works.filter(function (d) {\n    return d.artistId === artist.id;\n  }).map(function (d) {\n    return d.mediumFormat;\n  }));\n  var years = d3Array.groups(artistWorks, function (d) {\n    return d.exhibitionYear;\n  }, function (d) {\n    return d.exhibitionId;\n  }).sort(function (a, b) {\n    return a[0] - b[0];\n  });\n  var exhibitions = d3Array.groups(artistWorks, function (d) {\n    return d.exhibitionId;\n  }).map(function (exhibition) {\n    return {\n      id: exhibition[0],\n      title: exhibition[1][0].exhibitionName\n    };\n  });\n  console.log(wikiData);\n  return __jsx(\"article\", {\n    className: [css.artIndexArtist, className || ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: css.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, artist.thumbnailFile && __jsx(ArtIndexArtistThumbnail, {\n    file: artist.thumbnailFile,\n    className: css.artistImageCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: css.type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Artist\"), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, artist.firstName, \" \", artist.lastName))), __jsx(\"div\", {\n    className: [css.content, artist !== null && artist !== void 0 && artist.wikiDataId ? css.contentHasWiki : ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: css.stats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(ArtIndexStatisticBlock, {\n    count: artistWorks.length,\n    label: \"Works\",\n    url: \"/art-index/search/?artistIds=\".concat(artist.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), __jsx(ArtIndexStatisticBlock, {\n    count: exhibitions.length,\n    label: \"Exhibitions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.gender,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Gender\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: css.genderIndicator,\n    style: _objectSpread({}, artist.gender ? {\n      backgroundColor: \"var(--colour-art-index-\".concat(artist.gender, \")\")\n    } : {}),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), ' ', __jsx(Link, {\n    as: \"/art-index/search/?genders=\".concat(artist.gender || 'unknown'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, artist.gender || 'Unknown')))), (artist === null || artist === void 0 ? void 0 : artist.wikiDataId) && __jsx(\"div\", {\n    className: css.bio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, isLoading ? __jsx(LoaderText, {\n    className: css.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Biography\"), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.bioText) && __jsx(React.Fragment, null, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: wikiData.bioText\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.bioLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 23\n    }\n  }, \"Wikipedia\"))))), __jsx(\"div\", {\n    className: css.formats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Formats\"), __jsx(ArtIndexFormatBubbleChart, {\n    data: formatData,\n    height: 300,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.worksByYear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Work count by year\"), __jsx(BarChart, {\n    data: worksByYear,\n    rotateXAxis: true,\n    xAxisTickIncrement: 5,\n    id: 'works-by-year',\n    margin: {\n      bottom: 40,\n      top: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.exhibitions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Exhibitions\"), __jsx(\"div\", {\n    className: css.timeline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, years.map(function (yearData) {\n    var year = yearData[0];\n    var yearExhibitions = yearData[1];\n    return __jsx(\"div\", {\n      className: css.timelineYear,\n      key: year,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      className: css.timelineYearLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, year), __jsx(\"div\", {\n      className: css.timelineDecoration,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: css.timelineBullet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: css.timelineLine,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, yearExhibitions.map(function (yearExhibition) {\n      var exhibitionId = yearExhibition[0];\n      var exhibition = exhibitions.find(function (e) {\n        return e.id === exhibitionId;\n      });\n      var exhibitionWorks = yearExhibition[1];\n      return __jsx(\"div\", {\n        className: css.timelineExhibition,\n        key: exhibitionId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 27\n        }\n      }, __jsx(Link, {\n        as: \"/art-index/exhibition/\".concat(exhibitionId),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 31\n        }\n      }, exhibition.title))), __jsx(TimelineWorks, {\n        works: exhibitionWorks,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 27\n        }\n      }));\n    })));\n  })))), (artist === null || artist === void 0 ? void 0 : artist.wikiDataId) && __jsx(\"div\", {\n    className: css.wikidata,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, isLoading ? __jsx(LoaderText, {\n    className: css.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://wikidata.org/wiki/\".concat(artist === null || artist === void 0 ? void 0 : artist.wikiDataId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"External data\")), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://wikidata.org/wiki/\".concat(artist === null || artist === void 0 ? void 0 : artist.wikiDataId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"Wikidata\")), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.description) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"Description\"), wikiData.description, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.occupations) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.genre)) && __jsx(\"p\", {\n    className: css.occupation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, wikiData.occupations.join(', '), wikiData.occupations && wikiData.genre ? ' - ' : '', wikiData.genre, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.bornPlace) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.bornDate)) && __jsx(React.Fragment, null, \"Born: \", wikiData.bornPlace, wikiData.bornPlace && wikiData.bornDate ? ', ' : '', wikiData.bornDate, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  })), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.diedPlace) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.diedDate)) && __jsx(React.Fragment, null, \"Died: \", wikiData.diedPlace, wikiData.diedPlace && wikiData.diedDate ? ', ' : '', wikiData.diedDate, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  })), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.worksIn) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, \"Works held at:\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, wikiData.worksIn.map(function (institution) {\n    return __jsx(\"li\", {\n      key: institution.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: institution.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 27\n      }\n    }, institution.name));\n  }))), ((wikiData === null || wikiData === void 0 ? void 0 : wikiData.locUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.ausDictBiogUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.dictOfSydUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.daaoUrl) || (wikiData === null || wikiData === void 0 ? void 0 : wikiData.troveUrl) || wikiData.agsaUrl || wikiData.auckAGUrl || wikiData.euroUrl || wikiData.tepapaUrl || wikiData.ngvUrl || wikiData.anmmUrl) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, \"External links\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, wikiData.locUrl && __jsx(\"li\", {\n    key: wikiData.locUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 23\n    }\n  }, \"View Library of Congress\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.locUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.ausDictBiogUrl && __jsx(\"li\", {\n    key: wikiData.ausDictBiogUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 23\n    }\n  }, \"View Australian Dictionary of Biography\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.ausDictBiogUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.dictOfSydUrl && __jsx(\"li\", {\n    key: wikiData.dictOfSydUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 23\n    }\n  }, \"View Dictionary of Sydney\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.dictOfSydUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.daaoUrl && __jsx(\"li\", {\n    key: wikiData.daaoUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 23\n    }\n  }, \"View\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.daaoUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 25\n    }\n  }, \"biography\"), ' ', \"at Design & Art Australia Online\"), wikiData.troveUrl && __jsx(\"li\", {\n    key: wikiData.troveUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 23\n    }\n  }, \"View Trove\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.troveUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.agsaUrl && __jsx(\"li\", {\n    key: wikiData.agsaUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 23\n    }\n  }, \"View Art Gallery of South Australia\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.agsaUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.auckAGUrl && __jsx(\"li\", {\n    key: wikiData.auckAGUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }, \"View Auckland Art Gallery\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.auckAGUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.euroUrl && __jsx(\"li\", {\n    key: wikiData.euroUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 23\n    }\n  }, \"View Europeana\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.euroUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.tepapaUrl && __jsx(\"li\", {\n    key: wikiData.tepapaUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 23\n    }\n  }, \"View Te Papa\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.tepapaUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.ngvUrl && __jsx(\"li\", {\n    key: wikiData.ngvUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }\n  }, \"View National Gallery of Victoria\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.ngvUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }, \"entry\")), wikiData.anmmUrl && __jsx(\"li\", {\n    key: wikiData.anmmUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 23\n    }\n  }, \"View Australian National Maritime Museum\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.anmmUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, \"entry\")))), (wikiData === null || wikiData === void 0 ? void 0 : wikiData.examplesOfWork) && __jsx(React.Fragment, null, __jsx(\"h3\", {\n    style: {\n      marginBottom: 'var(--spacing-xxxs)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 19\n    }\n  }, \"Examples of works\", ' '), __jsx(\"p\", {\n    className: css.sourceText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }, \"Source:\", ' ', __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: wikiData.commonsUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 21\n    }\n  }, \"Wikimedia\")), __jsx(\"div\", {\n    className: css.wikiImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 19\n    }\n  }, wikiData.examplesOfWork.map(function (work) {\n    return __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: work.link,\n      className: css.wikiImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: work.url,\n      alt: work.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 27\n      }\n    }));\n  }))))), __jsx(\"style\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }\n  }, \"\\n        .mw-empty-elt {\\n          display: none;\\n        }\\n        \"));\n};\n\n_s(ArtIndexArtist, \"xDo3ub8rRpRsQ9Yk7IWiCWEDS3w=\", false, function () {\n  return [useArtIndex];\n});\n\n_c = ArtIndexArtist;\n\nvar TimelineWorks = function TimelineWorks(_ref2) {\n  _s2();\n\n  var _ref2$works = _ref2.works,\n      works = _ref2$works === void 0 ? [] : _ref2$works,\n      _ref2$limit = _ref2.limit,\n      limit = _ref2$limit === void 0 ? 5 : _ref2$limit;\n\n  var _React$useState5 = React.useState(limit),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      newLimit = _React$useState6[0],\n      setNewLimit = _React$useState6[1];\n\n  var worksTotal = works.length;\n  var showButton = worksTotal > newLimit;\n  return __jsx(\"div\", {\n    className: css.timelineWorks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }\n  }, works.slice(0, newLimit).map(function (work) {\n    return __jsx(\"h4\", {\n      key: work.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: \"/art-index/work/\".concat(work.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 15\n      }\n    }, work.title)), __jsx(\"span\", {\n      className: css.timelineWorkFormat,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, work.mediumFormat ? \"(\".concat(work.mediumFormat, \")\") : ''));\n  }), showButton && __jsx(Button, {\n    className: css.timelineShowMoreButton,\n    onClick: function onClick() {\n      setNewLimit(newLimit + 10);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }\n  }, \"Show more\"));\n};\n\n_s2(TimelineWorks, \"wVAoXmAmpCWeyvR1Uh8aj9UVtME=\");\n\n_c2 = TimelineWorks;\n\nvar getBioText = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(link) {\n    var _rawOut$query, _pageData$firstKey;\n\n    var result, rawOut, pageData, firstKey, out;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (link) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 2:\n            _context.next = 4;\n            return axios.get(link);\n\n          case 4:\n            result = _context.sent;\n            rawOut = result.data;\n            pageData = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query = rawOut.query) === null || _rawOut$query === void 0 ? void 0 : _rawOut$query.pages;\n            firstKey = pageData && Object.keys(pageData)[0];\n            out = pageData && ((_pageData$firstKey = pageData[firstKey]) === null || _pageData$firstKey === void 0 ? void 0 : _pageData$firstKey.extract);\n            return _context.abrupt(\"return\", out);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBioText(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getWikiDataQValue = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(qVal) {\n    var _rawOut$entities$qVal, _rawOut$entities$qVal2, _rawOut$entities$qVal3;\n\n    var url, result, rawOut, out;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (qVal) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 2:\n            url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n            url += \"&ids=\".concat(qVal, \"&format=json&languages=en&origin=*\");\n            _context2.next = 6;\n            return axios.get(url);\n\n          case 6:\n            result = _context2.sent;\n            rawOut = result.data;\n            out = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$entities$qVal = rawOut.entities[qVal]) === null || _rawOut$entities$qVal === void 0 ? void 0 : (_rawOut$entities$qVal2 = _rawOut$entities$qVal.labels) === null || _rawOut$entities$qVal2 === void 0 ? void 0 : (_rawOut$entities$qVal3 = _rawOut$entities$qVal2.en) === null || _rawOut$entities$qVal3 === void 0 ? void 0 : _rawOut$entities$qVal3.value;\n            return _context2.abrupt(\"return\", out);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getWikiDataQValue(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getUrlFromFilename = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(filename) {\n    var _rawOut$query2;\n\n    var url, result, rawOut, urlData, firstKey, imageUrlData, imageUrl, descriptionUrl, out;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (filename) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", null);\n\n          case 2:\n            url = 'https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=imageinfo';\n            url += \"&iilimit=50&titles=\".concat(filename, \"&format=json&iiprop=url&iiurlwidth=320\");\n            _context3.next = 6;\n            return axios.get(url);\n\n          case 6:\n            result = _context3.sent;\n            rawOut = result.data;\n            urlData = rawOut && (rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query2 = rawOut.query) === null || _rawOut$query2 === void 0 ? void 0 : _rawOut$query2.pages);\n            firstKey = Object.keys(urlData)[0];\n            imageUrlData = urlData && urlData[firstKey];\n            imageUrl = imageUrlData && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo) && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo[0].thumburl);\n            descriptionUrl = imageUrlData && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo) && (imageUrlData === null || imageUrlData === void 0 ? void 0 : imageUrlData.imageinfo[0].descriptionurl);\n            out = {\n              url: imageUrl,\n              link: descriptionUrl\n            };\n            return _context3.abrupt(\"return\", out);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getUrlFromFilename(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar getWorkExamples = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(commonsCatalogue) {\n    var _rawOut$query3;\n\n    var url, result, rawOut, members, workExamples;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (commonsCatalogue) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", null);\n\n          case 2:\n            url = 'https://commons.wikimedia.org/w/api.php?action=query&list=categorymembers&origin=*';\n            url += \"&cmtype=file&cmtitle=Category:\".concat(commonsCatalogue, \"&format=json&cmlimit=500\");\n            _context5.next = 6;\n            return axios.get(url);\n\n          case 6:\n            result = _context5.sent;\n            rawOut = result.data;\n            members = rawOut === null || rawOut === void 0 ? void 0 : (_rawOut$query3 = rawOut.query) === null || _rawOut$query3 === void 0 ? void 0 : _rawOut$query3.categorymembers;\n            _context5.t0 = members;\n\n            if (!_context5.t0) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 13;\n            return Promise.all(members.map( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(m) {\n                var title, value;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        title = m.title;\n                        _context4.t0 = title;\n\n                        if (!_context4.t0) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        _context4.next = 5;\n                        return getUrlFromFilename(title);\n\n                      case 5:\n                        _context4.t0 = _context4.sent;\n\n                      case 6:\n                        value = _context4.t0;\n                        return _context4.abrupt(\"return\", value);\n\n                      case 8:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x5) {\n                return _ref7.apply(this, arguments);\n              };\n            }()));\n\n          case 13:\n            _context5.t0 = _context5.sent;\n\n          case 14:\n            workExamples = _context5.t0;\n            return _context5.abrupt(\"return\", workExamples);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getWorkExamples(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar getUrlForInstitution = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n    var _claims$P856$, _claims$P856$$mainsna, _claims$P856$$mainsna2;\n\n    var url, result, rawOut, out, claims, urlString;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (id) {\n              _context6.next = 2;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", null);\n\n          case 2:\n            url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n            url += \"&ids=\".concat(id, \"&format=json&languages=en&origin=*\");\n            _context6.next = 6;\n            return axios.get(url);\n\n          case 6:\n            result = _context6.sent;\n            rawOut = result.data;\n            out = rawOut.entities[id];\n            claims = out === null || out === void 0 ? void 0 : out.claims;\n            urlString = (claims === null || claims === void 0 ? void 0 : claims.P856) && (claims === null || claims === void 0 ? void 0 : (_claims$P856$ = claims.P856[0]) === null || _claims$P856$ === void 0 ? void 0 : (_claims$P856$$mainsna = _claims$P856$.mainsnak) === null || _claims$P856$$mainsna === void 0 ? void 0 : (_claims$P856$$mainsna2 = _claims$P856$$mainsna.datavalue) === null || _claims$P856$$mainsna2 === void 0 ? void 0 : _claims$P856$$mainsna2.value);\n            return _context6.abrupt(\"return\", urlString);\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getUrlForInstitution(_x6) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar getWikiData = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(id) {\n    var _out$descriptions, _out$descriptions$en, _claims$P569$, _claims$P569$$mainsna, _claims$P569$$mainsna2, _claims$P569$$mainsna3, _claims$P570$, _claims$P570$$mainsna, _claims$P570$$mainsna2, _claims$P570$$mainsna3, _claims$P19$, _claims$P19$$mainsnak, _claims$P19$$mainsnak2, _claims$P19$$mainsnak3, _claims$P20$, _claims$P20$$mainsnak, _claims$P20$$mainsnak2, _claims$P20$$mainsnak3, _claims$P136$, _claims$P136$$mainsna, _claims$P136$$mainsna2, _claims$P136$$mainsna3, _claims$P373$, _claims$P373$$mainsna, _claims$P373$$mainsna2, _claims$P244$, _claims$P244$$mainsna, _claims$P244$$mainsna2, _claims$P1907$, _claims$P1907$$mainsn, _claims$P1907$$mainsn2, _claims$P3794$, _claims$P3794$$mainsn, _claims$P3794$$mainsn2, _claims$P1707$, _claims$P1707$$mainsn, _claims$P1707$$mainsn2, _claims$P1315$, _claims$P1315$$mainsn, _claims$P1315$$mainsn2, _claims$P6804$, _claims$P6804$$mainsn, _claims$P6804$$mainsn2, _claims$P3372$, _claims$P3372$$mainsn, _claims$P3372$$mainsn2, _claims$P7704$, _claims$P7704$$mainsn, _claims$P7704$$mainsn2, _claims$P3544$, _claims$P3544$$mainsn, _claims$P3544$$mainsn2, _claims$P2041$, _claims$P2041$$mainsn, _claims$P2041$$mainsn2, _claims$P7769$, _claims$P7769$$mainsn, _claims$P7769$$mainsn2, _sitelinks$enwiki;\n\n    var url, result, rawOut, out, description, claims, dobData, bornDate, dodData, diedDate, pobId, bornPlace, podId, diedPlace, occupations, genreId, genre, commonsCategory, commonsUrl, worksIn, locId, locUrl, ausDictBiogId, ausDictBiogUrl, dictOfSydId, dictOfSydUrl, daaoId, daaoUrl, troveId, troveUrl, agsaId, agsaUrl, auckAGId, auckAGUrl, euroId, euroUrl, tepapaId, tepapaUrl, ngvId, ngvUrl, anmmId, anmmUrl, examplesOfWork, sitelinks, wikiTitle, wikiBioLink, bioText, bioLink, data;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (id) {\n              _context9.next = 2;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", null);\n\n          case 2:\n            url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n            url += \"&ids=\".concat(id, \"&format=json&languages=en&origin=*\"); // do initial wikidata lookup for the Q value (identifier) for the artist\n\n            _context9.next = 6;\n            return axios.get(url);\n\n          case 6:\n            result = _context9.sent;\n            rawOut = result.data;\n            out = rawOut.entities[id]; // extract desciption\n\n            description = out === null || out === void 0 ? void 0 : (_out$descriptions = out.descriptions) === null || _out$descriptions === void 0 ? void 0 : (_out$descriptions$en = _out$descriptions.en) === null || _out$descriptions$en === void 0 ? void 0 : _out$descriptions$en.value; // 'claims' are where a bunch of links to other stuff live\n\n            claims = out === null || out === void 0 ? void 0 : out.claims; // such as date of birth/death\n\n            dobData = (claims === null || claims === void 0 ? void 0 : claims.P569) && (claims === null || claims === void 0 ? void 0 : (_claims$P569$ = claims.P569[0]) === null || _claims$P569$ === void 0 ? void 0 : (_claims$P569$$mainsna = _claims$P569$.mainsnak) === null || _claims$P569$$mainsna === void 0 ? void 0 : (_claims$P569$$mainsna2 = _claims$P569$$mainsna.datavalue) === null || _claims$P569$$mainsna2 === void 0 ? void 0 : (_claims$P569$$mainsna3 = _claims$P569$$mainsna2.value) === null || _claims$P569$$mainsna3 === void 0 ? void 0 : _claims$P569$$mainsna3.time);\n            bornDate = dobData && dobData.slice(1, 5); // just get the year for now\n\n            dodData = (claims === null || claims === void 0 ? void 0 : claims.P570) && (claims === null || claims === void 0 ? void 0 : (_claims$P570$ = claims.P570[0]) === null || _claims$P570$ === void 0 ? void 0 : (_claims$P570$$mainsna = _claims$P570$.mainsnak) === null || _claims$P570$$mainsna === void 0 ? void 0 : (_claims$P570$$mainsna2 = _claims$P570$$mainsna.datavalue) === null || _claims$P570$$mainsna2 === void 0 ? void 0 : (_claims$P570$$mainsna3 = _claims$P570$$mainsna2.value) === null || _claims$P570$$mainsna3 === void 0 ? void 0 : _claims$P570$$mainsna3.time);\n            diedDate = dodData && dodData.slice(1, 5); // location of birth/death (note there are yet another Q vlaue which in turn need to be looked up)\n\n            pobId = (claims === null || claims === void 0 ? void 0 : claims.P19) && (claims === null || claims === void 0 ? void 0 : (_claims$P19$ = claims.P19[0]) === null || _claims$P19$ === void 0 ? void 0 : (_claims$P19$$mainsnak = _claims$P19$.mainsnak) === null || _claims$P19$$mainsnak === void 0 ? void 0 : (_claims$P19$$mainsnak2 = _claims$P19$$mainsnak.datavalue) === null || _claims$P19$$mainsnak2 === void 0 ? void 0 : (_claims$P19$$mainsnak3 = _claims$P19$$mainsnak2.value) === null || _claims$P19$$mainsnak3 === void 0 ? void 0 : _claims$P19$$mainsnak3.id);\n            _context9.t0 = pobId;\n\n            if (!_context9.t0) {\n              _context9.next = 21;\n              break;\n            }\n\n            _context9.next = 20;\n            return getWikiDataQValue(pobId);\n\n          case 20:\n            _context9.t0 = _context9.sent;\n\n          case 21:\n            bornPlace = _context9.t0;\n            podId = (claims === null || claims === void 0 ? void 0 : claims.P20) && (claims === null || claims === void 0 ? void 0 : (_claims$P20$ = claims.P20[0]) === null || _claims$P20$ === void 0 ? void 0 : (_claims$P20$$mainsnak = _claims$P20$.mainsnak) === null || _claims$P20$$mainsnak === void 0 ? void 0 : (_claims$P20$$mainsnak2 = _claims$P20$$mainsnak.datavalue) === null || _claims$P20$$mainsnak2 === void 0 ? void 0 : (_claims$P20$$mainsnak3 = _claims$P20$$mainsnak2.value) === null || _claims$P20$$mainsnak3 === void 0 ? void 0 : _claims$P20$$mainsnak3.id);\n            _context9.t1 = podId;\n\n            if (!_context9.t1) {\n              _context9.next = 28;\n              break;\n            }\n\n            _context9.next = 27;\n            return getWikiDataQValue(podId);\n\n          case 27:\n            _context9.t1 = _context9.sent;\n\n          case 28:\n            diedPlace = _context9.t1;\n            _context9.t2 = claims === null || claims === void 0 ? void 0 : claims.P106;\n\n            if (!_context9.t2) {\n              _context9.next = 34;\n              break;\n            }\n\n            _context9.next = 33;\n            return Promise.all(claims === null || claims === void 0 ? void 0 : claims.P106.map( /*#__PURE__*/function () {\n              var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(i) {\n                var _i$mainsnak, _i$mainsnak$datavalue, _i$mainsnak$datavalue2;\n\n                var oid, occ;\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        oid = i === null || i === void 0 ? void 0 : (_i$mainsnak = i.mainsnak) === null || _i$mainsnak === void 0 ? void 0 : (_i$mainsnak$datavalue = _i$mainsnak.datavalue) === null || _i$mainsnak$datavalue === void 0 ? void 0 : (_i$mainsnak$datavalue2 = _i$mainsnak$datavalue.value) === null || _i$mainsnak$datavalue2 === void 0 ? void 0 : _i$mainsnak$datavalue2.id;\n                        _context7.t0 = oid;\n\n                        if (!_context7.t0) {\n                          _context7.next = 6;\n                          break;\n                        }\n\n                        _context7.next = 5;\n                        return getWikiDataQValue(oid);\n\n                      case 5:\n                        _context7.t0 = _context7.sent;\n\n                      case 6:\n                        occ = _context7.t0;\n                        return _context7.abrupt(\"return\", occ);\n\n                      case 8:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x8) {\n                return _ref10.apply(this, arguments);\n              };\n            }()));\n\n          case 33:\n            _context9.t2 = _context9.sent;\n\n          case 34:\n            occupations = _context9.t2;\n            // genre of art they worked in\n            genreId = (claims === null || claims === void 0 ? void 0 : claims.P136) && (claims === null || claims === void 0 ? void 0 : (_claims$P136$ = claims.P136[0]) === null || _claims$P136$ === void 0 ? void 0 : (_claims$P136$$mainsna = _claims$P136$.mainsnak) === null || _claims$P136$$mainsna === void 0 ? void 0 : (_claims$P136$$mainsna2 = _claims$P136$$mainsna.datavalue) === null || _claims$P136$$mainsna2 === void 0 ? void 0 : (_claims$P136$$mainsna3 = _claims$P136$$mainsna2.value) === null || _claims$P136$$mainsna3 === void 0 ? void 0 : _claims$P136$$mainsna3.id);\n            _context9.t3 = genreId;\n\n            if (!_context9.t3) {\n              _context9.next = 41;\n              break;\n            }\n\n            _context9.next = 40;\n            return getWikiDataQValue(genreId);\n\n          case 40:\n            _context9.t3 = _context9.sent;\n\n          case 41:\n            genre = _context9.t3;\n            // commons category can be used to pull in images of the artist's work\n            commonsCategory = (claims === null || claims === void 0 ? void 0 : claims.P373) && (claims === null || claims === void 0 ? void 0 : (_claims$P373$ = claims.P373[0]) === null || _claims$P373$ === void 0 ? void 0 : (_claims$P373$$mainsna = _claims$P373$.mainsnak) === null || _claims$P373$$mainsna === void 0 ? void 0 : (_claims$P373$$mainsna2 = _claims$P373$$mainsna.datavalue) === null || _claims$P373$$mainsna2 === void 0 ? void 0 : _claims$P373$$mainsna2.value); // create the URL now, pull in works later\n\n            commonsUrl = commonsCategory && \"https://commons.wikimedia.org/wiki/Category:\".concat(commonsCategory); // get the list of institutions (and their websites) that the artist has\n            // works held in (again these are identifiers and need looking up)\n\n            _context9.t4 = claims === null || claims === void 0 ? void 0 : claims.P6379;\n\n            if (!_context9.t4) {\n              _context9.next = 49;\n              break;\n            }\n\n            _context9.next = 48;\n            return Promise.all(claims === null || claims === void 0 ? void 0 : claims.P6379.map( /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(i) {\n                var _i$mainsnak2, _i$mainsnak2$datavalu, _i$mainsnak2$datavalu2;\n\n                var wid, value, instUrl;\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        wid = i === null || i === void 0 ? void 0 : (_i$mainsnak2 = i.mainsnak) === null || _i$mainsnak2 === void 0 ? void 0 : (_i$mainsnak2$datavalu = _i$mainsnak2.datavalue) === null || _i$mainsnak2$datavalu === void 0 ? void 0 : (_i$mainsnak2$datavalu2 = _i$mainsnak2$datavalu.value) === null || _i$mainsnak2$datavalu2 === void 0 ? void 0 : _i$mainsnak2$datavalu2.id;\n                        _context8.t0 = wid;\n\n                        if (!_context8.t0) {\n                          _context8.next = 6;\n                          break;\n                        }\n\n                        _context8.next = 5;\n                        return getWikiDataQValue(wid);\n\n                      case 5:\n                        _context8.t0 = _context8.sent;\n\n                      case 6:\n                        value = _context8.t0;\n                        _context8.t1 = wid;\n\n                        if (!_context8.t1) {\n                          _context8.next = 12;\n                          break;\n                        }\n\n                        _context8.next = 11;\n                        return getUrlForInstitution(wid);\n\n                      case 11:\n                        _context8.t1 = _context8.sent;\n\n                      case 12:\n                        instUrl = _context8.t1;\n                        return _context8.abrupt(\"return\", {\n                          name: value,\n                          url: instUrl\n                        });\n\n                      case 14:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x9) {\n                return _ref11.apply(this, arguments);\n              };\n            }()));\n\n          case 48:\n            _context9.t4 = _context9.sent;\n\n          case 49:\n            worksIn = _context9.t4;\n            // now pull in IDs from other authoritative sources about the artist\n            // and construct the links, starting with Lib of Congress\n            locId = (claims === null || claims === void 0 ? void 0 : claims.P244) && (claims === null || claims === void 0 ? void 0 : (_claims$P244$ = claims.P244[0]) === null || _claims$P244$ === void 0 ? void 0 : (_claims$P244$$mainsna = _claims$P244$.mainsnak) === null || _claims$P244$$mainsna === void 0 ? void 0 : (_claims$P244$$mainsna2 = _claims$P244$$mainsna.datavalue) === null || _claims$P244$$mainsna2 === void 0 ? void 0 : _claims$P244$$mainsna2.value);\n            locUrl = locId && \"https://id.loc.gov/authorities/\".concat(locId); // Australian Disctionary of Biography\n\n            ausDictBiogId = (claims === null || claims === void 0 ? void 0 : claims.P1907) && (claims === null || claims === void 0 ? void 0 : (_claims$P1907$ = claims.P1907[0]) === null || _claims$P1907$ === void 0 ? void 0 : (_claims$P1907$$mainsn = _claims$P1907$.mainsnak) === null || _claims$P1907$$mainsn === void 0 ? void 0 : (_claims$P1907$$mainsn2 = _claims$P1907$$mainsn.datavalue) === null || _claims$P1907$$mainsn2 === void 0 ? void 0 : _claims$P1907$$mainsn2.value);\n            ausDictBiogUrl = ausDictBiogId && \"http://adb.anu.edu.au/biography/\".concat(ausDictBiogId); // Dictionary of Sydney\n\n            dictOfSydId = (claims === null || claims === void 0 ? void 0 : claims.P3794) && (claims === null || claims === void 0 ? void 0 : (_claims$P3794$ = claims.P3794[0]) === null || _claims$P3794$ === void 0 ? void 0 : (_claims$P3794$$mainsn = _claims$P3794$.mainsnak) === null || _claims$P3794$$mainsn === void 0 ? void 0 : (_claims$P3794$$mainsn2 = _claims$P3794$$mainsn.datavalue) === null || _claims$P3794$$mainsn2 === void 0 ? void 0 : _claims$P3794$$mainsn2.value);\n            dictOfSydUrl = dictOfSydId && \"https://dictionaryofsydney.org/\".concat(dictOfSydId); // The DAAO\n\n            daaoId = (claims === null || claims === void 0 ? void 0 : claims.P1707) && (claims === null || claims === void 0 ? void 0 : (_claims$P1707$ = claims.P1707[0]) === null || _claims$P1707$ === void 0 ? void 0 : (_claims$P1707$$mainsn = _claims$P1707$.mainsnak) === null || _claims$P1707$$mainsn === void 0 ? void 0 : (_claims$P1707$$mainsn2 = _claims$P1707$$mainsn.datavalue) === null || _claims$P1707$$mainsn2 === void 0 ? void 0 : _claims$P1707$$mainsn2.value);\n            daaoUrl = daaoId && \"https://www.daao.org.au/bio/\".concat(daaoId); // Trove\n\n            troveId = (claims === null || claims === void 0 ? void 0 : claims.P1315) && (claims === null || claims === void 0 ? void 0 : (_claims$P1315$ = claims.P1315[0]) === null || _claims$P1315$ === void 0 ? void 0 : (_claims$P1315$$mainsn = _claims$P1315$.mainsnak) === null || _claims$P1315$$mainsn === void 0 ? void 0 : (_claims$P1315$$mainsn2 = _claims$P1315$$mainsn.datavalue) === null || _claims$P1315$$mainsn2 === void 0 ? void 0 : _claims$P1315$$mainsn2.value);\n            troveUrl = troveId && \"https://trove.nla.gov.au/people/\".concat(troveId); // Art Gallery of South Australia\n\n            agsaId = (claims === null || claims === void 0 ? void 0 : claims.P6804) && (claims === null || claims === void 0 ? void 0 : (_claims$P6804$ = claims.P6804[0]) === null || _claims$P6804$ === void 0 ? void 0 : (_claims$P6804$$mainsn = _claims$P6804$.mainsnak) === null || _claims$P6804$$mainsn === void 0 ? void 0 : (_claims$P6804$$mainsn2 = _claims$P6804$$mainsn.datavalue) === null || _claims$P6804$$mainsn2 === void 0 ? void 0 : _claims$P6804$$mainsn2.value);\n            agsaUrl = agsaId && \"https://www.agsa.sa.gov.au/collection-publications/collection/creators/_/\".concat(agsaId); // Auckland Art Gallery\n\n            auckAGId = (claims === null || claims === void 0 ? void 0 : claims.P3372) && (claims === null || claims === void 0 ? void 0 : (_claims$P3372$ = claims.P3372[0]) === null || _claims$P3372$ === void 0 ? void 0 : (_claims$P3372$$mainsn = _claims$P3372$.mainsnak) === null || _claims$P3372$$mainsn === void 0 ? void 0 : (_claims$P3372$$mainsn2 = _claims$P3372$$mainsn.datavalue) === null || _claims$P3372$$mainsn2 === void 0 ? void 0 : _claims$P3372$$mainsn2.value);\n            auckAGUrl = auckAGId && \"http://www.aucklandartgallery.com/explore-art-and-ideas/artist/\".concat(auckAGId); // Europeana\n\n            euroId = (claims === null || claims === void 0 ? void 0 : claims.P7704) && (claims === null || claims === void 0 ? void 0 : (_claims$P7704$ = claims.P7704[0]) === null || _claims$P7704$ === void 0 ? void 0 : (_claims$P7704$$mainsn = _claims$P7704$.mainsnak) === null || _claims$P7704$$mainsn === void 0 ? void 0 : (_claims$P7704$$mainsn2 = _claims$P7704$$mainsn.datavalue) === null || _claims$P7704$$mainsn2 === void 0 ? void 0 : _claims$P7704$$mainsn2.value);\n            euroUrl = euroId && \"https://data.europeana.eu/\".concat(euroId); // Te Papa museum\n\n            tepapaId = (claims === null || claims === void 0 ? void 0 : claims.P3544) && (claims === null || claims === void 0 ? void 0 : (_claims$P3544$ = claims.P3544[0]) === null || _claims$P3544$ === void 0 ? void 0 : (_claims$P3544$$mainsn = _claims$P3544$.mainsnak) === null || _claims$P3544$$mainsn === void 0 ? void 0 : (_claims$P3544$$mainsn2 = _claims$P3544$$mainsn.datavalue) === null || _claims$P3544$$mainsn2 === void 0 ? void 0 : _claims$P3544$$mainsn2.value);\n            tepapaUrl = tepapaId && \"https://collections.tepapa.govt.nz/agent/\".concat(tepapaId); // Nat Gallery Victoria\n\n            ngvId = (claims === null || claims === void 0 ? void 0 : claims.P2041) && (claims === null || claims === void 0 ? void 0 : (_claims$P2041$ = claims.P2041[0]) === null || _claims$P2041$ === void 0 ? void 0 : (_claims$P2041$$mainsn = _claims$P2041$.mainsnak) === null || _claims$P2041$$mainsn === void 0 ? void 0 : (_claims$P2041$$mainsn2 = _claims$P2041$$mainsn.datavalue) === null || _claims$P2041$$mainsn2 === void 0 ? void 0 : _claims$P2041$$mainsn2.value);\n            ngvUrl = ngvId && \"https://www.ngv.vic.gov.au/explore/collection/artist/\".concat(ngvId); // Aus Nat Maritime Museum\n\n            anmmId = (claims === null || claims === void 0 ? void 0 : claims.P7769) && (claims === null || claims === void 0 ? void 0 : (_claims$P7769$ = claims.P7769[0]) === null || _claims$P7769$ === void 0 ? void 0 : (_claims$P7769$$mainsn = _claims$P7769$.mainsnak) === null || _claims$P7769$$mainsn === void 0 ? void 0 : (_claims$P7769$$mainsn2 = _claims$P7769$$mainsn.datavalue) === null || _claims$P7769$$mainsn2 === void 0 ? void 0 : _claims$P7769$$mainsn2.value);\n            anmmUrl = anmmId && \"http://collections.anmm.gov.au/people/\".concat(anmmId); // Now construct the examples of work data from the commons category\n\n            _context9.t5 = commonsCategory;\n\n            if (!_context9.t5) {\n              _context9.next = 77;\n              break;\n            }\n\n            _context9.next = 76;\n            return getWorkExamples(commonsCategory);\n\n          case 76:\n            _context9.t5 = _context9.sent;\n\n          case 77:\n            examplesOfWork = _context9.t5;\n            // look for wikipedia link in sitelinks section, from which a bio can be extracted\n            sitelinks = out === null || out === void 0 ? void 0 : out.sitelinks;\n            wikiTitle = sitelinks && (sitelinks === null || sitelinks === void 0 ? void 0 : (_sitelinks$enwiki = sitelinks.enwiki) === null || _sitelinks$enwiki === void 0 ? void 0 : _sitelinks$enwiki.title);\n            wikiBioLink = wikiTitle && \"https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exsentences=2&titles=\".concat(wikiTitle, \"&format=json&origin=*\"); // &explaintext=true\n\n            _context9.t6 = wikiBioLink;\n\n            if (!_context9.t6) {\n              _context9.next = 86;\n              break;\n            }\n\n            _context9.next = 85;\n            return getBioText(wikiBioLink);\n\n          case 85:\n            _context9.t6 = _context9.sent;\n\n          case 86:\n            bioText = _context9.t6;\n            bioLink = wikiTitle && \"https://en.wikipedia.org/wiki/\".concat(wikiTitle); // build data object to return\n\n            data = {\n              description: description,\n              bornDate: bornDate,\n              diedDate: diedDate,\n              bornPlace: bornPlace,\n              diedPlace: diedPlace,\n              occupations: occupations,\n              genre: genre,\n              commonsCategory: commonsCategory,\n              worksIn: worksIn,\n              locUrl: locUrl,\n              ausDictBiogUrl: ausDictBiogUrl,\n              dictOfSydUrl: dictOfSydUrl,\n              daaoUrl: daaoUrl,\n              troveUrl: troveUrl,\n              examplesOfWork: examplesOfWork,\n              commonsUrl: commonsUrl,\n              agsaUrl: agsaUrl,\n              auckAGUrl: auckAGUrl,\n              euroUrl: euroUrl,\n              tepapaUrl: tepapaUrl,\n              ngvUrl: ngvUrl,\n              anmmUrl: anmmUrl,\n              bioText: bioText,\n              bioLink: bioLink\n            };\n            return _context9.abrupt(\"return\", data);\n\n          case 90:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function getWikiData(_x7) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nexport default ArtIndexArtist;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArtIndexArtist\");\n$RefreshReg$(_c2, \"TimelineWorks\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexArtist/ArtIndexArtist.tsx"],"names":["React","d3Array","Link","Button","ArtIndexFormatBubbleChart","BarChart","ArtIndexStatisticBlock","ArtIndexArtistThumbnail","LoaderText","axios","arrayToCounts","processWorksByYear","useArtIndex","css","ArtIndexArtist","artist","className","state","works","artistWorks","filter","work","artistId","id","worksByYear","useState","wikiData","setWikiData","isLoading","setIsLoading","useEffect","getWikiData","wikiDataId","then","data","formatData","d","map","mediumFormat","years","groups","exhibitionYear","exhibitionId","sort","a","b","exhibitions","exhibition","title","exhibitionName","console","log","artIndexArtist","join","header","thumbnailFile","artistImageCircle","type","firstName","lastName","content","contentHasWiki","stats","length","gender","genderIndicator","backgroundColor","bio","loader","bioText","__html","sourceText","bioLink","formats","bottom","top","timeline","yearData","year","yearExhibitions","timelineYear","timelineYearLabel","timelineDecoration","timelineBullet","timelineLine","yearExhibition","find","e","exhibitionWorks","timelineExhibition","wikidata","description","occupations","genre","occupation","bornPlace","bornDate","diedPlace","diedDate","worksIn","institution","name","url","locUrl","ausDictBiogUrl","dictOfSydUrl","daaoUrl","troveUrl","agsaUrl","auckAGUrl","euroUrl","tepapaUrl","ngvUrl","anmmUrl","examplesOfWork","marginBottom","commonsUrl","wikiImages","link","wikiImage","TimelineWorks","limit","newLimit","setNewLimit","worksTotal","showButton","timelineWorks","slice","timelineWorkFormat","timelineShowMoreButton","getBioText","get","result","rawOut","pageData","query","pages","firstKey","Object","keys","out","extract","getWikiDataQValue","qVal","entities","labels","en","value","getUrlFromFilename","filename","urlData","imageUrlData","imageUrl","imageinfo","thumburl","descriptionUrl","descriptionurl","getWorkExamples","commonsCatalogue","members","categorymembers","Promise","all","m","workExamples","getUrlForInstitution","claims","urlString","P856","mainsnak","datavalue","descriptions","dobData","P569","time","dodData","P570","pobId","P19","podId","P20","P106","i","oid","occ","genreId","P136","commonsCategory","P373","P6379","wid","instUrl","locId","P244","ausDictBiogId","P1907","dictOfSydId","P3794","daaoId","P1707","troveId","P1315","agsaId","P6804","auckAGId","P3372","euroId","P7704","tepapaId","P3544","ngvId","P2041","anmmId","P7769","sitelinks","wikiTitle","enwiki","wikiBioLink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3Array from 'd3-array';\n\nimport Link from '../Link';\nimport Button from '../Button';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport LoaderText from '../LoaderText';\n\nimport axios from '../../lib/axios';\nimport { arrayToCounts, processWorksByYear } from '../../lib/art-index-utils';\nimport { ArtIndexArtistType } from '../../types/art-index-types';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\n\nimport css from './ArtIndexArtist.module.scss';\n\ntype Props = {\n  artist?: ArtIndexArtistType;\n  className?: string;\n};\n\ntype WorkExample = {\n  url?: string;\n  link?: string;\n};\n\ntype WorkAt = {\n  name?: string;\n  url?: string;\n};\n\ntype WikiData = {\n  description?: string;\n  bornDate?: string;\n  diedDate?: string;\n  bornPlace?: string;\n  diedPlace?: string;\n  occupations?: string[];\n  genre?: string;\n  commonsCategory?: string;\n  worksIn?: WorkAt[];\n  locUrl?: string;\n  ausDictBiogUrl?: string;\n  dictOfSydUrl?: string;\n  daaoUrl?: string;\n  troveUrl?: string;\n  examplesOfWork?: WorkExample[];\n  commonsUrl?: string;\n  agsaUrl?: string;\n  auckAGUrl?: string;\n  euroUrl?: string;\n  tepapaUrl?: string;\n  ngvUrl?: string;\n  anmmUrl?: string;\n  bioText?: string;\n  bioLink?: string;\n};\n\nconst ArtIndexArtist: React.FC<Props> = ({ artist, className }) => {\n  const { state } = useArtIndex();\n  const { works } = state;\n  const artistWorks = works.filter((work) => work.artistId === artist.id);\n  const worksByYear = processWorksByYear(artistWorks);\n  const [wikiData, setWikiData] = React.useState<WikiData>();\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    getWikiData(artist?.wikiDataId).then((data) => {\n      setWikiData(data);\n      setIsLoading(false);\n    });\n  }, [artist]);\n\n  if (!artist) {\n    return null;\n  }\n\n  const formatData = arrayToCounts(\n    works.filter((d) => d.artistId === artist.id).map((d) => d.mediumFormat),\n  );\n\n  const years = d3Array\n    .groups(\n      artistWorks,\n      (d) => d.exhibitionYear,\n      (d) => d.exhibitionId,\n    )\n    .sort((a, b) => {\n      return a[0] - b[0];\n    });\n\n  const exhibitions = d3Array\n    .groups(artistWorks, (d) => d.exhibitionId)\n    .map((exhibition) => {\n      return {\n        id: exhibition[0],\n        title: exhibition[1][0].exhibitionName,\n      };\n    });\n\n  console.log(wikiData);\n\n  return (\n    <article className={[css.artIndexArtist, className || ''].join(' ')}>\n      <header className={css.header}>\n        {artist.thumbnailFile && (\n          <ArtIndexArtistThumbnail\n            file={artist.thumbnailFile}\n            className={css.artistImageCircle}\n          />\n        )}\n\n        <div>\n          <p className={css.type}>Artist</p>\n          <h1>\n            {artist.firstName} {artist.lastName}\n          </h1>\n        </div>\n      </header>\n\n      <div\n        className={[\n          css.content,\n          artist?.wikiDataId ? css.contentHasWiki : '',\n        ].join(' ')}\n      >\n        <div className={css.stats}>\n          <ArtIndexStatisticBlock\n            count={artistWorks.length}\n            label=\"Works\"\n            url={`/art-index/search/?artistIds=${artist.id}`}\n          />\n          <ArtIndexStatisticBlock\n            count={exhibitions.length}\n            label=\"Exhibitions\"\n          />\n        </div>\n\n        <div className={css.gender}>\n          <h2>Gender</h2>\n          <p>\n            <div\n              className={css.genderIndicator}\n              style={{\n                ...(artist.gender\n                  ? {\n                      backgroundColor: `var(--colour-art-index-${artist.gender})`,\n                    }\n                  : {}),\n              }}\n            ></div>{' '}\n            <Link\n              as={`/art-index/search/?genders=${artist.gender || 'unknown'}`}\n            >\n              <a>{artist.gender || 'Unknown'}</a>\n            </Link>\n          </p>\n        </div>\n\n        {artist?.wikiDataId && (\n          <div className={css.bio}>\n            {isLoading ? (\n              <LoaderText className={css.loader} />\n            ) : (\n              <>\n                <h2>Biography</h2>\n                {wikiData?.bioText && (\n                  <>\n                    <div\n                      dangerouslySetInnerHTML={{ __html: wikiData.bioText }}\n                    />\n                    <p className={css.sourceText}>\n                      Source:{' '}\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={wikiData.bioLink}\n                      >\n                        Wikipedia\n                      </a>\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        )}\n\n        <div className={css.formats}>\n          <h2>Formats</h2>\n          <ArtIndexFormatBubbleChart data={formatData} height={300} />\n        </div>\n\n        <div className={css.worksByYear}>\n          <h2>Work count by year</h2>\n          <BarChart\n            data={worksByYear}\n            rotateXAxis={true}\n            xAxisTickIncrement={5}\n            id={'works-by-year'}\n            margin={{\n              bottom: 40,\n              top: 40,\n            }}\n          />\n        </div>\n\n        <div className={css.exhibitions}>\n          <h2>Exhibitions</h2>\n\n          <div className={css.timeline}>\n            {years.map((yearData) => {\n              const year = yearData[0];\n              const yearExhibitions = yearData[1];\n\n              return (\n                <div className={css.timelineYear} key={year}>\n                  <p className={css.timelineYearLabel}>{year}</p>\n                  <div className={css.timelineDecoration}>\n                    <div className={css.timelineBullet}></div>\n                    <div className={css.timelineLine}></div>\n                  </div>\n\n                  <div>\n                    {yearExhibitions.map((yearExhibition) => {\n                      const exhibitionId = yearExhibition[0];\n                      const exhibition = exhibitions.find(\n                        (e) => e.id === exhibitionId,\n                      );\n                      const exhibitionWorks = yearExhibition[1];\n\n                      return (\n                        <div\n                          className={css.timelineExhibition}\n                          key={exhibitionId}\n                        >\n                          <h3>\n                            <Link as={`/art-index/exhibition/${exhibitionId}`}>\n                              <a>{exhibition.title}</a>\n                            </Link>\n                          </h3>\n\n                          <TimelineWorks works={exhibitionWorks} />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {artist?.wikiDataId && (\n        <div className={css.wikidata}>\n          {isLoading ? (\n            <LoaderText className={css.loader} />\n          ) : (\n            <>\n              <h2>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://wikidata.org/wiki/${artist?.wikiDataId}`}\n                >\n                  External data\n                </a>\n              </h2>\n\n              <p className={css.sourceText}>\n                Source:{' '}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://wikidata.org/wiki/${artist?.wikiDataId}`}\n                >\n                  Wikidata\n                </a>\n              </p>\n\n              {wikiData?.description && (\n                <>\n                  <h3>Description</h3>\n                  {wikiData.description}\n                  <br />\n                </>\n              )}\n              {(wikiData?.occupations || wikiData?.genre) && (\n                <p className={css.occupation}>\n                  {wikiData.occupations.join(', ')}\n                  {wikiData.occupations && wikiData.genre ? ' - ' : ''}\n                  {wikiData.genre}\n                  <br />\n                </p>\n              )}\n              {(wikiData?.bornPlace || wikiData?.bornDate) && (\n                <>\n                  Born: {wikiData.bornPlace}\n                  {wikiData.bornPlace && wikiData.bornDate ? ', ' : ''}\n                  {wikiData.bornDate}\n                  <br />\n                </>\n              )}\n              {(wikiData?.diedPlace || wikiData?.diedDate) && (\n                <>\n                  Died: {wikiData.diedPlace}\n                  {wikiData.diedPlace && wikiData.diedDate ? ', ' : ''}\n                  {wikiData.diedDate}\n                  <br />\n                </>\n              )}\n\n              {wikiData?.worksIn && (\n                <>\n                  <h3>Works held at:</h3>\n                  <ul>\n                    {wikiData.worksIn.map((institution) => {\n                      return (\n                        <li key={institution.name}>\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            href={institution.url}\n                          >\n                            {institution.name}\n                          </a>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </>\n              )}\n              {(wikiData?.locUrl ||\n                wikiData?.ausDictBiogUrl ||\n                wikiData?.dictOfSydUrl ||\n                wikiData?.daaoUrl ||\n                wikiData?.troveUrl ||\n                wikiData.agsaUrl ||\n                wikiData.auckAGUrl ||\n                wikiData.euroUrl ||\n                wikiData.tepapaUrl ||\n                wikiData.ngvUrl ||\n                wikiData.anmmUrl) && (\n                <>\n                  <h3>External links</h3>\n                  <ul>\n                    {wikiData.locUrl && (\n                      <li key={wikiData.locUrl}>\n                        View Library of Congress{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.locUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.ausDictBiogUrl && (\n                      <li key={wikiData.ausDictBiogUrl}>\n                        View Australian Dictionary of Biography{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.ausDictBiogUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.dictOfSydUrl && (\n                      <li key={wikiData.dictOfSydUrl}>\n                        View Dictionary of Sydney{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.dictOfSydUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.daaoUrl && (\n                      <li key={wikiData.daaoUrl}>\n                        View{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.daaoUrl}\n                        >\n                          biography\n                        </a>{' '}\n                        at Design &amp; Art Australia Online\n                      </li>\n                    )}\n                    {wikiData.troveUrl && (\n                      <li key={wikiData.troveUrl}>\n                        View Trove{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.troveUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.agsaUrl && (\n                      <li key={wikiData.agsaUrl}>\n                        View Art Gallery of South Australia{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.agsaUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.auckAGUrl && (\n                      <li key={wikiData.auckAGUrl}>\n                        View Auckland Art Gallery{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.auckAGUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.euroUrl && (\n                      <li key={wikiData.euroUrl}>\n                        View Europeana{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.euroUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.tepapaUrl && (\n                      <li key={wikiData.tepapaUrl}>\n                        View Te Papa{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.tepapaUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.ngvUrl && (\n                      <li key={wikiData.ngvUrl}>\n                        View National Gallery of Victoria{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.ngvUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                    {wikiData.anmmUrl && (\n                      <li key={wikiData.anmmUrl}>\n                        View Australian National Maritime Museum{' '}\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={wikiData.anmmUrl}\n                        >\n                          entry\n                        </a>\n                      </li>\n                    )}\n                  </ul>\n                </>\n              )}\n              {wikiData?.examplesOfWork && (\n                <>\n                  <h3\n                    style={{\n                      marginBottom: 'var(--spacing-xxxs)',\n                    }}\n                  >\n                    Examples of works{' '}\n                  </h3>\n\n                  <p className={css.sourceText}>\n                    Source:{' '}\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={wikiData.commonsUrl}\n                    >\n                      Wikimedia\n                    </a>\n                  </p>\n\n                  <div className={css.wikiImages}>\n                    {wikiData.examplesOfWork.map((work) => {\n                      return (\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          href={work.link}\n                          className={css.wikiImage}\n                        >\n                          <img src={work.url} alt={work.link} />\n                        </a>\n                      );\n                    })}\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </div>\n      )}\n\n      <style>\n        {/* Hide empty wikidata paragraph tags */}\n        {`\n        .mw-empty-elt {\n          display: none;\n        }\n        `}\n      </style>\n    </article>\n  );\n};\n\nconst TimelineWorks = ({ works = [], limit = 5 }) => {\n  const [newLimit, setNewLimit] = React.useState(limit);\n  const worksTotal = works.length;\n  const showButton = worksTotal > newLimit;\n\n  return (\n    <div className={css.timelineWorks}>\n      {works.slice(0, newLimit).map((work) => {\n        return (\n          <h4 key={work.id}>\n            <Link as={`/art-index/work/${work.id}`}>\n              <a>{work.title}</a>\n            </Link>\n            <span className={css.timelineWorkFormat}>\n              {work.mediumFormat ? `(${work.mediumFormat})` : ''}\n            </span>\n          </h4>\n        );\n      })}\n\n      {showButton && (\n        <Button\n          className={css.timelineShowMoreButton}\n          onClick={() => {\n            setNewLimit(newLimit + 10);\n          }}\n        >\n          Show more\n        </Button>\n      )}\n    </div>\n  );\n};\n\nconst getBioText = async (link) => {\n  if (!link) {\n    return null;\n  }\n\n  const result = await axios.get(link);\n  const rawOut = result.data;\n  const pageData = rawOut?.query?.pages;\n  const firstKey = pageData && Object.keys(pageData)[0];\n  const out = pageData && pageData[firstKey]?.extract;\n  return out;\n};\n\nconst getWikiDataQValue = async (qVal) => {\n  if (!qVal) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${qVal}&format=json&languages=en&origin=*`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut?.entities[qVal]?.labels?.en?.value;\n  return out;\n};\n\nconst getUrlFromFilename = async (filename) => {\n  if (!filename) {\n    return null;\n  }\n\n  let url =\n    'https://en.wikipedia.org/w/api.php?action=query&origin=*&prop=imageinfo';\n  url += `&iilimit=50&titles=${filename}&format=json&iiprop=url&iiurlwidth=320`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const urlData = rawOut && rawOut?.query?.pages;\n  const firstKey = Object.keys(urlData)[0];\n  const imageUrlData = urlData && urlData[firstKey];\n  const imageUrl =\n    imageUrlData &&\n    imageUrlData?.imageinfo &&\n    imageUrlData?.imageinfo[0].thumburl;\n  const descriptionUrl =\n    imageUrlData &&\n    imageUrlData?.imageinfo &&\n    imageUrlData?.imageinfo[0].descriptionurl;\n  const out = { url: imageUrl, link: descriptionUrl };\n  return out;\n};\n\nconst getWorkExamples = async (commonsCatalogue) => {\n  if (!commonsCatalogue) {\n    return null;\n  }\n  let url =\n    'https://commons.wikimedia.org/w/api.php?action=query&list=categorymembers&origin=*';\n  url += `&cmtype=file&cmtitle=Category:${commonsCatalogue}&format=json&cmlimit=500`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const members = rawOut?.query?.categorymembers;\n\n  const workExamples =\n    members &&\n    (await Promise.all(\n      members.map(async (m) => {\n        const { title } = m;\n        const value = title && (await getUrlFromFilename(title));\n        return value;\n      }),\n    ));\n  return workExamples;\n};\n\nconst getUrlForInstitution = async (id) => {\n  if (!id) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`;\n\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id];\n  const claims = out?.claims;\n  const urlString = claims?.P856 && claims?.P856[0]?.mainsnak?.datavalue?.value;\n\n  return urlString;\n};\n\nconst getWikiData = async (id): Promise<WikiData> => {\n  if (!id) {\n    return null;\n  }\n  let url = 'https://www.wikidata.org/w/api.php?action=wbgetentities';\n  url += `&ids=${id}&format=json&languages=en&origin=*`;\n  // do initial wikidata lookup for the Q value (identifier) for the artist\n  const result = await axios.get(url);\n  const rawOut = result.data;\n  const out = rawOut.entities[id];\n  // extract desciption\n  const description = out?.descriptions?.en?.value;\n  // 'claims' are where a bunch of links to other stuff live\n  const claims = out?.claims;\n  // such as date of birth/death\n  const dobData =\n    claims?.P569 && claims?.P569[0]?.mainsnak?.datavalue?.value?.time;\n  const bornDate = dobData && dobData.slice(1, 5); // just get the year for now\n  const dodData =\n    claims?.P570 && claims?.P570[0]?.mainsnak?.datavalue?.value?.time;\n  const diedDate = dodData && dodData.slice(1, 5);\n  // location of birth/death (note there are yet another Q vlaue which in turn need to be looked up)\n  const pobId = claims?.P19 && claims?.P19[0]?.mainsnak?.datavalue?.value?.id;\n  const bornPlace = pobId && (await getWikiDataQValue(pobId));\n  const podId = claims?.P20 && claims?.P20[0]?.mainsnak?.datavalue?.value?.id;\n  const diedPlace = podId && (await getWikiDataQValue(podId));\n\n  // get the list of occupations (eg: painter, sculptor, writer)\n  const occupations =\n    claims?.P106 &&\n    (await Promise.all(\n      claims?.P106.map(async (i) => {\n        const oid = i?.mainsnak?.datavalue?.value?.id;\n        const occ = oid && (await getWikiDataQValue(oid));\n        return occ;\n      }),\n    ));\n  // genre of art they worked in\n  const genreId =\n    claims?.P136 && claims?.P136[0]?.mainsnak?.datavalue?.value?.id;\n  const genre = genreId && (await getWikiDataQValue(genreId));\n  // commons category can be used to pull in images of the artist's work\n  const commonsCategory =\n    claims?.P373 && claims?.P373[0]?.mainsnak?.datavalue?.value;\n  // create the URL now, pull in works later\n  const commonsUrl =\n    commonsCategory &&\n    `https://commons.wikimedia.org/wiki/Category:${commonsCategory}`;\n  // get the list of institutions (and their websites) that the artist has\n  // works held in (again these are identifiers and need looking up)\n  const worksIn =\n    claims?.P6379 &&\n    (await Promise.all(\n      claims?.P6379.map(async (i) => {\n        const wid = i?.mainsnak?.datavalue?.value?.id;\n        const value = wid && (await getWikiDataQValue(wid));\n        const instUrl = wid && (await getUrlForInstitution(wid));\n        return { name: value, url: instUrl };\n      }),\n    ));\n  // now pull in IDs from other authoritative sources about the artist\n  // and construct the links, starting with Lib of Congress\n  const locId = claims?.P244 && claims?.P244[0]?.mainsnak?.datavalue?.value;\n  const locUrl = locId && `https://id.loc.gov/authorities/${locId}`;\n  // Australian Disctionary of Biography\n  const ausDictBiogId =\n    claims?.P1907 && claims?.P1907[0]?.mainsnak?.datavalue?.value;\n  const ausDictBiogUrl =\n    ausDictBiogId && `http://adb.anu.edu.au/biography/${ausDictBiogId}`;\n  // Dictionary of Sydney\n  const dictOfSydId =\n    claims?.P3794 && claims?.P3794[0]?.mainsnak?.datavalue?.value;\n  const dictOfSydUrl =\n    dictOfSydId && `https://dictionaryofsydney.org/${dictOfSydId}`;\n  // The DAAO\n  const daaoId = claims?.P1707 && claims?.P1707[0]?.mainsnak?.datavalue?.value;\n  const daaoUrl = daaoId && `https://www.daao.org.au/bio/${daaoId}`;\n  // Trove\n  const troveId = claims?.P1315 && claims?.P1315[0]?.mainsnak?.datavalue?.value;\n  const troveUrl = troveId && `https://trove.nla.gov.au/people/${troveId}`;\n  // Art Gallery of South Australia\n  const agsaId = claims?.P6804 && claims?.P6804[0]?.mainsnak?.datavalue?.value;\n  const agsaUrl =\n    agsaId &&\n    `https://www.agsa.sa.gov.au/collection-publications/collection/creators/_/${agsaId}`;\n  // Auckland Art Gallery\n  const auckAGId =\n    claims?.P3372 && claims?.P3372[0]?.mainsnak?.datavalue?.value;\n  const auckAGUrl =\n    auckAGId &&\n    `http://www.aucklandartgallery.com/explore-art-and-ideas/artist/${auckAGId}`;\n  // Europeana\n  const euroId = claims?.P7704 && claims?.P7704[0]?.mainsnak?.datavalue?.value;\n  const euroUrl = euroId && `https://data.europeana.eu/${euroId}`;\n  // Te Papa museum\n  const tepapaId =\n    claims?.P3544 && claims?.P3544[0]?.mainsnak?.datavalue?.value;\n  const tepapaUrl =\n    tepapaId && `https://collections.tepapa.govt.nz/agent/${tepapaId}`;\n  // Nat Gallery Victoria\n  const ngvId = claims?.P2041 && claims?.P2041[0]?.mainsnak?.datavalue?.value;\n  const ngvUrl =\n    ngvId && `https://www.ngv.vic.gov.au/explore/collection/artist/${ngvId}`;\n  // Aus Nat Maritime Museum\n  const anmmId = claims?.P7769 && claims?.P7769[0]?.mainsnak?.datavalue?.value;\n  const anmmUrl = anmmId && `http://collections.anmm.gov.au/people/${anmmId}`;\n  // Now construct the examples of work data from the commons category\n  const examplesOfWork =\n    commonsCategory && (await getWorkExamples(commonsCategory));\n  // look for wikipedia link in sitelinks section, from which a bio can be extracted\n  const sitelinks = out?.sitelinks;\n  const wikiTitle = sitelinks && sitelinks?.enwiki?.title;\n  const wikiBioLink =\n    wikiTitle &&\n    `https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exsentences=2&titles=${wikiTitle}&format=json&origin=*`; // &explaintext=true\n  const bioText = wikiBioLink && (await getBioText(wikiBioLink));\n  const bioLink = wikiTitle && `https://en.wikipedia.org/wiki/${wikiTitle}`;\n  // build data object to return\n  const data = {\n    description,\n    bornDate,\n    diedDate,\n    bornPlace,\n    diedPlace,\n    occupations,\n    genre,\n    commonsCategory,\n    worksIn,\n    locUrl,\n    ausDictBiogUrl,\n    dictOfSydUrl,\n    daaoUrl,\n    troveUrl,\n    examplesOfWork,\n    commonsUrl,\n    agsaUrl,\n    auckAGUrl,\n    euroUrl,\n    tepapaUrl,\n    ngvUrl,\n    anmmUrl,\n    bioText,\n    bioLink,\n  };\n\n  return data;\n};\n\nexport default ArtIndexArtist;\n"]},"metadata":{},"sourceType":"module"}