{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/Progress/Progress.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport { NProgress } from '@tanem/react-nprogress';\nimport css from './Progress.module.scss';\n\nvar Progress = function Progress(_ref) {\n  _s();\n\n  var className = _ref.className,\n      _ref$loadingKey = _ref.loadingKey,\n      loadingKey = _ref$loadingKey === void 0 ? 'n-progress' : _ref$loadingKey;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isRouteChanging = _React$useState2[0],\n      setIsRouteChanging = _React$useState2[1];\n\n  React.useEffect(function () {\n    Router.events.on('routeChangeStart', routeChangeStart);\n    Router.events.on('routeChangeComplete', routeChangeEnd);\n    Router.events.on('routeChangeError', routeChangeEnd);\n    return function cleanUp() {\n      Router.events.off('routeChangeStart', routeChangeStart);\n      Router.events.off('routeChangeComplete', routeChangeEnd);\n      Router.events.off('routeChangeError', routeChangeEnd);\n    };\n  }, []);\n\n  var routeChangeStart = function routeChangeStart() {\n    setIsRouteChanging(true);\n  };\n\n  var routeChangeEnd = function routeChangeEnd() {\n    setIsRouteChanging(false);\n  };\n\n  return __jsx(NProgress, {\n    isAnimating: isRouteChanging,\n    key: loadingKey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var isFinished = _ref2.isFinished,\n        progress = _ref2.progress,\n        animationDuration = _ref2.animationDuration;\n    return __jsx(\"div\", {\n      className: [className || ''].join(' '),\n      style: {\n        opacity: isFinished ? 0 : 1,\n        pointerEvents: 'none',\n        transition: \"opacity \".concat(animationDuration, \"ms linear\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: css.bar,\n      style: {\n        marginLeft: \"\".concat((-1 + progress) * 100, \"%\"),\n        transition: \"margin-left \".concat(animationDuration, \"ms linear\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\n_s(Progress, \"BnkZLhO/1mQyB7DhuJ6qvHEYBSM=\");\n\n_c = Progress;\nProgress.propTypes = {\n  className: PropTypes.string\n};\nexport default Progress;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/Progress/Progress.tsx"],"names":["React","Router","PropTypes","NProgress","css","Progress","className","loadingKey","useState","isRouteChanging","setIsRouteChanging","useEffect","events","on","routeChangeStart","routeChangeEnd","cleanUp","off","isFinished","progress","animationDuration","join","opacity","pointerEvents","transition","bar","marginLeft","propTypes","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8C;AAAA;;AAAA,MAA3CC,SAA2C,QAA3CA,SAA2C;AAAA,6BAAhCC,UAAgC;AAAA,MAAhCA,UAAgC,gCAAnB,YAAmB;;AAAA,wBACfP,KAAK,CAACQ,QAAN,CAAe,KAAf,CADe;AAAA;AAAA,MACtDC,eADsD;AAAA,MACrCC,kBADqC;;AAG7DV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AACpBV,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCC,gBAArC;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCE,cAAxC;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCE,cAArC;AAEA,WAAO,SAASC,OAAT,GAAmB;AACxBf,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsCH,gBAAtC;AACAb,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyCF,cAAzC;AACAd,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsCF,cAAtC;AACD,KAJD;AAKD,GAVD,EAUG,EAVH;;AAYA,MAAMD,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BL,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD;;AAIA,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAED,eAAxB;AAAyC,IAAA,GAAG,EAAEF,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGW,UAAH,SAAGA,UAAH;AAAA,QAAeC,QAAf,SAAeA,QAAf;AAAA,QAAyBC,iBAAzB,SAAyBA,iBAAzB;AAAA,WACC;AACE,MAAA,SAAS,EAAE,CAACd,SAAS,IAAI,EAAd,EAAkBe,IAAlB,CAAuB,GAAvB,CADb;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAEJ,UAAU,GAAG,CAAH,GAAO,CADrB;AAELK,QAAAA,aAAa,EAAE,MAFV;AAGLC,QAAAA,UAAU,oBAAaJ,iBAAb;AAHL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,SAAS,EAAEhB,GAAG,CAACqB,GADjB;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,YAAK,CAAC,CAAC,CAAD,GAAKP,QAAN,IAAkB,GAAvB,MADL;AAELK,QAAAA,UAAU,wBAAiBJ,iBAAjB;AAFL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADD;AAAA,GADH,CADF;AAsBD,CA7CD;;GAAMf,Q;;KAAAA,Q;AA+CNA,QAAQ,CAACsB,SAAT,GAAqB;AACnBrB,EAAAA,SAAS,EAAEJ,SAAS,CAAC0B;AADF,CAArB;AAIA,eAAevB,QAAf","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport { NProgress } from '@tanem/react-nprogress';\n\nimport css from './Progress.module.scss';\n\nconst Progress = ({ className, loadingKey = 'n-progress' }) => {\n  const [isRouteChanging, setIsRouteChanging] = React.useState(false);\n\n  React.useEffect(() => {\n    Router.events.on('routeChangeStart', routeChangeStart);\n    Router.events.on('routeChangeComplete', routeChangeEnd);\n    Router.events.on('routeChangeError', routeChangeEnd);\n\n    return function cleanUp() {\n      Router.events.off('routeChangeStart', routeChangeStart);\n      Router.events.off('routeChangeComplete', routeChangeEnd);\n      Router.events.off('routeChangeError', routeChangeEnd);\n    };\n  }, []);\n\n  const routeChangeStart = () => {\n    setIsRouteChanging(true);\n  };\n\n  const routeChangeEnd = () => {\n    setIsRouteChanging(false);\n  };\n\n  return (\n    <NProgress isAnimating={isRouteChanging} key={loadingKey}>\n      {({ isFinished, progress, animationDuration }) => (\n        <div\n          className={[className || ''].join(' ')}\n          style={{\n            opacity: isFinished ? 0 : 1,\n            pointerEvents: 'none',\n            transition: `opacity ${animationDuration}ms linear`,\n          }}\n        >\n          <div\n            className={css.bar}\n            style={{\n              marginLeft: `${(-1 + progress) * 100}%`,\n              transition: `margin-left ${animationDuration}ms linear`,\n            }}\n          ></div>\n        </div>\n      )}\n    </NProgress>\n  );\n};\n\nProgress.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}