{"ast":null,"code":"import * as React from 'react';\n// https://css-tricks.com/dealing-with-stale-props-and-states-in-reacts-functional-components/\nexport function useAsyncReference(value, isProp = false) {\n  const ref = React.useRef(value);\n  const [, forceRender] = React.useState(false);\n\n  function updateState(newState) {\n    if (!Object.is(ref.current, newState)) {\n      ref.current = newState;\n      forceRender(s => !s);\n    }\n  }\n\n  if (isProp) {\n    ref.current = value;\n    return ref;\n  }\n\n  return [ref, updateState];\n}","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/lib/hooks/use-async-reference.ts"],"names":["React","useAsyncReference","value","isProp","ref","useRef","forceRender","useState","updateState","newState","Object","is","current","s"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAYA;AACA,OAAO,SAASC,iBAAT,CAA8BC,KAA9B,EAAqCC,MAAM,GAAG,KAA9C,EAAqD;AAC1D,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAgBH,KAAhB,CAAZ;AACA,QAAM,GAAGI,WAAH,IAAkBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxB;;AAEA,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,QAAI,CAACC,MAAM,CAACC,EAAP,CAAUP,GAAG,CAACQ,OAAd,EAAuBH,QAAvB,CAAL,EAAuC;AACrCL,MAAAA,GAAG,CAACQ,OAAJ,GAAcH,QAAd;AACAH,MAAAA,WAAW,CAAEO,CAAD,IAAO,CAACA,CAAT,CAAX;AACD;AACF;;AAED,MAAIV,MAAJ,EAAY;AACVC,IAAAA,GAAG,CAACQ,OAAJ,GAAcV,KAAd;AACA,WAAOE,GAAP;AACD;;AAED,SAAO,CAACA,GAAD,EAAMI,WAAN,CAAP;AACD","sourcesContent":["import * as React from 'react';\n\nexport function useAsyncReference<T>(\n  a: any,\n  isProp: false,\n): [React.MutableRefObject<T>, (newState: any) => void];\n\nexport function useAsyncReference<T>(\n  a: any,\n  isProps: true,\n): React.MutableRefObject<T>;\n\n// https://css-tricks.com/dealing-with-stale-props-and-states-in-reacts-functional-components/\nexport function useAsyncReference<T>(value, isProp = false) {\n  const ref = React.useRef<T>(value);\n  const [, forceRender] = React.useState(false);\n\n  function updateState(newState) {\n    if (!Object.is(ref.current, newState)) {\n      ref.current = newState;\n      forceRender((s) => !s);\n    }\n  }\n\n  if (isProp) {\n    ref.current = value;\n    return ref;\n  }\n\n  return [ref, updateState];\n}\n"]},"metadata":{},"sourceType":"module"}