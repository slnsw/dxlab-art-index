{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexSearch/ArtIndexSearch.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router, { useRouter } from 'next/router';\nimport BarChart from '../BarChart';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport SearchTextInputV2 from '../SearchTextInput/SearchTextInputV2';\nimport ArtIndexSearchResult from '../ArtIndexSearchResult';\nimport LoaderText from '../LoaderText';\nimport SearchSelectedFacets from '../SearchSelectedFacets';\nimport ArtIndexCTAButton from '../ArtIndexCTAButton';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport Paginate from '../Paginate';\nimport Sidebar from '../Sidebar';\nimport Link from '../Link';\nimport TextButton from '../TextButton';\nimport createSearchQuery from '../../lib/create-search-query';\nimport { useAsyncReference } from '../../lib/hooks/use-async-reference';\nimport axios from '../../lib/axios';\nimport css from './ArtIndexSearch.module.scss';\nimport Icon from '../Icon';\nconst searchQuery = createSearchQuery({\n  baseUrl: '/art-index/search/'\n});\nconst searchApiQuery = createSearchQuery({\n  baseUrl: '/api/art-index/works'\n});\n\nconst ArtIndexSearchPage = () => {\n  var _unpaddedYearData$, _unpaddedYearData;\n\n  const router = useRouter();\n  const query = router.query;\n  const queryRef = useAsyncReference(query, true);\n  const {\n    search\n  } = query;\n  const offset = parseInt(query.offset, 10);\n  const [value, setValue] = React.useState('');\n  const [resultsData, setResultsData] = React.useState();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isOpen, setIsOpen] = React.useState(false); // Selected Facets\n\n  const selectedFormats = React.useMemo(() => {\n    var _query$formats;\n\n    return ((_query$formats = query.formats) === null || _query$formats === void 0 ? void 0 : _query$formats.split(',')) || [];\n  }, [query.formats]);\n  const selectedArtistIds = React.useMemo(() => {\n    var _query$artistIds;\n\n    return ((_query$artistIds = query.artistIds) === null || _query$artistIds === void 0 ? void 0 : _query$artistIds.split(',')) || [];\n  }, [query.artistIds]);\n  const selectedGenders = React.useMemo(() => {\n    var _query$genders;\n\n    return ((_query$genders = query.genders) === null || _query$genders === void 0 ? void 0 : _query$genders.split(',')) || [];\n  }, [query.genders]);\n  const selectedExhibitionIds = React.useMemo(() => {\n    var _query$exhibitionIds;\n\n    return ((_query$exhibitionIds = query.exhibitionIds) === null || _query$exhibitionIds === void 0 ? void 0 : _query$exhibitionIds.split(',')) || [];\n  }, [query.exhibitionIds]); // Results\n\n  const results = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.works) || []; // Facets\n\n  const formatData = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.facets.formats.map(f => ({\n    item: f.value,\n    count: f.total\n  }))) || [];\n  const artistFacets = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.facets.artists.map(a => ({\n    id: a.id,\n    name: `${a.value.firstName} ${a.value.lastName}`,\n    thumbnailFile: a.value.thumbnailFile,\n    gender: a.value.gender,\n    value: a.total\n  }))) || [];\n  const genderFacets = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.facets.genders.map(g => ({\n    id: g.type,\n    name: g.value,\n    value: g.total\n  }))) || [];\n  const exhibitionData = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.facets.exhibitions.map(e => ({\n    id: e.id,\n    name: e.value,\n    value: e.total\n  }))) || [];\n  const unpaddedYearData = (resultsData === null || resultsData === void 0 ? void 0 : resultsData.facets.years.map(e => ({\n    name: e.id,\n    value: e.total\n  })).sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10))) || []; // now pad it out and add any years that have no data - we want all years shown.\n\n  const yearData = [];\n  const minYear = (_unpaddedYearData$ = unpaddedYearData[0]) === null || _unpaddedYearData$ === void 0 ? void 0 : _unpaddedYearData$.name;\n  const maxYear = (_unpaddedYearData = unpaddedYearData[unpaddedYearData.length - 1]) === null || _unpaddedYearData === void 0 ? void 0 : _unpaddedYearData.name;\n\n  for (let y = minYear; y <= maxYear; y++) {\n    var _temp$;\n\n    const temp = unpaddedYearData.filter(i => i.name === y.toString());\n    const val = ((_temp$ = temp[0]) === null || _temp$ === void 0 ? void 0 : _temp$.value) || 0;\n    yearData.push({\n      name: y.toString(),\n      value: val\n    });\n  } // Selected Facets\n\n\n  const selectedFacets = [...selectedFormats.map(format => ({\n    name: format,\n    value: format,\n    url: searchQuery.stringifyAction(query, {\n      type: 'remove',\n      key: 'formats',\n      value: format\n    })\n  })), ...selectedArtistIds.filter(artistId => {\n    const artist = artistFacets.find(a => a.id === artistId);\n    return Boolean(artist);\n  }).map(artistId => {\n    const artist = artistFacets.find(a => a.id === artistId);\n    return {\n      name: artist.name,\n      value: artistId,\n      url: searchQuery.stringifyAction(query, {\n        type: 'remove',\n        key: 'artistIds',\n        value: artistId\n      })\n    };\n  }), ...selectedGenders.map(gender => ({\n    name: gender === 'unknown' ? 'Unknown gender' : gender,\n    value: gender,\n    url: searchQuery.stringifyAction(query, {\n      type: 'remove',\n      key: 'genders',\n      value: gender\n    })\n  })), ...selectedExhibitionIds.filter(exhibitionId => {\n    const exhibition = exhibitionData.find(a => a.id === exhibitionId);\n    return Boolean(exhibition);\n  }).map(exhibitionId => {\n    const exhibition = exhibitionData.find(a => a.id === exhibitionId);\n    return {\n      name: exhibition.name,\n      value: exhibitionId,\n      url: searchQuery.stringifyAction(query, {\n        type: 'remove',\n        key: 'exhibitionIds',\n        value: exhibitionId\n      })\n    };\n  })]; // Pagination\n\n  const countPerPage = 20;\n  const pageCount = resultsData ? Math.ceil(resultsData.worksTotal / countPerPage) : null;\n  const initialPage = Math.floor(offset / countPerPage);\n  React.useEffect(() => {\n    const url = searchApiQuery.stringify({\n      search,\n      formats: selectedFormats === null || selectedFormats === void 0 ? void 0 : selectedFormats.join(','),\n      artistIds: selectedArtistIds === null || selectedArtistIds === void 0 ? void 0 : selectedArtistIds.join(','),\n      genders: selectedGenders === null || selectedGenders === void 0 ? void 0 : selectedGenders.join(','),\n      exhibitionIds: selectedExhibitionIds === null || selectedExhibitionIds === void 0 ? void 0 : selectedExhibitionIds.join(','),\n      offset: offset === 0 ? null : offset.toString()\n    });\n    setIsLoading(true);\n    axios.get(url).then(result => {\n      const {\n        data\n      } = result;\n      setIsLoading(false);\n      setResultsData(data);\n    }).catch(error => {\n      console.log(error);\n    }); // }\n  }, [search, query, offset, selectedFormats, selectedArtistIds, selectedGenders, selectedExhibitionIds]);\n\n  const handleSearchInputChange = newValue => {\n    setValue(newValue);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    Router.push(searchQuery.stringify({\n      search: value,\n      formats: selectedFormats === null || selectedFormats === void 0 ? void 0 : selectedFormats.join(','),\n      artistIds: selectedArtistIds === null || selectedArtistIds === void 0 ? void 0 : selectedArtistIds.join(','),\n      genders: selectedGenders === null || selectedGenders === void 0 ? void 0 : selectedGenders.join(','),\n      exhibitionIds: selectedExhibitionIds === null || selectedExhibitionIds === void 0 ? void 0 : selectedExhibitionIds.join(',')\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: css.artIndexSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: css.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    className: css.searchBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, __jsx(SearchTextInputV2, {\n    className: css.searchInput,\n    placeholder: \"Start searching...\",\n    defaultValue: search,\n    onChange: handleSearchInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }), __jsx(ArtIndexCTAButton, {\n    onClick: handleFormSubmit,\n    className: css.searchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, \"Search\")), selectedFacets.length > 0 ? __jsx(SearchSelectedFacets, {\n    className: css.selectedFacets,\n    facets: selectedFacets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }) : null, resultsData && __jsx(\"div\", {\n    className: css.searchInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, __jsx(ArtIndexCTAButton, {\n    className: css.facetsButton,\n    onClick: () => {\n      setIsOpen(!isOpen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: \"options\",\n    colour: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    style: {\n      marginLeft: 'var(--spacing-xs)',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, \"Facets\"))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, resultsData.worksTotal.toLocaleString()), \" results\")), __jsx(\"div\", {\n    className: css.results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, isLoading && __jsx(LoaderText, {\n    className: css.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: [css.resultsList, isLoading ? css.resultsListLoading : ''].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, results === null || results === void 0 ? void 0 : results.map(item => {\n    return __jsx(ArtIndexSearchResult, {\n      item: item,\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 22\n      }\n    });\n  }))), pageCount > 0 ? __jsx(Paginate, {\n    className: css.paginate,\n    pageCount: pageCount,\n    initialPage: initialPage,\n    hrefBuilder: pageNo => {\n      const index = pageNo - 1;\n      const newOffset = index !== 0 ? (index * countPerPage).toString() : null;\n      return searchQuery.stringify(_objectSpread(_objectSpread({}, query), {}, {\n        offset: newOffset\n      }));\n    },\n    onPageChange: ({\n      selected\n    }) => {\n      if (selected >= 0 && selected !== Infinity) {\n        const newOffset = selected !== 0 ? (selected * countPerPage).toString() : null;\n        const url = searchQuery.stringify(_objectSpread(_objectSpread({}, query), {}, {\n          offset: newOffset\n        }));\n        Router.push(url).then(() => {\n          window.scrollTo(0, 0);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }) : null, __jsx(Sidebar, {\n    isOpen: isOpen,\n    className: css.facetSidebar,\n    onCloseClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, __jsx(\"aside\", {\n    className: css.facets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, formatData.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, \"Formats\"), __jsx(ArtIndexFormatBubbleChart, {\n    data: formatData,\n    letterWidth: 4,\n    smallCircleLimit: 12,\n    height: 300,\n    onBubbleClick: (_, bubble) => {\n      Router.push(searchQuery.stringify(_objectSpread(_objectSpread({}, queryRef.current), {}, {\n        formats: bubble.data.name.toLowerCase()\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  })), artistFacets.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, \"Artists\"), __jsx(SearchFacet, {\n    facetValues: artistFacets && artistFacets.map(facet => {\n      return {\n        name: facet.name,\n        value: facet.value,\n        url: searchQuery.stringify(_objectSpread(_objectSpread({}, query), {}, {\n          artistIds: facet.id\n        })),\n        imageUrl: facet.thumbnailFile || null\n      };\n    }),\n    showImage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  })), genderFacets.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, \"Genders\"), __jsx(SearchFacet, {\n    facetValues: genderFacets && genderFacets.map(facet => {\n      return {\n        name: facet.name,\n        value: facet.value,\n        url: searchQuery.stringify(_objectSpread(_objectSpread({}, query), {}, {\n          genders: facet.id\n        }))\n      };\n    }),\n    showGender: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  })), yearData.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, \"Years\"), __jsx(BarChart, {\n    data: yearData || [],\n    className: css.artistsChart,\n    rotateXAxis: true,\n    xAxisTickIncrement: 10,\n    xAxisTickValuesNumeric: true,\n    margin: {\n      top: 20,\n      right: 3,\n      bottom: 70,\n      left: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 17\n    }\n  })), exhibitionData.length > 0 && __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, \"Exhibitions\"), __jsx(SearchFacet, {\n    facetValues: exhibitionData && exhibitionData.map(exhibition => {\n      return {\n        name: exhibition.name,\n        value: exhibition.value,\n        url: searchQuery.stringify(_objectSpread(_objectSpread({}, query), {}, {\n          exhibitionIds: exhibition.id\n        }))\n      };\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst SearchFacet = ({\n  facetValues = [],\n  limit = 5,\n  showImage = false,\n  showGender = false\n}) => {\n  const [newLimit, setNewLimit] = React.useState(limit);\n  const showButton = newLimit < facetValues.length;\n  return __jsx(\"div\", {\n    className: css.artistFacets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, facetValues.slice(0, newLimit).map(facetValue => {\n    return __jsx(\"p\", {\n      key: facetValue.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: facetValue.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 15\n      }\n    }, showImage && __jsx(ArtIndexArtistThumbnail, {\n      file: facetValue.imageUrl,\n      size: \"xs\",\n      className: css.artistFacetThumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }), showGender && __jsx(\"div\", {\n      className: css.artistFacetGender,\n      style: _objectSpread({}, facetValue.name !== 'Unknown' ? {\n        backgroundColor: `var(--colour-art-index-${facetValue.name.toLocaleLowerCase()})`\n      } : {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 19\n      }\n    }), facetValue.name)), __jsx(\"span\", {\n      className: css.artistFacetValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 13\n      }\n    }, facetValue.value));\n  }), showButton && __jsx(TextButton, {\n    onClick: () => {\n      setNewLimit(newLimit + 10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 9\n    }\n  }, \"Show more\"));\n}; // function isEmpty(obj) {\n//   return Object.keys(obj).length === 0 && obj.constructor === Object;\n// }\n\n\nexport default ArtIndexSearchPage;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexSearch/ArtIndexSearch.tsx"],"names":["React","Router","useRouter","BarChart","ArtIndexFormatBubbleChart","SearchTextInputV2","ArtIndexSearchResult","LoaderText","SearchSelectedFacets","ArtIndexCTAButton","ArtIndexArtistThumbnail","Paginate","Sidebar","Link","TextButton","createSearchQuery","useAsyncReference","axios","css","Icon","searchQuery","baseUrl","searchApiQuery","ArtIndexSearchPage","router","query","queryRef","search","offset","parseInt","value","setValue","useState","resultsData","setResultsData","isLoading","setIsLoading","isOpen","setIsOpen","selectedFormats","useMemo","formats","split","selectedArtistIds","artistIds","selectedGenders","genders","selectedExhibitionIds","exhibitionIds","results","works","formatData","facets","map","f","item","count","total","artistFacets","artists","a","id","name","firstName","lastName","thumbnailFile","gender","genderFacets","g","type","exhibitionData","exhibitions","e","unpaddedYearData","years","sort","b","yearData","minYear","maxYear","length","y","temp","filter","i","toString","val","push","selectedFacets","format","url","stringifyAction","key","artistId","artist","find","Boolean","exhibitionId","exhibition","countPerPage","pageCount","Math","ceil","worksTotal","initialPage","floor","useEffect","stringify","join","get","then","result","data","catch","error","console","log","handleSearchInputChange","newValue","handleFormSubmit","event","preventDefault","artIndexSearch","content","searchBox","searchInput","searchButton","searchInfo","facetsButton","display","alignItems","pointerEvents","marginLeft","toLocaleString","loader","resultsList","resultsListLoading","paginate","pageNo","index","newOffset","selected","Infinity","window","scrollTo","facetSidebar","_","bubble","current","toLowerCase","facet","imageUrl","artistsChart","top","right","bottom","left","SearchFacet","facetValues","limit","showImage","showGender","newLimit","setNewLimit","showButton","slice","facetValue","artistFacetThumbnail","artistFacetGender","backgroundColor","toLocaleLowerCase","artistFacetValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { AxiosResponse } from 'axios';\n\nimport BarChart from '../BarChart';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport SearchTextInputV2 from '../SearchTextInput/SearchTextInputV2';\nimport ArtIndexSearchResult from '../ArtIndexSearchResult';\nimport LoaderText from '../LoaderText';\nimport SearchSelectedFacets from '../SearchSelectedFacets';\nimport ArtIndexCTAButton from '../ArtIndexCTAButton';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport Paginate from '../Paginate';\nimport Sidebar from '../Sidebar';\nimport Link from '../Link';\nimport TextButton from '../TextButton';\n\nimport createSearchQuery from '../../lib/create-search-query';\nimport { useAsyncReference } from '../../lib/hooks/use-async-reference';\nimport axios from '../../lib/axios';\n\nimport { ArtIndexApiWorksResult } from '../../types/art-index-types';\n\nimport css from './ArtIndexSearch.module.scss';\nimport Icon from '../Icon';\n\ntype Query = {\n  search?: string;\n  formats?: string;\n  artistIds?: string;\n  genders?: string;\n  exhibitionIds?: string;\n  offset?: string;\n};\n\nconst searchQuery = createSearchQuery<Query>({\n  baseUrl: '/art-index/search/',\n});\n\nconst searchApiQuery = createSearchQuery<Query>({\n  baseUrl: '/api/art-index/works',\n});\n\nconst ArtIndexSearchPage = () => {\n  const router = useRouter();\n  const query = router.query as Query;\n  const queryRef = useAsyncReference<Query>(query, true);\n  const { search } = query;\n  const offset = parseInt(query.offset, 10);\n\n  const [value, setValue] = React.useState('');\n  const [resultsData, setResultsData] = React.useState<\n    ArtIndexApiWorksResult\n  >();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  // Selected Facets\n  const selectedFormats = React.useMemo(() => {\n    return query.formats?.split(',') || [];\n  }, [query.formats]);\n\n  const selectedArtistIds = React.useMemo(() => {\n    return query.artistIds?.split(',') || [];\n  }, [query.artistIds]);\n\n  const selectedGenders = React.useMemo(() => {\n    return query.genders?.split(',') || [];\n  }, [query.genders]);\n\n  const selectedExhibitionIds = React.useMemo(() => {\n    return query.exhibitionIds?.split(',') || [];\n  }, [query.exhibitionIds]);\n\n  // Results\n  const results = resultsData?.works || [];\n\n  // Facets\n  const formatData =\n    resultsData?.facets.formats.map((f) => ({\n      item: f.value,\n      count: f.total,\n    })) || [];\n  const artistFacets =\n    resultsData?.facets.artists.map((a) => ({\n      id: a.id,\n      name: `${a.value.firstName} ${a.value.lastName}`,\n      thumbnailFile: a.value.thumbnailFile,\n      gender: a.value.gender,\n      value: a.total,\n    })) || [];\n  const genderFacets =\n    resultsData?.facets.genders.map((g) => ({\n      id: g.type,\n      name: g.value,\n      value: g.total,\n    })) || [];\n  const exhibitionData =\n    resultsData?.facets.exhibitions.map((e) => ({\n      id: e.id,\n      name: e.value,\n      value: e.total,\n    })) || [];\n  const unpaddedYearData =\n    resultsData?.facets.years\n      .map((e) => ({\n        name: e.id,\n        value: e.total,\n      }))\n      .sort((a, b) => parseInt(a.name, 10) - parseInt(b.name, 10)) || [];\n  // now pad it out and add any years that have no data - we want all years shown.\n  const yearData = [];\n  const minYear = unpaddedYearData[0]?.name;\n  const maxYear = unpaddedYearData[unpaddedYearData.length - 1]?.name;\n  for (let y = minYear; y <= maxYear; y++) {\n    const temp = unpaddedYearData.filter((i) => i.name === y.toString());\n    const val = temp[0]?.value || 0;\n    yearData.push({\n      name: y.toString(),\n      value: val,\n    });\n  }\n\n  // Selected Facets\n  const selectedFacets = [\n    ...selectedFormats.map((format) => ({\n      name: format,\n      value: format,\n      url: searchQuery.stringifyAction(query, {\n        type: 'remove',\n        key: 'formats',\n        value: format,\n      }),\n    })),\n    ...selectedArtistIds\n      .filter((artistId) => {\n        const artist = artistFacets.find((a) => a.id === artistId);\n\n        return Boolean(artist);\n      })\n      .map((artistId) => {\n        const artist = artistFacets.find((a) => a.id === artistId);\n\n        return {\n          name: artist.name,\n          value: artistId,\n          url: searchQuery.stringifyAction(query, {\n            type: 'remove',\n            key: 'artistIds',\n            value: artistId,\n          }),\n        };\n      }),\n    ...selectedGenders.map((gender) => ({\n      name: gender === 'unknown' ? 'Unknown gender' : gender,\n      value: gender,\n      url: searchQuery.stringifyAction(query, {\n        type: 'remove',\n        key: 'genders',\n        value: gender,\n      }),\n    })),\n    ...selectedExhibitionIds\n      .filter((exhibitionId) => {\n        const exhibition = exhibitionData.find((a) => a.id === exhibitionId);\n\n        return Boolean(exhibition);\n      })\n      .map((exhibitionId) => {\n        const exhibition = exhibitionData.find((a) => a.id === exhibitionId);\n\n        return {\n          name: exhibition.name,\n          value: exhibitionId,\n          url: searchQuery.stringifyAction(query, {\n            type: 'remove',\n            key: 'exhibitionIds',\n            value: exhibitionId,\n          }),\n        };\n      }),\n  ];\n\n  // Pagination\n  const countPerPage = 20;\n  const pageCount = resultsData\n    ? Math.ceil(resultsData.worksTotal / countPerPage)\n    : null;\n  const initialPage = Math.floor(offset / countPerPage);\n\n  React.useEffect(() => {\n    const url = searchApiQuery.stringify({\n      search,\n      formats: selectedFormats?.join(','),\n      artistIds: selectedArtistIds?.join(','),\n      genders: selectedGenders?.join(','),\n      exhibitionIds: selectedExhibitionIds?.join(','),\n      offset: offset === 0 ? null : offset.toString(),\n    });\n\n    setIsLoading(true);\n\n    axios\n      .get(url)\n      .then((result: AxiosResponse<ArtIndexApiWorksResult>) => {\n        const { data } = result;\n\n        setIsLoading(false);\n        setResultsData(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    // }\n  }, [\n    search,\n    query,\n    offset,\n    selectedFormats,\n    selectedArtistIds,\n    selectedGenders,\n    selectedExhibitionIds,\n  ]);\n\n  const handleSearchInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    Router.push(\n      searchQuery.stringify({\n        search: value,\n        formats: selectedFormats?.join(','),\n        artistIds: selectedArtistIds?.join(','),\n        genders: selectedGenders?.join(','),\n        exhibitionIds: selectedExhibitionIds?.join(','),\n      }),\n    );\n  };\n\n  return (\n    <div className={css.artIndexSearch}>\n      <div className={css.content}>\n        <form onSubmit={handleFormSubmit} className={css.searchBox}>\n          <SearchTextInputV2\n            className={css.searchInput}\n            placeholder=\"Start searching...\"\n            defaultValue={search}\n            onChange={handleSearchInputChange}\n          />\n\n          <ArtIndexCTAButton\n            onClick={handleFormSubmit}\n            className={css.searchButton}\n          >\n            Search\n          </ArtIndexCTAButton>\n        </form>\n\n        {selectedFacets.length > 0 ? (\n          <SearchSelectedFacets\n            className={css.selectedFacets}\n            facets={selectedFacets}\n          />\n        ) : null}\n\n        {resultsData && (\n          <div className={css.searchInfo}>\n            <ArtIndexCTAButton\n              className={css.facetsButton}\n              onClick={() => {\n                setIsOpen(!isOpen);\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  pointerEvents: 'none',\n                }}\n              >\n                <Icon name=\"options\" colour=\"white\" />\n                <span\n                  style={{\n                    marginLeft: 'var(--spacing-xs)',\n                    pointerEvents: 'none',\n                  }}\n                >\n                  Facets\n                </span>\n              </div>\n            </ArtIndexCTAButton>\n            <p>\n              <strong>{resultsData.worksTotal.toLocaleString()}</strong> results\n            </p>\n          </div>\n        )}\n\n        <div className={css.results}>\n          {isLoading && <LoaderText className={css.loader} />}\n\n          <div\n            className={[\n              css.resultsList,\n              isLoading ? css.resultsListLoading : '',\n            ].join(' ')}\n          >\n            {results?.map((item) => {\n              return <ArtIndexSearchResult item={item} key={item.id} />;\n            })}\n          </div>\n        </div>\n\n        {pageCount > 0 ? (\n          <Paginate\n            className={css.paginate}\n            pageCount={pageCount}\n            initialPage={initialPage}\n            hrefBuilder={(pageNo) => {\n              const index = pageNo - 1;\n              const newOffset =\n                index !== 0 ? (index * countPerPage).toString() : null;\n\n              return searchQuery.stringify({\n                ...query,\n                offset: newOffset,\n              });\n            }}\n            onPageChange={({ selected }) => {\n              if (selected >= 0 && selected !== Infinity) {\n                const newOffset =\n                  selected !== 0 ? (selected * countPerPage).toString() : null;\n                const url = searchQuery.stringify({\n                  ...query,\n                  offset: newOffset,\n                });\n\n                Router.push(url).then(() => {\n                  window.scrollTo(0, 0);\n                });\n              }\n            }}\n          />\n        ) : null}\n\n        <Sidebar\n          isOpen={isOpen}\n          className={css.facetSidebar}\n          onCloseClick={() => {\n            setIsOpen(false);\n          }}\n        >\n          <aside className={css.facets}>\n            {formatData.length > 0 && (\n              <>\n                <h2>Formats</h2>\n\n                <ArtIndexFormatBubbleChart\n                  data={formatData}\n                  letterWidth={4}\n                  smallCircleLimit={12}\n                  height={300}\n                  onBubbleClick={(_, bubble) => {\n                    Router.push(\n                      searchQuery.stringify({\n                        ...queryRef.current,\n                        formats: bubble.data.name.toLowerCase(),\n                      }),\n                    );\n                  }}\n                />\n              </>\n            )}\n\n            {artistFacets.length > 0 && (\n              <>\n                <h2>Artists</h2>\n\n                <SearchFacet\n                  facetValues={\n                    artistFacets &&\n                    artistFacets.map((facet) => {\n                      return {\n                        name: facet.name,\n                        value: facet.value,\n                        url: searchQuery.stringify({\n                          ...query,\n                          artistIds: facet.id,\n                        }),\n                        imageUrl: facet.thumbnailFile || null,\n                      };\n                    })\n                  }\n                  showImage={true}\n                />\n              </>\n            )}\n\n            {genderFacets.length > 0 && (\n              <>\n                <h2>Genders</h2>\n\n                <SearchFacet\n                  facetValues={\n                    genderFacets &&\n                    genderFacets.map((facet) => {\n                      return {\n                        name: facet.name,\n                        value: facet.value,\n                        url: searchQuery.stringify({\n                          ...query,\n                          genders: facet.id,\n                        }),\n                      };\n                    })\n                  }\n                  showGender={true}\n                />\n              </>\n            )}\n\n            {yearData.length > 0 && (\n              <>\n                <h2>Years</h2>\n\n                <BarChart\n                  data={yearData || []}\n                  className={css.artistsChart}\n                  rotateXAxis={true}\n                  xAxisTickIncrement={10}\n                  xAxisTickValuesNumeric={true}\n                  margin={{ top: 20, right: 3, bottom: 70, left: 30 }}\n                />\n              </>\n            )}\n\n            {exhibitionData.length > 0 && (\n              <>\n                <h2>Exhibitions</h2>\n\n                <SearchFacet\n                  facetValues={\n                    exhibitionData &&\n                    exhibitionData.map((exhibition) => {\n                      return {\n                        name: exhibition.name,\n                        value: exhibition.value,\n                        url: searchQuery.stringify({\n                          ...query,\n                          exhibitionIds: exhibition.id,\n                        }),\n                      };\n                    })\n                  }\n                />\n              </>\n            )}\n          </aside>\n        </Sidebar>\n      </div>\n    </div>\n  );\n};\n\ntype SearchFacetProps = {\n  facetValues?: {\n    name: string;\n    url: string;\n    value: number;\n    imageUrl?: string;\n  }[];\n  limit?: number;\n  showImage?: boolean;\n  showGender?: boolean;\n};\n\nconst SearchFacet = ({\n  facetValues = [],\n  limit = 5,\n  showImage = false,\n  showGender = false,\n}: SearchFacetProps) => {\n  const [newLimit, setNewLimit] = React.useState(limit);\n  const showButton = newLimit < facetValues.length;\n\n  return (\n    <div className={css.artistFacets}>\n      {facetValues.slice(0, newLimit).map((facetValue) => {\n        return (\n          <p key={facetValue.url}>\n            <Link as={facetValue.url}>\n              <a>\n                {showImage && (\n                  <ArtIndexArtistThumbnail\n                    file={facetValue.imageUrl}\n                    size=\"xs\"\n                    className={css.artistFacetThumbnail}\n                  />\n                )}\n\n                {showGender && (\n                  <div\n                    className={css.artistFacetGender}\n                    style={{\n                      ...(facetValue.name !== 'Unknown'\n                        ? {\n                            backgroundColor: `var(--colour-art-index-${facetValue.name.toLocaleLowerCase()})`,\n                          }\n                        : {}),\n                    }}\n                  ></div>\n                )}\n\n                {facetValue.name}\n              </a>\n            </Link>\n\n            <span className={css.artistFacetValue}>{facetValue.value}</span>\n          </p>\n        );\n      })}\n\n      {showButton && (\n        <TextButton\n          onClick={() => {\n            setNewLimit(newLimit + 10);\n          }}\n        >\n          Show more\n        </TextButton>\n      )}\n    </div>\n  );\n};\n\n// function isEmpty(obj) {\n//   return Object.keys(obj).length === 0 && obj.constructor === Object;\n// }\n\nexport default ArtIndexSearchPage;\n"]},"metadata":{},"sourceType":"module"}