{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexExhibition/ArtIndexExhibition.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as d3Array from 'd3-array';\nimport Link from '../Link';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\nimport { arrayToCounts } from '../../lib/art-index-utils';\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\nimport css from './ArtIndexExhibition.module.scss';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\n\nvar ArtIndexExhibition = function ArtIndexExhibition(_ref) {\n  _s();\n\n  var exhibition = _ref.exhibition,\n      className = _ref.className;\n\n  var _useArtIndex = useArtIndex(),\n      state = _useArtIndex.state; // TODO: Remove artists and use works to get artist thumbnail\n\n\n  var works = state.works,\n      artists = state.artists;\n  var exhibitionWorks = works.filter(function (work) {\n    return work.exhibitionId === exhibition.id;\n  });\n  var worksByArtist = Array.from(d3Array.group(exhibitionWorks, function (d) {\n    return d.artistId;\n  })).map(function (d) {\n    var name = d[1][0].artistFirstName && d[1][0].artistLastName ? \"\".concat(d[1][0].artistFirstName, \" \").concat(d[1][0].artistLastName) : 'Unknown artist';\n    var value = d[1].length;\n    return {\n      name: name,\n      value: value\n    };\n  }).sort(function (a, b) {\n    return b.value - a.value;\n  }).slice(0, 25);\n  var formatData = arrayToCounts(exhibitionWorks.map(function (d) {\n    return d.mediumFormat;\n  }));\n  var exhibitionArtists = Array.from(d3Array.group(exhibitionWorks, function (d) {\n    return d.artistId;\n  })).sort(function (a, b) {\n    var s;\n\n    if (a[1][0].artistLastName === b[1][0].artistLastName) {\n      s = 0;\n    } else {\n      s = a[1][0].artistLastName < b[1][0].artistLastName ? -1 : 1;\n    }\n\n    return s;\n  });\n  return __jsx(\"div\", {\n    className: [css.artIndexExhibition, className || ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    className: css.type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Exhibition\"), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, exhibition.name)), __jsx(\"div\", {\n    className: css.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, exhibition.place ? __jsx(\"div\", {\n    className: css.location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Location\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, exhibition.place)) : null, __jsx(\"div\", {\n    className: css.stats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(ArtIndexStatisticBlock, {\n    count: exhibition.worksTotal,\n    label: \"Works\",\n    url: \"/art-index/search/?exhibitionIds=\".concat(exhibition.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), __jsx(ArtIndexStatisticBlock, {\n    count: exhibitionArtists.length,\n    label: \"Artists\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.formats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Formats\"), __jsx(ArtIndexFormatBubbleChart, {\n    data: formatData,\n    height: 300,\n    letterWidth: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: css.worksByArtists,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Work count by Artist\"), __jsx(BarChart, {\n    data: worksByArtist,\n    rotateXAxis: true,\n    xAxisTickIncrement: 1,\n    id: 'works-by-artist',\n    height: 300,\n    margin: {\n      bottom: 140,\n      top: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Artists\"), exhibitionArtists.map(function (artistData) {\n    var _artists$find;\n\n    var id = artistData[0];\n    var artistWorks = artistData[1];\n    var artistName = artistWorks[0].artistFirstName || artistWorks[0].artistLastName ? \"\".concat(artistWorks[0].artistFirstName, \" \").concat(artistWorks[0].artistLastName) : 'Artist unknown';\n    var artistThumbnailUrl = (_artists$find = artists.find(function (a) {\n      return a.id === id;\n    })) === null || _artists$find === void 0 ? void 0 : _artists$find.thumbnailFile;\n    return __jsx(React.Fragment, {\n      key: artistName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      className: css.artist,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, artistName === 'Artist unknown' ? artistName : __jsx(Link, {\n      as: \"/art-index/artist/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      className: css.artistLink,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, __jsx(ArtIndexArtistThumbnail, {\n      file: artistThumbnailUrl,\n      size: \"xs\",\n      className: css.artistThumbnail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), ' ', artistName))), __jsx(\"ul\", {\n      className: css.artistWorks,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, artistWorks.map(function (artistWork) {\n      return __jsx(\"li\", {\n        key: artistWork.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, __jsx(Link, {\n        as: \"/art-index/work/\".concat(artistWork.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        className: css.artistWork,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      }, artistWork.title)), artistWork.mediumFormat && __jsx(\"span\", {\n        className: css.format,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }, \"(\".concat(artistWork.mediumFormat, \")\")));\n    })));\n  }));\n};\n\n_s(ArtIndexExhibition, \"IM4lHED7Ilr2aQoUjVlR3UGuePM=\", false, function () {\n  return [useArtIndex];\n});\n\n_c = ArtIndexExhibition;\nexport default ArtIndexExhibition;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexExhibition\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexExhibition/ArtIndexExhibition.tsx"],"names":["React","d3Array","Link","ArtIndexFormatBubbleChart","BarChart","ArtIndexStatisticBlock","arrayToCounts","useArtIndex","css","ArtIndexArtistThumbnail","ArtIndexExhibition","exhibition","className","state","works","artists","exhibitionWorks","filter","work","exhibitionId","id","worksByArtist","Array","from","group","d","artistId","map","name","artistFirstName","artistLastName","value","length","sort","a","b","slice","formatData","mediumFormat","exhibitionArtists","s","artIndexExhibition","join","type","content","place","location","stats","worksTotal","formats","worksByArtists","bottom","top","artistData","artistWorks","artistName","artistThumbnailUrl","find","thumbnailFile","artist","artistLink","artistThumbnail","artistWork","title","format"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,yBAAP,MAAsC,8BAAtC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AAGA,SAASC,WAAT,QAA4B,sCAA5B;AAEA,OAAOC,GAAP,MAAgB,kCAAhB;AACA,OAAOC,uBAAP,MAAoC,4BAApC;;AAOA,IAAMC,kBAAmC,GAAG,SAAtCA,kBAAsC,OAA+B;AAAA;;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,qBACvDL,WAAW,EAD4C;AAAA,MACjEM,KADiE,gBACjEA,KADiE,EAEzE;;;AAFyE,MAGjEC,KAHiE,GAG9CD,KAH8C,CAGjEC,KAHiE;AAAA,MAG1DC,OAH0D,GAG9CF,KAH8C,CAG1DE,OAH0D;AAIzE,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAN,CACtB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,YAAL,KAAsBR,UAAU,CAACS,EAA3C;AAAA,GADsB,CAAxB;AAGA,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,CACpBtB,OAAO,CAACuB,KAAR,CAAcR,eAAd,EAA+B,UAACS,CAAD;AAAA,WAAOA,CAAC,CAACC,QAAT;AAAA,GAA/B,CADoB,EAGnBC,GAHmB,CAGf,UAACF,CAAD,EAAO;AACV,QAAMG,IAAI,GACRH,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQI,eAAR,IAA2BJ,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQK,cAAnC,aACOL,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQI,eADf,cACkCJ,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQK,cAD1C,IAEI,gBAHN;AAIA,QAAMC,KAAK,GAAGN,CAAC,CAAC,CAAD,CAAD,CAAKO,MAAnB;AAEA,WAAO;AACLJ,MAAAA,IAAI,EAAJA,IADK;AAELG,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GAdmB,EAenBE,IAfmB,CAed,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUA,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAAtB;AAAA,GAfc,EAgBnBK,KAhBmB,CAgBb,CAhBa,EAgBV,EAhBU,CAAtB;AAkBA,MAAMC,UAAU,GAAG/B,aAAa,CAACU,eAAe,CAACW,GAAhB,CAAoB,UAACF,CAAD;AAAA,WAAOA,CAAC,CAACa,YAAT;AAAA,GAApB,CAAD,CAAhC;AAEA,MAAMC,iBAAiB,GAAGjB,KAAK,CAACC,IAAN,CACxBtB,OAAO,CAACuB,KAAR,CAAcR,eAAd,EAA+B,UAACS,CAAD;AAAA,WAAOA,CAAC,CAACC,QAAT;AAAA,GAA/B,CADwB,EAExBO,IAFwB,CAEnB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACf,QAAIK,CAAJ;;AACA,QAAIN,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQJ,cAAR,KAA2BK,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQL,cAAvC,EAAuD;AACrDU,MAAAA,CAAC,GAAG,CAAJ;AACD,KAFD,MAEO;AACLA,MAAAA,CAAC,GAAGN,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQJ,cAAR,GAAyBK,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,EAAQL,cAAjC,GAAkD,CAAC,CAAnD,GAAuD,CAA3D;AACD;;AACD,WAAOU,CAAP;AACD,GAVyB,CAA1B;AAYA,SACE;AAAK,IAAA,SAAS,EAAE,CAAChC,GAAG,CAACiC,kBAAL,EAAyB7B,SAAS,IAAI,EAAtC,EAA0C8B,IAA1C,CAA+C,GAA/C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAElC,GAAG,CAACmC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhC,UAAU,CAACiB,IAAhB,CAFF,CADF,EAME;AAAK,IAAA,SAAS,EAAEpB,GAAG,CAACoC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,UAAU,CAACkC,KAAX,GACC;AAAK,IAAA,SAAS,EAAErC,GAAG,CAACsC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInC,UAAU,CAACkC,KAAf,CAFF,CADD,GAKG,IANN,EAQE;AAAK,IAAA,SAAS,EAAErC,GAAG,CAACuC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD;AACE,IAAA,KAAK,EAAEpC,UAAU,CAACqC,UADpB;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,GAAG,6CAAsCrC,UAAU,CAACS,EAAjD,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,sBAAD;AACE,IAAA,KAAK,EAAEmB,iBAAiB,CAACP,MAD3B;AAEE,IAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,EAoBE;AAAK,IAAA,SAAS,EAAExB,GAAG,CAACyC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,yBAAD;AACE,IAAA,IAAI,EAAEZ,UADR;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,WAAW,EAAE,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CApBF,EA6BE;AAAK,IAAA,SAAS,EAAE7B,GAAG,CAAC0C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,QAAD;AACE,IAAA,IAAI,EAAE7B,aADR;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,kBAAkB,EAAE,CAHtB;AAIE,IAAA,EAAE,EAAE,iBAJN;AAKE,IAAA,MAAM,EAAE,GALV;AAME,IAAA,MAAM,EAAE;AACN8B,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,GAAG,EAAE;AAFC,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA7BF,CANF,EAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnDF,EAqDGb,iBAAiB,CAACZ,GAAlB,CAAsB,UAAC0B,UAAD,EAAgB;AAAA;;AACrC,QAAMjC,EAAE,GAAGiC,UAAU,CAAC,CAAD,CAArB;AACA,QAAMC,WAAW,GAAGD,UAAU,CAAC,CAAD,CAA9B;AACA,QAAME,UAAU,GACdD,WAAW,CAAC,CAAD,CAAX,CAAezB,eAAf,IAAkCyB,WAAW,CAAC,CAAD,CAAX,CAAexB,cAAjD,aACOwB,WAAW,CAAC,CAAD,CAAX,CAAezB,eADtB,cACyCyB,WAAW,CAAC,CAAD,CAAX,CAAexB,cADxD,IAEI,gBAHN;AAIA,QAAM0B,kBAAkB,oBAAGzC,OAAO,CAAC0C,IAAR,CAAa,UAACvB,CAAD;AAAA,aAAOA,CAAC,CAACd,EAAF,KAASA,EAAhB;AAAA,KAAb,CAAH,kDAAG,cACvBsC,aADJ;AAGA,WACE,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEH,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAE/C,GAAG,CAACmD,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,UAAU,KAAK,gBAAf,GACCA,UADD,GAGC,MAAC,IAAD;AAAM,MAAA,EAAE,8BAAuBnC,EAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEZ,GAAG,CAACoD,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,uBAAD;AACE,MAAA,IAAI,EAAEJ,kBADR;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,SAAS,EAAEhD,GAAG,CAACqD,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKK,GALL,EAMGN,UANH,CADF,CAJJ,CADF,EAkBE;AAAI,MAAA,SAAS,EAAE/C,GAAG,CAAC8C,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WAAW,CAAC3B,GAAZ,CAAgB,UAACmC,UAAD,EAAgB;AAC/B,aACE;AAAI,QAAA,GAAG,EAAEA,UAAU,CAAC1C,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,4BAAqB0C,UAAU,CAAC1C,EAAhC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAEZ,GAAG,CAACsD,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BA,UAAU,CAACC,KAA1C,CADF,CADF,EAIGD,UAAU,CAACxB,YAAX,IACC;AACE,QAAA,SAAS,EAAE9B,GAAG,CAACwD,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEMF,UAAU,CAACxB,YAFjB,OALJ,CADF;AAYD,KAbA,CADH,CAlBF,CADF;AAqCD,GA/CA,CArDH,CADF;AAwGD,CA/ID;;GAAM5B,kB;UACcH,W;;;KADdG,kB;AAiJN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport * as d3Array from 'd3-array';\n\nimport Link from '../Link';\nimport ArtIndexFormatBubbleChart from '../ArtIndexFormatBubbleChart';\nimport BarChart from '../BarChart';\nimport ArtIndexStatisticBlock from '../ArtIndexStatisticBlock';\n\nimport { arrayToCounts } from '../../lib/art-index-utils';\nimport { ArtIndexExhibitionType } from '../../types/art-index-types';\n\nimport { useArtIndex } from '../../lib/contexts/art-index-context';\n\nimport css from './ArtIndexExhibition.module.scss';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\n\ntype Props = {\n  exhibition: ArtIndexExhibitionType;\n  className?: string;\n};\n\nconst ArtIndexExhibition: React.FC<Props> = ({ exhibition, className }) => {\n  const { state } = useArtIndex();\n  // TODO: Remove artists and use works to get artist thumbnail\n  const { works, artists } = state;\n  const exhibitionWorks = works.filter(\n    (work) => work.exhibitionId === exhibition.id,\n  );\n  const worksByArtist = Array.from(\n    d3Array.group(exhibitionWorks, (d) => d.artistId),\n  )\n    .map((d) => {\n      const name =\n        d[1][0].artistFirstName && d[1][0].artistLastName\n          ? `${d[1][0].artistFirstName} ${d[1][0].artistLastName}`\n          : 'Unknown artist';\n      const value = d[1].length;\n\n      return {\n        name,\n        value,\n      };\n    })\n    .sort((a, b) => b.value - a.value)\n    .slice(0, 25);\n\n  const formatData = arrayToCounts(exhibitionWorks.map((d) => d.mediumFormat));\n\n  const exhibitionArtists = Array.from(\n    d3Array.group(exhibitionWorks, (d) => d.artistId),\n  ).sort((a, b) => {\n    let s;\n    if (a[1][0].artistLastName === b[1][0].artistLastName) {\n      s = 0;\n    } else {\n      s = a[1][0].artistLastName < b[1][0].artistLastName ? -1 : 1;\n    }\n    return s;\n  });\n\n  return (\n    <div className={[css.artIndexExhibition, className || ''].join(' ')}>\n      <header>\n        <p className={css.type}>Exhibition</p>\n        <h1>{exhibition.name}</h1>\n      </header>\n\n      <div className={css.content}>\n        {exhibition.place ? (\n          <div className={css.location}>\n            <h2>Location</h2>\n            <p>{exhibition.place}</p>\n          </div>\n        ) : null}\n\n        <div className={css.stats}>\n          <ArtIndexStatisticBlock\n            count={exhibition.worksTotal}\n            label=\"Works\"\n            url={`/art-index/search/?exhibitionIds=${exhibition.id}`}\n          />\n          <ArtIndexStatisticBlock\n            count={exhibitionArtists.length}\n            label=\"Artists\"\n          />\n        </div>\n\n        <div className={css.formats}>\n          <h2>Formats</h2>\n          <ArtIndexFormatBubbleChart\n            data={formatData}\n            height={300}\n            letterWidth={3}\n          />\n        </div>\n\n        <div className={css.worksByArtists}>\n          <h2>Work count by Artist</h2>\n          <BarChart\n            data={worksByArtist}\n            rotateXAxis={true}\n            xAxisTickIncrement={1}\n            id={'works-by-artist'}\n            height={300}\n            margin={{\n              bottom: 140,\n              top: 40,\n            }}\n          />\n        </div>\n      </div>\n\n      <h2>Artists</h2>\n\n      {exhibitionArtists.map((artistData) => {\n        const id = artistData[0];\n        const artistWorks = artistData[1];\n        const artistName =\n          artistWorks[0].artistFirstName || artistWorks[0].artistLastName\n            ? `${artistWorks[0].artistFirstName} ${artistWorks[0].artistLastName}`\n            : 'Artist unknown';\n        const artistThumbnailUrl = artists.find((a) => a.id === id)\n          ?.thumbnailFile;\n\n        return (\n          <React.Fragment key={artistName}>\n            <h3 className={css.artist}>\n              {artistName === 'Artist unknown' ? (\n                artistName\n              ) : (\n                <Link as={`/art-index/artist/${id}`}>\n                  <a className={css.artistLink}>\n                    <ArtIndexArtistThumbnail\n                      file={artistThumbnailUrl}\n                      size=\"xs\"\n                      className={css.artistThumbnail}\n                    />{' '}\n                    {artistName}\n                  </a>\n                </Link>\n              )}\n            </h3>\n\n            <ul className={css.artistWorks}>\n              {artistWorks.map((artistWork) => {\n                return (\n                  <li key={artistWork.id}>\n                    <Link as={`/art-index/work/${artistWork.id}`}>\n                      <a className={css.artistWork}>{artistWork.title}</a>\n                    </Link>\n                    {artistWork.mediumFormat && (\n                      <span\n                        className={css.format}\n                      >{`(${artistWork.mediumFormat})`}</span>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ArtIndexExhibition;\n"]},"metadata":{},"sourceType":"module"}