{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexWork/ArtIndexWork.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from '../Link';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport css from './ArtIndexWork.module.scss';\n\nvar ArtIndexWork = function ArtIndexWork(_ref) {\n  var work = _ref.work,\n      className = _ref.className;\n\n  if (!work) {\n    return null;\n  }\n\n  var formatPrice = function formatPrice(p) {\n    if (!p) {\n      return '';\n    }\n\n    var pounds = Math.floor(p);\n    var allPence = Math.round((p - pounds) * 240);\n    var shillings = Math.floor(allPence / 12);\n    var pence = allPence - shillings * 12;\n    return \"\\xA3\".concat(pounds, \" \").concat(shillings, \"s \").concat(pence, \"d\");\n  };\n\n  return __jsx(\"div\", {\n    className: [css.artIndexWork, className || ''].join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: css.mediumFormat,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Work / \", __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }, work.mediumFormat)), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, work.title), __jsx(\"div\", {\n    className: css.artistNameSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, work.artistThumbnailFile && __jsx(ArtIndexArtistThumbnail, {\n    size: 'sm',\n    file: work.artistThumbnailFile,\n    className: css.artistImageCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Artist\"), __jsx(\"p\", {\n    className: css.artistName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    as: \"/art-index/artist/\".concat(work.artistId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, work.artistFirstName, \" \", work.artistLastName))))), work.imageUrl && __jsx(\"img\", {\n    className: css.workImage,\n    alt: work.title,\n    src: work.imageUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Exhibition\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    as: \"/art-index/exhibition/\".concat(work.exhibitionId),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, work.exhibitionName))), __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Catalogue\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, work.source), __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Year\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, work.exhibitionYear), work.notes && !work.notes.includes('£') && __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Notes\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, work.notes && work.notes.replace(/Â/g, ''))), work.price && __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Price\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, formatPrice(work.price))), work.collectionUrl && __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: css.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"collection record\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: work.collectionUrl,\n    rel: 'noopener noreferrer',\n    target: '_blank',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, work.collectionUrl))));\n};\n\n_c = ArtIndexWork;\nexport default ArtIndexWork;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtIndexWork\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/ArtIndexWork/ArtIndexWork.tsx"],"names":["React","Link","ArtIndexArtistThumbnail","css","ArtIndexWork","work","className","formatPrice","p","pounds","Math","floor","allPence","round","shillings","pence","artIndexWork","join","mediumFormat","title","artistNameSection","artistThumbnailFile","artistImageCircle","label","artistName","artistId","artistFirstName","artistLastName","imageUrl","workImage","exhibitionId","exhibitionName","source","exhibitionYear","notes","includes","replace","price","collectionUrl"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAOC,GAAP,MAAgB,4BAAhB;;AAOA,IAAMC,YAA6B,GAAG,SAAhCA,YAAgC,OAAyB;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAC7D,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,MAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzB,QAAI,CAACA,CAAL,EAAQ;AACN,aAAO,EAAP;AACD;;AACD,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAf;AACA,QAAMI,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAW,CAACL,CAAC,GAAGC,MAAL,IAAe,GAA1B,CAAjB;AACA,QAAMK,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWC,QAAQ,GAAG,EAAtB,CAAlB;AACA,QAAMG,KAAK,GAAGH,QAAQ,GAAGE,SAAS,GAAG,EAArC;AACA,yBAAWL,MAAX,cAAqBK,SAArB,eAAmCC,KAAnC;AACD,GATD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAE,CAACZ,GAAG,CAACa,YAAL,EAAmBV,SAAS,IAAI,EAAhC,EAAoCW,IAApC,CAAyC,GAAzC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEd,GAAG,CAACe,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASb,IAAI,CAACa,YAAd,CADT,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,KAAV,CAJF,EAKE;AAAK,IAAA,SAAS,EAAEhB,GAAG,CAACiB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,CAACgB,mBAAL,IACC,MAAC,uBAAD;AACE,IAAA,IAAI,EAAE,IADR;AAEE,IAAA,IAAI,EAAEhB,IAAI,CAACgB,mBAFb;AAGE,IAAA,SAAS,EAAElB,GAAG,CAACmB,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEnB,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAG,IAAA,SAAS,EAAEpB,GAAG,CAACqB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,8BAAuBnB,IAAI,CAACoB,QAA5B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,IAAI,CAACqB,eADR,OAC0BrB,IAAI,CAACsB,cAD/B,CADF,CADF,CAFF,CARF,CALF,EAwBGtB,IAAI,CAACuB,QAAL,IACC;AAAK,IAAA,SAAS,EAAEzB,GAAG,CAAC0B,SAApB;AAA+B,IAAA,GAAG,EAAExB,IAAI,CAACc,KAAzC;AAAgD,IAAA,GAAG,EAAEd,IAAI,CAACuB,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA2BE;AAAG,IAAA,SAAS,EAAEzB,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,kCAA2BlB,IAAI,CAACyB,YAAhC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIzB,IAAI,CAAC0B,cAAT,CADF,CADF,CA5BF,EAiCE;AAAG,IAAA,SAAS,EAAE5B,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjCF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,IAAI,CAAC2B,MAAT,CAlCF,EAmCE;AAAG,IAAA,SAAS,EAAE7B,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,IAAI,CAAC4B,cAAT,CApCF,EAqCG5B,IAAI,CAAC6B,KAAL,IAAc,CAAC7B,IAAI,CAAC6B,KAAL,CAAWC,QAAX,CAAoB,GAApB,CAAf,IACC,4BACE;AAAG,IAAA,SAAS,EAAEhC,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,IAAI,CAAC6B,KAAL,IAAc7B,IAAI,CAAC6B,KAAL,CAAWE,OAAX,CAAmB,IAAnB,EAAyB,EAAzB,CAAlB,CAFF,CAtCJ,EA2CG/B,IAAI,CAACgC,KAAL,IACC,4BACE;AAAG,IAAA,SAAS,EAAElC,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,WAAW,CAACF,IAAI,CAACgC,KAAN,CAAf,CAFF,CA5CJ,EAiDGhC,IAAI,CAACiC,aAAL,IACC,4BACE;AAAG,IAAA,SAAS,EAAEnC,GAAG,CAACoB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAElB,IAAI,CAACiC,aADb;AAEE,IAAA,GAAG,EAAE,qBAFP;AAGE,IAAA,MAAM,EAAE,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGjC,IAAI,CAACiC,aALR,CADF,CAFF,CAlDJ,CADF;AAkED,CAlFD;;KAAMlC,Y;AAoFN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { ArtIndexWorkType } from '../../types/art-index-types';\nimport Link from '../Link';\nimport ArtIndexArtistThumbnail from '../ArtIndexArtistThumbnail';\nimport css from './ArtIndexWork.module.scss';\n\ntype Props = {\n  work: ArtIndexWorkType;\n  className?: string;\n};\n\nconst ArtIndexWork: React.FC<Props> = ({ work, className }) => {\n  if (!work) {\n    return null;\n  }\n\n  const formatPrice = (p) => {\n    if (!p) {\n      return '';\n    }\n    const pounds = Math.floor(p);\n    const allPence = Math.round((p - pounds) * 240);\n    const shillings = Math.floor(allPence / 12);\n    const pence = allPence - shillings * 12;\n    return `£${pounds} ${shillings}s ${pence}d`;\n  };\n\n  return (\n    <div className={[css.artIndexWork, className || ''].join(' ')}>\n      <p className={css.mediumFormat}>\n        Work / <strong>{work.mediumFormat}</strong>\n      </p>\n      <h1>{work.title}</h1>\n      <div className={css.artistNameSection}>\n        {work.artistThumbnailFile && (\n          <ArtIndexArtistThumbnail\n            size={'sm'}\n            file={work.artistThumbnailFile}\n            className={css.artistImageCircle}\n          />\n        )}\n        <div>\n          <p className={css.label}>Artist</p>\n          <p className={css.artistName}>\n            <Link as={`/art-index/artist/${work.artistId}`}>\n              <a>\n                {work.artistFirstName} {work.artistLastName}\n              </a>\n            </Link>\n          </p>\n        </div>\n      </div>\n      {work.imageUrl && (\n        <img className={css.workImage} alt={work.title} src={work.imageUrl} />\n      )}\n      <p className={css.label}>Exhibition</p>\n      <p>\n        <Link as={`/art-index/exhibition/${work.exhibitionId}`}>\n          <a>{work.exhibitionName}</a>\n        </Link>\n      </p>\n      <p className={css.label}>Catalogue</p>\n      <p>{work.source}</p>\n      <p className={css.label}>Year</p>\n      <p>{work.exhibitionYear}</p>\n      {work.notes && !work.notes.includes('£') && (\n        <>\n          <p className={css.label}>Notes</p>\n          <p>{work.notes && work.notes.replace(/Â/g, '')}</p>\n        </>\n      )}\n      {work.price && (\n        <>\n          <p className={css.label}>Price</p>\n          <p>{formatPrice(work.price)}</p>\n        </>\n      )}\n      {work.collectionUrl && (\n        <>\n          <p className={css.label}>collection record</p>\n          <p>\n            <a\n              href={work.collectionUrl}\n              rel={'noopener noreferrer'}\n              target={'_blank'}\n            >\n              {work.collectionUrl}\n            </a>\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ArtIndexWork;\n"]},"metadata":{},"sourceType":"module"}