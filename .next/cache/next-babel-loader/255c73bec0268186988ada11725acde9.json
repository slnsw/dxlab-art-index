{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/BarChart/BarChart.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport render from 'd3-render';\nimport useDimensions from '../../lib/hooks/use-dimensions';\nimport css from './BarChart.module.scss';\n/* ========\n\nThis component creates a bar chart.\n\nData is expected to be an array of objects, each\ncontaining 'name' for each bar and 'value' for its height.\n\n========= */\n\nvar defaultMargin = {\n  top: 10,\n  left: 40,\n  right: 10,\n  bottom: 20\n};\n\nvar BarChart = function BarChart(_ref) {\n  _s();\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 200 : _ref$height,\n      _ref$margin = _ref.margin,\n      newMargin = _ref$margin === void 0 ? defaultMargin : _ref$margin,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'vertical' : _ref$direction,\n      _ref$rotateXAxis = _ref.rotateXAxis,\n      rotateXAxis = _ref$rotateXAxis === void 0 ? false : _ref$rotateXAxis,\n      _ref$showValues = _ref.showValues,\n      showValues = _ref$showValues === void 0 ? false : _ref$showValues,\n      renderBar = _ref.renderBar,\n      _ref$xAxisTickIncreme = _ref.xAxisTickIncrement,\n      xAxisTickIncrement = _ref$xAxisTickIncreme === void 0 ? 1 : _ref$xAxisTickIncreme,\n      _ref$xAxisTickValuesN = _ref.xAxisTickValuesNumeric,\n      xAxisTickValuesNumeric = _ref$xAxisTickValuesN === void 0 ? false : _ref$xAxisTickValuesN,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'bar-chart' : _ref$id,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"data\", \"height\", \"margin\", \"direction\", \"rotateXAxis\", \"showValues\", \"renderBar\", \"xAxisTickIncrement\", \"xAxisTickValuesNumeric\", \"id\", \"className\"]);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hoverIndex = _React$useState2[0],\n      setHoverIndex = _React$useState2[1];\n\n  var _useDimensions = useDimensions(),\n      _useDimensions2 = _slicedToArray(_useDimensions, 3),\n      svgRef = _useDimensions2[0],\n      dimensions = _useDimensions2[1],\n      svgNode = _useDimensions2[2];\n\n  var width = dimensions.width;\n\n  var margin = _objectSpread(_objectSpread({}, defaultMargin), newMargin);\n\n  React.useEffect(function () {\n    if (svgNode && data.length > 0 && width) {\n      var x;\n      var y;\n      var xAxis;\n      var yAxis;\n      var maximum = d3.max(data, function (d) {\n        return d.value;\n      });\n      var svg = d3.select(svgNode);\n\n      if (direction === 'vertical') {\n        x = d3.scaleBand().domain(d3.range(data.length)).range([margin.left, width - margin.right]).padding(0.1);\n        y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n          return d.value;\n        })]).nice().range([height - margin.bottom, margin.top]);\n        xAxis = d3.axisBottom(x).tickFormat(function (i) {\n          return data[i].name;\n        }).tickSizeOuter(0);\n\n        yAxis = function yAxis(g) {\n          return g.attr('transform', \"translate(\".concat(margin.left + 1, \",0)\")).call(d3.axisLeft(y).ticks(null, 's')).call(function (selection) {\n            return selection.select('.domain').remove();\n          });\n        };\n\n        render(svg, [{\n          append: 'g',\n          fill: 'var(--colour-primary)',\n          children: data.map(function (d, i) {\n            return {\n              append: 'g',\n              children: [_objectSpread({\n                append: 'rect',\n                x: x(i),\n                y: y(d.value),\n                width: x.bandwidth(),\n                height: y(0) - y(d.value),\n                onMouseOver: function onMouseOver() {\n                  setHoverIndex(i);\n                },\n                onMouseOut: function onMouseOut() {\n                  setHoverIndex(null);\n                }\n              }, typeof renderBar === 'function' ? renderBar(d, i) : {})]\n            };\n          })\n        }, {\n          // doing values in separate loop so they are 'on top'\n          append: 'g',\n          children: data.map(function (d, i) {\n            var isHovered = i === hoverIndex;\n            return {\n              append: 'g',\n              children: [{\n                append: 'text',\n                \"class\": 'values',\n                key: \"\".concat(isHovered),\n                text: showValues || isHovered ? d.value : '',\n                x: x(i) + x.bandwidth() / 2,\n                y: y(d.value) - 6,\n                style: {\n                  fill: 'white',\n                  textAnchor: 'middle'\n                }\n              }]\n            };\n          })\n        }, {\n          append: 'g',\n          \"class\": 'x-axis',\n          // key: width,\n          key: Date.now(),\n          transform: \"translate(0, \".concat(height - margin.bottom, \")\"),\n          call: xAxis\n        }, {\n          append: 'g',\n          call: yAxis\n        }]);\n\n        if (rotateXAxis) {\n          d3.selectAll(\"#\".concat(id, \" .x-axis text\")).style('text-anchor', 'end').attr('dx', '-1em').attr('dy', '-.5em').attr('transform', 'rotate(-90)');\n        }\n\n        if (xAxisTickIncrement) {\n          d3.selectAll(\"#\".concat(id, \" .x-axis .tick\")).attr('visibility', function (t) {\n            var _data$t;\n\n            var tickVal = xAxisTickValuesNumeric ? parseInt((_data$t = data[t]) === null || _data$t === void 0 ? void 0 : _data$t.name, 10) : t;\n            return tickVal % xAxisTickIncrement === 0 || t === data.length - 1 || t === 0 ? 'visible' : 'hidden';\n          });\n        }\n      } else {\n        y = d3.scaleOrdinal().domain(data.map(function (d) {\n          return d.name;\n        })).range(data.map(function (_, i) {\n          return (height - margin.top - margin.bottom) / data.length * i + margin.top;\n        }));\n        x = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n          return d.value;\n        })]).range([margin.left, width - margin.right]);\n        xAxis = d3.axisBottom(x);\n\n        yAxis = function yAxis(g) {\n          return g.attr('transform', \"translate(\".concat(margin.left, \",0)\")).call(d3.axisLeft(y).ticks(null, 's'));\n        };\n\n        render(svg, [{\n          append: 'g',\n          fill: 'var(--colour-primary)',\n          children: data.map(function (d, i) {\n            return {\n              append: 'rect',\n              x: margin.left + 1,\n              y: (height - margin.top - margin.bottom) / data.length * i + margin.top / 2,\n              width: d.value / maximum * (width - margin.left - margin.right),\n              height: (height - margin.top - margin.bottom) / data.length - 1\n            };\n          })\n        }, {\n          append: 'g',\n          key: width,\n          transform: \"translate(0, \".concat(height - margin.bottom, \")\"),\n          call: xAxis\n        }, {\n          append: 'g',\n          call: yAxis\n        }]);\n      }\n    }\n  }, [svgNode, data, width, height, margin, id, showValues, direction, rotateXAxis, xAxisTickIncrement, xAxisTickValuesNumeric, hoverIndex, renderBar]);\n  return __jsx(\"svg\", _extends({\n    ref: svgRef,\n    width: width,\n    height: height,\n    id: id,\n    className: [css.barChart, className || ''].join(' ')\n  }, restProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(BarChart, \"9zFrSdaihg5pcjD7JUKJ9hFmRP8=\", false, function () {\n  return [useDimensions];\n});\n\n_c = BarChart;\nBarChart.propTypes = {\n  className: PropTypes.string\n};\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/BarChart/BarChart.tsx"],"names":["React","PropTypes","d3","render","useDimensions","css","defaultMargin","top","left","right","bottom","BarChart","data","height","margin","newMargin","direction","rotateXAxis","showValues","renderBar","xAxisTickIncrement","xAxisTickValuesNumeric","id","className","restProps","useState","hoverIndex","setHoverIndex","svgRef","dimensions","svgNode","width","useEffect","length","x","y","xAxis","yAxis","maximum","max","d","value","svg","select","scaleBand","domain","range","padding","scaleLinear","nice","axisBottom","tickFormat","i","name","tickSizeOuter","g","attr","call","axisLeft","ticks","selection","remove","append","fill","children","map","bandwidth","onMouseOver","onMouseOut","isHovered","key","text","style","textAnchor","Date","now","transform","selectAll","t","tickVal","parseInt","scaleOrdinal","_","barChart","join","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport render from 'd3-render';\n\nimport useDimensions from '../../lib/hooks/use-dimensions';\n\nimport css from './BarChart.module.scss';\n\n/* ========\n\nThis component creates a bar chart.\n\nData is expected to be an array of objects, each\ncontaining 'name' for each bar and 'value' for its height.\n\n========= */\n\ntype Props = {\n  data: {\n    name: string;\n    value: number;\n  }[];\n  height?: number;\n  margin?: {\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n  };\n  direction?: 'vertical' | 'horizontal';\n  rotateXAxis?: boolean;\n  showValues?: boolean;\n  renderBar?: Function;\n  xAxisTickIncrement?: number; // if set to say N, axis shows only every Nth tick:\n  // eg if n=5 it will show 1955, 1960, 1965 etc BUT it assumes the values for the\n  // tick names are NUMERIC (even though they come in a strings) so this may break\n  // if they are like states or days of the week etc - thus i've added the following prop\n  xAxisTickValuesNumeric?: boolean; // defaults to FALSE so values of tick labels are not\n  // attempted to be turned into numbers. Actual Nth ticks are shown if xAxisTickIncrement set.\n  // In the case where they are numeric (eg years) set this to true and years which are multiples\n  // of xAxisTickIncrement are only shown. First and last on axis are always shown.\n  id?: string;\n  className?: string;\n};\n\nconst defaultMargin = {\n  top: 10,\n  left: 40,\n  right: 10,\n  bottom: 20,\n};\n\nconst BarChart: React.FC<Props> = ({\n  data = [],\n  // width: propWidth,\n  height = 200,\n  margin: newMargin = defaultMargin,\n  direction = 'vertical',\n  rotateXAxis = false,\n  showValues = false,\n  renderBar,\n  xAxisTickIncrement = 1,\n  xAxisTickValuesNumeric = false,\n  id = 'bar-chart',\n  className,\n  ...restProps\n}) => {\n  const [hoverIndex, setHoverIndex] = React.useState(null);\n  const [svgRef, dimensions, svgNode] = useDimensions();\n  const { width } = dimensions;\n  const margin = {\n    ...defaultMargin,\n    ...newMargin,\n  };\n\n  React.useEffect(() => {\n    if (svgNode && data.length > 0 && width) {\n      let x;\n      let y;\n      let xAxis;\n      let yAxis;\n      const maximum = d3.max(data, (d) => d.value);\n      const svg = d3.select(svgNode);\n\n      if (direction === 'vertical') {\n        x = d3\n          .scaleBand()\n          .domain(d3.range(data.length))\n          .range([margin.left, width - margin.right])\n          .padding(0.1);\n\n        y = d3\n          .scaleLinear()\n          .domain([0, d3.max(data, (d) => d.value)])\n          .nice()\n          .range([height - margin.bottom, margin.top]);\n\n        xAxis = d3\n          .axisBottom(x)\n          .tickFormat((i) => data[i].name)\n          .tickSizeOuter(0);\n\n        yAxis = (g) =>\n          g\n            .attr('transform', `translate(${margin.left + 1},0)`)\n            .call(d3.axisLeft(y).ticks(null, 's'))\n            .call((selection) => selection.select('.domain').remove());\n\n        render(svg, [\n          {\n            append: 'g',\n            fill: 'var(--colour-primary)',\n            children: data.map((d, i) => {\n              return {\n                append: 'g',\n                children: [\n                  {\n                    append: 'rect',\n                    x: x(i),\n                    y: y(d.value),\n                    width: x.bandwidth(),\n                    height: y(0) - y(d.value),\n                    onMouseOver: () => {\n                      setHoverIndex(i);\n                    },\n                    onMouseOut: () => {\n                      setHoverIndex(null);\n                    },\n                    ...(typeof renderBar === 'function' ? renderBar(d, i) : {}),\n                  },\n                ],\n              };\n            }),\n          },\n          {\n            // doing values in separate loop so they are 'on top'\n            append: 'g',\n            children: data.map((d, i) => {\n              const isHovered = i === hoverIndex;\n              return {\n                append: 'g',\n                children: [\n                  {\n                    append: 'text',\n                    class: 'values',\n                    key: `${isHovered}`,\n                    text: showValues || isHovered ? d.value : '',\n                    x: x(i) + x.bandwidth() / 2,\n                    y: y(d.value) - 6,\n                    style: { fill: 'white', textAnchor: 'middle' },\n                  },\n                ],\n              };\n            }),\n          },\n          {\n            append: 'g',\n            class: 'x-axis',\n            // key: width,\n            key: Date.now(),\n            transform: `translate(0, ${height - margin.bottom})`,\n            call: xAxis,\n          },\n          {\n            append: 'g',\n            call: yAxis,\n          },\n        ]);\n\n        if (rotateXAxis) {\n          d3.selectAll(`#${id} .x-axis text`)\n            .style('text-anchor', 'end')\n            .attr('dx', '-1em')\n            .attr('dy', '-.5em')\n            .attr('transform', 'rotate(-90)');\n        }\n        if (xAxisTickIncrement) {\n          d3.selectAll(`#${id} .x-axis .tick`).attr('visibility', (t) => {\n            const tickVal = xAxisTickValuesNumeric\n              ? parseInt(data[t]?.name, 10)\n              : t;\n            return tickVal % xAxisTickIncrement === 0 ||\n              t === data.length - 1 ||\n              t === 0\n              ? 'visible'\n              : 'hidden';\n          });\n        }\n      } else {\n        y = d3\n          .scaleOrdinal()\n          .domain(data.map((d) => d.name))\n          .range(\n            data.map(\n              (_, i) =>\n                ((height - margin.top - margin.bottom) / data.length) * i +\n                margin.top,\n            ),\n          );\n\n        x = d3\n          .scaleLinear()\n          .domain([0, d3.max(data, (d) => d.value)])\n          .range([margin.left, width - margin.right]);\n\n        xAxis = d3.axisBottom(x);\n\n        yAxis = (g) =>\n          g\n            .attr('transform', `translate(${margin.left},0)`)\n            .call(d3.axisLeft(y).ticks(null, 's'));\n\n        render(svg, [\n          {\n            append: 'g',\n            fill: 'var(--colour-primary)',\n            children: data.map((d, i) => {\n              return {\n                append: 'rect',\n                x: margin.left + 1,\n                y:\n                  ((height - margin.top - margin.bottom) / data.length) * i +\n                  margin.top / 2,\n                width:\n                  (d.value / maximum) * (width - margin.left - margin.right),\n                height: (height - margin.top - margin.bottom) / data.length - 1,\n              };\n            }),\n          },\n          {\n            append: 'g',\n            key: width,\n            transform: `translate(0, ${height - margin.bottom})`,\n            call: xAxis,\n          },\n          {\n            append: 'g',\n            call: yAxis,\n          },\n        ]);\n      }\n    }\n  }, [\n    svgNode,\n    data,\n    width,\n    height,\n    margin,\n    id,\n    showValues,\n    direction,\n    rotateXAxis,\n    xAxisTickIncrement,\n    xAxisTickValuesNumeric,\n    hoverIndex,\n    renderBar,\n  ]);\n\n  return (\n    <svg\n      ref={svgRef}\n      width={width}\n      height={height}\n      id={id}\n      className={[css.barChart, className || ''].join(' ')}\n      {...restProps}\n    />\n  );\n};\n\nBarChart.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}