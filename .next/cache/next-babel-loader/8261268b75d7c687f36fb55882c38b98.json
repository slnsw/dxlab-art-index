{"ast":null,"code":"var _jsxFileName = \"/Users/luked/Documents/slnsw/dxlab-art-index/components/Progress/Progress.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport { NProgress } from '@tanem/react-nprogress';\nimport css from './Progress.module.scss';\n\nconst Progress = ({\n  className,\n  loadingKey = 'n-progress'\n}) => {\n  const [isRouteChanging, setIsRouteChanging] = React.useState(false);\n  React.useEffect(() => {\n    Router.events.on('routeChangeStart', routeChangeStart);\n    Router.events.on('routeChangeComplete', routeChangeEnd);\n    Router.events.on('routeChangeError', routeChangeEnd);\n    return function cleanUp() {\n      Router.events.off('routeChangeStart', routeChangeStart);\n      Router.events.off('routeChangeComplete', routeChangeEnd);\n      Router.events.off('routeChangeError', routeChangeEnd);\n    };\n  }, []);\n\n  const routeChangeStart = () => {\n    setIsRouteChanging(true);\n  };\n\n  const routeChangeEnd = () => {\n    setIsRouteChanging(false);\n  };\n\n  return __jsx(NProgress, {\n    isAnimating: isRouteChanging,\n    key: loadingKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, ({\n    isFinished,\n    progress,\n    animationDuration\n  }) => __jsx(\"div\", {\n    className: [className || ''].join(' '),\n    style: {\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: css.bar,\n    style: {\n      marginLeft: `${(-1 + progress) * 100}%`,\n      transition: `margin-left ${animationDuration}ms linear`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })));\n};\n\nProgress.propTypes = {\n  className: PropTypes.string\n};\nexport default Progress;","map":{"version":3,"sources":["/Users/luked/Documents/slnsw/dxlab-art-index/components/Progress/Progress.tsx"],"names":["React","Router","PropTypes","NProgress","css","Progress","className","loadingKey","isRouteChanging","setIsRouteChanging","useState","useEffect","events","on","routeChangeStart","routeChangeEnd","cleanUp","off","isFinished","progress","animationDuration","join","opacity","pointerEvents","transition","bar","marginLeft","propTypes","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,OAAOC,GAAP,MAAgB,wBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAU,GAAG;AAA1B,CAAD,KAA8C;AAC7D,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9C;AAEAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBV,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCC,gBAArC;AACAb,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCE,cAAxC;AACAd,IAAAA,MAAM,CAACW,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCE,cAArC;AAEA,WAAO,SAASC,OAAT,GAAmB;AACxBf,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsCH,gBAAtC;AACAb,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,qBAAlB,EAAyCF,cAAzC;AACAd,MAAAA,MAAM,CAACW,MAAP,CAAcK,GAAd,CAAkB,kBAAlB,EAAsCF,cAAtC;AACD,KAJD;AAKD,GAVD,EAUG,EAVH;;AAYA,QAAMD,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AAC3BN,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD;;AAIA,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAED,eAAxB;AAAyC,IAAA,GAAG,EAAED,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEW,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,GAAD,KACC;AACE,IAAA,SAAS,EAAE,CAACd,SAAS,IAAI,EAAd,EAAkBe,IAAlB,CAAuB,GAAvB,CADb;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEJ,UAAU,GAAG,CAAH,GAAO,CADrB;AAELK,MAAAA,aAAa,EAAE,MAFV;AAGLC,MAAAA,UAAU,EAAG,WAAUJ,iBAAkB;AAHpC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,SAAS,EAAEhB,GAAG,CAACqB,GADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAG,GAAE,CAAC,CAAC,CAAD,GAAKP,QAAN,IAAkB,GAAI,GADhC;AAELK,MAAAA,UAAU,EAAG,eAAcJ,iBAAkB;AAFxC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFJ,CADF;AAsBD,CA7CD;;AA+CAf,QAAQ,CAACsB,SAAT,GAAqB;AACnBrB,EAAAA,SAAS,EAAEJ,SAAS,CAAC0B;AADF,CAArB;AAIA,eAAevB,QAAf","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport PropTypes from 'prop-types';\nimport { NProgress } from '@tanem/react-nprogress';\n\nimport css from './Progress.module.scss';\n\nconst Progress = ({ className, loadingKey = 'n-progress' }) => {\n  const [isRouteChanging, setIsRouteChanging] = React.useState(false);\n\n  React.useEffect(() => {\n    Router.events.on('routeChangeStart', routeChangeStart);\n    Router.events.on('routeChangeComplete', routeChangeEnd);\n    Router.events.on('routeChangeError', routeChangeEnd);\n\n    return function cleanUp() {\n      Router.events.off('routeChangeStart', routeChangeStart);\n      Router.events.off('routeChangeComplete', routeChangeEnd);\n      Router.events.off('routeChangeError', routeChangeEnd);\n    };\n  }, []);\n\n  const routeChangeStart = () => {\n    setIsRouteChanging(true);\n  };\n\n  const routeChangeEnd = () => {\n    setIsRouteChanging(false);\n  };\n\n  return (\n    <NProgress isAnimating={isRouteChanging} key={loadingKey}>\n      {({ isFinished, progress, animationDuration }) => (\n        <div\n          className={[className || ''].join(' ')}\n          style={{\n            opacity: isFinished ? 0 : 1,\n            pointerEvents: 'none',\n            transition: `opacity ${animationDuration}ms linear`,\n          }}\n        >\n          <div\n            className={css.bar}\n            style={{\n              marginLeft: `${(-1 + progress) * 100}%`,\n              transition: `margin-left ${animationDuration}ms linear`,\n            }}\n          ></div>\n        </div>\n      )}\n    </NProgress>\n  );\n};\n\nProgress.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}